{"expireTime":9007200880575524000,"key":"transformer-remark-markdown-ast-5b0907554a201c513de41a27a4f21416--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Doc Websites & Repos","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":24,"offset":23},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":24,"offset":23},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/PYTHON_PRAC","children":[{"type":"text","value":"Python Practice","position":{"start":{"line":3,"column":6,"offset":30},"end":{"line":3,"column":21,"offset":45},"indent":[]}}],"position":{"start":{"line":3,"column":5,"offset":29},"end":{"line":3,"column":61,"offset":85},"indent":[]}}],"position":{"start":{"line":3,"column":5,"offset":29},"end":{"line":3,"column":61,"offset":85},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":25},"end":{"line":3,"column":61,"offset":85},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://lambda-resources.netlify.app/","children":[{"type":"text","value":"Lambda Bootcamp Website","position":{"start":{"line":4,"column":6,"offset":91},"end":{"line":4,"column":29,"offset":114},"indent":[]}}],"position":{"start":{"line":4,"column":5,"offset":90},"end":{"line":4,"column":69,"offset":154},"indent":[]}}],"position":{"start":{"line":4,"column":5,"offset":90},"end":{"line":4,"column":69,"offset":154},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":86},"end":{"line":4,"column":69,"offset":154},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/React_Notes_V3","children":[{"type":"text","value":"React Notes","position":{"start":{"line":5,"column":6,"offset":160},"end":{"line":5,"column":17,"offset":171},"indent":[]}}],"position":{"start":{"line":5,"column":5,"offset":159},"end":{"line":5,"column":60,"offset":214},"indent":[]}}],"position":{"start":{"line":5,"column":5,"offset":159},"end":{"line":5,"column":60,"offset":214},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":155},"end":{"line":5,"column":60,"offset":214},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Project-Showcase","children":[{"type":"text","value":"Project Showcase","position":{"start":{"line":6,"column":6,"offset":220},"end":{"line":6,"column":22,"offset":236},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":219},"end":{"line":6,"column":67,"offset":281},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":219},"end":{"line":6,"column":67,"offset":281},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":215},"end":{"line":6,"column":67,"offset":281},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/DS-ALGO-OFFICIAL","children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":7,"column":6,"offset":287},"end":{"line":7,"column":34,"offset":315},"indent":[]}}],"position":{"start":{"line":7,"column":5,"offset":286},"end":{"line":7,"column":79,"offset":360},"indent":[]}}],"position":{"start":{"line":7,"column":5,"offset":286},"end":{"line":7,"column":79,"offset":360},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":282},"end":{"line":7,"column":79,"offset":360},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Lambda-Resource-Static-Assets","children":[{"type":"text","value":"Lambda Site Static Content Server","position":{"start":{"line":8,"column":6,"offset":366},"end":{"line":8,"column":39,"offset":399},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":365},"end":{"line":8,"column":97,"offset":457},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":365},"end":{"line":8,"column":97,"offset":457},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":361},"end":{"line":8,"column":97,"offset":457},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/mini-project-showcase","children":[{"type":"text","value":"Mini-Project Showcase","position":{"start":{"line":9,"column":6,"offset":463},"end":{"line":9,"column":27,"offset":484},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":462},"end":{"line":9,"column":77,"offset":534},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":462},"end":{"line":9,"column":77,"offset":534},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":458},"end":{"line":9,"column":77,"offset":534},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Useful-Snippets-js","children":[{"type":"text","value":"Useful Snippets","position":{"start":{"line":10,"column":6,"offset":540},"end":{"line":10,"column":21,"offset":555},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":539},"end":{"line":10,"column":68,"offset":602},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":539},"end":{"line":10,"column":68,"offset":602},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":535},"end":{"line":10,"column":68,"offset":602},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Markdown-Templates","children":[{"type":"text","value":"Markdown Templates","position":{"start":{"line":11,"column":6,"offset":608},"end":{"line":11,"column":24,"offset":626},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":607},"end":{"line":11,"column":71,"offset":673},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":607},"end":{"line":11,"column":71,"offset":673},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":603},"end":{"line":11,"column":71,"offset":673},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/zumzi-chat-messenger","children":[{"type":"text","value":"Zumzi Video Conferencing App (mesibo api backend)","position":{"start":{"line":12,"column":6,"offset":679},"end":{"line":12,"column":55,"offset":728},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":678},"end":{"line":12,"column":104,"offset":777},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":678},"end":{"line":12,"column":104,"offset":777},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":674},"end":{"line":12,"column":104,"offset":777},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":25},"end":{"line":12,"column":104,"offset":777},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Core Concepts","position":{"start":{"line":16,"column":3,"offset":783},"end":{"line":16,"column":16,"offset":796},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":781},"end":{"line":16,"column":16,"offset":796},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"index","position":{"start":{"line":18,"column":3,"offset":800},"end":{"line":18,"column":8,"offset":805},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":798},"end":{"line":18,"column":8,"offset":805},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.","position":{"start":{"line":20,"column":1,"offset":807},"end":{"line":20,"column":175,"offset":981},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":807},"end":{"line":20,"column":175,"offset":981},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ","position":{"start":{"line":22,"column":1,"offset":983},"end":{"line":22,"column":319,"offset":1301},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/","children":[{"type":"text","value":"Mozilla Developer Network's website","position":{"start":{"line":22,"column":320,"offset":1302},"end":{"line":22,"column":355,"offset":1337},"indent":[]}}],"position":{"start":{"line":22,"column":319,"offset":1301},"end":{"line":22,"column":388,"offset":1370},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":22,"column":388,"offset":1370},"end":{"line":22,"column":389,"offset":1371},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":22,"column":389,"offset":1371},"end":{"line":22,"column":391,"offset":1373},"indent":[]}},{"type":"text","value":"MDN","position":{"start":{"line":22,"column":391,"offset":1373},"end":{"line":22,"column":394,"offset":1376},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":22,"column":394,"offset":1376},"end":{"line":22,"column":396,"offset":1378},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":22,"column":396,"offset":1378},"end":{"line":22,"column":397,"offset":1379},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":983},"end":{"line":22,"column":397,"offset":1379},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prefer ","position":{"start":{"line":24,"column":4,"offset":1384},"end":{"line":24,"column":11,"offset":1391},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":24,"column":11,"offset":1391},"end":{"line":24,"column":18,"offset":1398},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":24,"column":18,"offset":1398},"end":{"line":24,"column":23,"offset":1403},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":24,"column":23,"offset":1403},"end":{"line":24,"column":28,"offset":1408},"indent":[]}},{"type":"text","value":" over ","position":{"start":{"line":24,"column":28,"offset":1408},"end":{"line":24,"column":34,"offset":1414},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":24,"column":34,"offset":1414},"end":{"line":24,"column":39,"offset":1419},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1381},"end":{"line":24,"column":39,"offset":1419},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ","position":{"start":{"line":26,"column":1,"offset":1421},"end":{"line":26,"column":99,"offset":1519},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":26,"column":99,"offset":1519},"end":{"line":26,"column":104,"offset":1524},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":26,"column":104,"offset":1524},"end":{"line":26,"column":105,"offset":1525},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":1421},"end":{"line":26,"column":105,"offset":1525},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar myVariable = 5;","position":{"start":{"line":28,"column":1,"offset":1527},"end":{"line":30,"column":4,"offset":1555},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Both the ","position":{"start":{"line":32,"column":1,"offset":1557},"end":{"line":32,"column":10,"offset":1566},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":32,"column":10,"offset":1566},"end":{"line":32,"column":17,"offset":1573},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":32,"column":17,"offset":1573},"end":{"line":32,"column":22,"offset":1578},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":32,"column":22,"offset":1578},"end":{"line":32,"column":27,"offset":1583},"indent":[]}},{"type":"text","value":" statements also declare variables. They were introduced in ES6.","position":{"start":{"line":32,"column":27,"offset":1583},"end":{"line":32,"column":91,"offset":1647},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1557},"end":{"line":32,"column":91,"offset":1647},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":34,"column":1,"offset":1649},"end":{"line":34,"column":5,"offset":1653},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":34,"column":5,"offset":1653},"end":{"line":34,"column":12,"offset":1660},"indent":[]}},{"type":"text","value":" in cases where a variable is never re-assigned. Using ","position":{"start":{"line":34,"column":12,"offset":1660},"end":{"line":34,"column":67,"offset":1715},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":34,"column":67,"offset":1715},"end":{"line":34,"column":74,"offset":1722},"indent":[]}},{"type":"text","value":" makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.","position":{"start":{"line":34,"column":74,"offset":1722},"end":{"line":34,"column":211,"offset":1859},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1649},"end":{"line":34,"column":211,"offset":1859},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the variable will be re-assigned, use ","position":{"start":{"line":36,"column":1,"offset":1861},"end":{"line":36,"column":42,"offset":1902},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":36,"column":42,"offset":1902},"end":{"line":36,"column":47,"offset":1907},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":36,"column":47,"offset":1907},"end":{"line":36,"column":48,"offset":1908},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1861},"end":{"line":36,"column":48,"offset":1908},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We encourage the use of ","position":{"start":{"line":38,"column":1,"offset":1910},"end":{"line":38,"column":25,"offset":1934},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":38,"column":25,"offset":1934},"end":{"line":38,"column":32,"offset":1941},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":38,"column":32,"offset":1941},"end":{"line":38,"column":37,"offset":1946},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":38,"column":37,"offset":1946},"end":{"line":38,"column":42,"offset":1951},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":38,"column":42,"offset":1951},"end":{"line":38,"column":54,"offset":1963},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":38,"column":54,"offset":1963},"end":{"line":38,"column":59,"offset":1968},"indent":[]}},{"type":"text","value":". In addition to the restriction introduced by ","position":{"start":{"line":38,"column":59,"offset":1968},"end":{"line":38,"column":106,"offset":2015},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":38,"column":106,"offset":2015},"end":{"line":38,"column":113,"offset":2022},"indent":[]}},{"type":"text","value":", both ","position":{"start":{"line":38,"column":113,"offset":2022},"end":{"line":38,"column":120,"offset":2029},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":38,"column":120,"offset":2029},"end":{"line":38,"column":127,"offset":2036},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":38,"column":127,"offset":2036},"end":{"line":38,"column":132,"offset":2041},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":38,"column":132,"offset":2041},"end":{"line":38,"column":137,"offset":2046},"indent":[]}},{"type":"text","value":" are ","position":{"start":{"line":38,"column":137,"offset":2046},"end":{"line":38,"column":142,"offset":2051},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"block scoped","position":{"start":{"line":38,"column":143,"offset":2052},"end":{"line":38,"column":155,"offset":2064},"indent":[]}}],"position":{"start":{"line":38,"column":142,"offset":2051},"end":{"line":38,"column":156,"offset":2065},"indent":[]}},{"type":"text","value":" as opposed to ","position":{"start":{"line":38,"column":156,"offset":2065},"end":{"line":38,"column":171,"offset":2080},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function scoped","position":{"start":{"line":38,"column":172,"offset":2081},"end":{"line":38,"column":187,"offset":2096},"indent":[]}}],"position":{"start":{"line":38,"column":171,"offset":2080},"end":{"line":38,"column":188,"offset":2097},"indent":[]}},{"type":"text","value":". This scoping can help avoid unexpected bugs.","position":{"start":{"line":38,"column":188,"offset":2097},"end":{"line":38,"column":234,"offset":2143},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1910},"end":{"line":38,"column":234,"offset":2143},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":40,"column":4,"offset":2148},"end":{"line":40,"column":19,"offset":2163},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2145},"end":{"line":40,"column":19,"offset":2163},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:","position":{"start":{"line":42,"column":1,"offset":2165},"end":{"line":42,"column":121,"offset":2285},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2165},"end":{"line":42,"column":121,"offset":2285},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];","position":{"start":{"line":44,"column":1,"offset":2287},"end":{"line":49,"column":4,"offset":2385},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:","position":{"start":{"line":51,"column":1,"offset":2387},"end":{"line":51,"column":116,"offset":2502},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":2387},"end":{"line":51,"column":116,"offset":2502},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations = cities.map((city) => {\n  const popMM = (city.pop / 1000000).toFixed(2);\n  return popMM + ' million';\n});\nconsole.log(formattedPopulations);","position":{"start":{"line":53,"column":1,"offset":2504},"end":{"line":59,"column":4,"offset":2682},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that we must also explicitly specify a ","position":{"start":{"line":61,"column":1,"offset":2684},"end":{"line":61,"column":45,"offset":2728},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":61,"column":45,"offset":2728},"end":{"line":61,"column":53,"offset":2736},"indent":[]}},{"type":"text","value":" for the function.","position":{"start":{"line":61,"column":53,"offset":2736},"end":{"line":61,"column":71,"offset":2754},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2684},"end":{"line":61,"column":71,"offset":2754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, if we write a function body that is only a single line ","position":{"start":{"line":63,"column":1,"offset":2756},"end":{"line":63,"column":65,"offset":2820},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":63,"column":65,"offset":2820},"end":{"line":63,"column":67,"offset":2822},"indent":[]}},{"type":"text","value":"or single expression","position":{"start":{"line":63,"column":67,"offset":2822},"end":{"line":63,"column":87,"offset":2842},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":63,"column":87,"offset":2842},"end":{"line":63,"column":89,"offset":2844},"indent":[]}},{"type":"text","value":" we can use parentheses to delimit it:","position":{"start":{"line":63,"column":89,"offset":2844},"end":{"line":63,"column":127,"offset":2882},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2756},"end":{"line":63,"column":127,"offset":2882},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations2 = cities.map((city) => (\n  (city.pop / 1000000).toFixed(2) + ' million'\n));","position":{"start":{"line":65,"column":1,"offset":2884},"end":{"line":69,"column":4,"offset":2997},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notably, we don't use ","position":{"start":{"line":71,"column":1,"offset":2999},"end":{"line":71,"column":23,"offset":3021},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":71,"column":23,"offset":3021},"end":{"line":71,"column":31,"offset":3029},"indent":[]}},{"type":"text","value":" as it's implied.","position":{"start":{"line":71,"column":31,"offset":3029},"end":{"line":71,"column":48,"offset":3046},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2999},"end":{"line":71,"column":48,"offset":3046},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Furthermore, if your function body is terse you can write it like so:","position":{"start":{"line":73,"column":1,"offset":3048},"end":{"line":73,"column":70,"offset":3117},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":3048},"end":{"line":73,"column":70,"offset":3117},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const pops = cities.map(city => city.pop);\nconsole.log(pops);","position":{"start":{"line":75,"column":1,"offset":3119},"end":{"line":78,"column":4,"offset":3190},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:","position":{"start":{"line":80,"column":1,"offset":3192},"end":{"line":80,"column":110,"offset":3301},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":3192},"end":{"line":80,"column":110,"offset":3301},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const popsNoArrow = cities.map(function(city) { return city.pop });","position":{"start":{"line":82,"column":1,"offset":3303},"end":{"line":84,"column":4,"offset":3380},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Of greater benefit, though, is how arrow functions bind the ","position":{"start":{"line":86,"column":1,"offset":3382},"end":{"line":86,"column":61,"offset":3442},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":86,"column":61,"offset":3442},"end":{"line":86,"column":67,"offset":3448},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":86,"column":67,"offset":3448},"end":{"line":86,"column":75,"offset":3456},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":3382},"end":{"line":86,"column":75,"offset":3456},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The traditional JavaScript function declaration syntax ","position":{"start":{"line":88,"column":1,"offset":3458},"end":{"line":88,"column":56,"offset":3513},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":88,"column":56,"offset":3513},"end":{"line":88,"column":58,"offset":3515},"indent":[]}},{"type":"inlineCode","value":"function () {}","position":{"start":{"line":88,"column":58,"offset":3515},"end":{"line":88,"column":74,"offset":3531},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":88,"column":74,"offset":3531},"end":{"line":88,"column":76,"offset":3533},"indent":[]}},{"type":"text","value":" will bind ","position":{"start":{"line":88,"column":76,"offset":3533},"end":{"line":88,"column":87,"offset":3544},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":88,"column":87,"offset":3544},"end":{"line":88,"column":93,"offset":3550},"indent":[]}},{"type":"text","value":" in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:","position":{"start":{"line":88,"column":93,"offset":3550},"end":{"line":88,"column":211,"offset":3668},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":3458},"end":{"line":88,"column":211,"offset":3668},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":90,"column":1,"offset":3670},"end":{"line":119,"column":4,"offset":4158},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The method ","position":{"start":{"line":121,"column":1,"offset":4160},"end":{"line":121,"column":12,"offset":4171},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":121,"column":12,"offset":4171},"end":{"line":121,"column":26,"offset":4185},"indent":[]}},{"type":"text","value":" iterates over ","position":{"start":{"line":121,"column":26,"offset":4185},"end":{"line":121,"column":41,"offset":4200},"indent":[]}},{"type":"inlineCode","value":"this.songs","position":{"start":{"line":121,"column":41,"offset":4200},"end":{"line":121,"column":53,"offset":4212},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":121,"column":53,"offset":4212},"end":{"line":121,"column":59,"offset":4218},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":121,"column":59,"offset":4218},"end":{"line":121,"column":70,"offset":4229},"indent":[]}},{"type":"text","value":". In this context, ","position":{"start":{"line":121,"column":70,"offset":4229},"end":{"line":121,"column":89,"offset":4248},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":121,"column":89,"offset":4248},"end":{"line":121,"column":95,"offset":4254},"indent":[]}},{"type":"text","value":" is bound to the object ","position":{"start":{"line":121,"column":95,"offset":4254},"end":{"line":121,"column":119,"offset":4278},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":121,"column":119,"offset":4278},"end":{"line":121,"column":121,"offset":4280},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":121,"column":121,"offset":4280},"end":{"line":121,"column":130,"offset":4289},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":121,"column":130,"offset":4289},"end":{"line":121,"column":132,"offset":4291},"indent":[]}},{"type":"text","value":" as expected. However, the anonymous function passed to ","position":{"start":{"line":121,"column":132,"offset":4291},"end":{"line":121,"column":188,"offset":4347},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":121,"column":188,"offset":4347},"end":{"line":121,"column":199,"offset":4358},"indent":[]}},{"type":"text","value":" binds its internal ","position":{"start":{"line":121,"column":199,"offset":4358},"end":{"line":121,"column":219,"offset":4378},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":121,"column":219,"offset":4378},"end":{"line":121,"column":225,"offset":4384},"indent":[]}},{"type":"text","value":" to the global object. As such, ","position":{"start":{"line":121,"column":225,"offset":4384},"end":{"line":121,"column":257,"offset":4416},"indent":[]}},{"type":"inlineCode","value":"this.printSong(song)","position":{"start":{"line":121,"column":257,"offset":4416},"end":{"line":121,"column":279,"offset":4438},"indent":[]}},{"type":"text","value":" calls the function declared at the top of the example, ","position":{"start":{"line":121,"column":279,"offset":4438},"end":{"line":121,"column":335,"offset":4494},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":121,"column":336,"offset":4495},"end":{"line":121,"column":339,"offset":4498},"indent":[]}}],"position":{"start":{"line":121,"column":335,"offset":4494},"end":{"line":121,"column":340,"offset":4499},"indent":[]}},{"type":"text","value":" the method on ","position":{"start":{"line":121,"column":340,"offset":4499},"end":{"line":121,"column":355,"offset":4514},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":121,"column":355,"offset":4514},"end":{"line":121,"column":364,"offset":4523},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":121,"column":364,"offset":4523},"end":{"line":121,"column":365,"offset":4524},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":4160},"end":{"line":121,"column":365,"offset":4524},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ","position":{"start":{"line":123,"column":1,"offset":4526},"end":{"line":123,"column":119,"offset":4644},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"capturing the ","position":{"start":{"line":123,"column":121,"offset":4646},"end":{"line":123,"column":135,"offset":4660},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":123,"column":135,"offset":4660},"end":{"line":123,"column":141,"offset":4666},"indent":[]}},{"type":"text","value":" value of the enclosing context","position":{"start":{"line":123,"column":141,"offset":4666},"end":{"line":123,"column":172,"offset":4697},"indent":[]}}],"position":{"start":{"line":123,"column":119,"offset":4644},"end":{"line":123,"column":174,"offset":4699},"indent":[]}},{"type":"text","value":". Using an arrow function for ","position":{"start":{"line":123,"column":174,"offset":4699},"end":{"line":123,"column":204,"offset":4729},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":123,"column":204,"offset":4729},"end":{"line":123,"column":218,"offset":4743},"indent":[]}},{"type":"text","value":" has the expected result:","position":{"start":{"line":123,"column":218,"offset":4743},"end":{"line":123,"column":243,"offset":4768},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4526},"end":{"line":123,"column":243,"offset":4768},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":125,"column":1,"offset":4770},"end":{"line":135,"column":4,"offset":4909},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For this reason, throughout the book we use arrow functions for all anonymous functions.","position":{"start":{"line":137,"column":1,"offset":4911},"end":{"line":137,"column":89,"offset":4999},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4911},"end":{"line":137,"column":89,"offset":4999},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Modules","position":{"start":{"line":139,"column":4,"offset":5004},"end":{"line":139,"column":11,"offset":5011},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":5001},"end":{"line":139,"column":11,"offset":5011},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ES6 formally supports modules using the ","position":{"start":{"line":141,"column":1,"offset":5013},"end":{"line":141,"column":41,"offset":5053},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":141,"column":41,"offset":5053},"end":{"line":141,"column":49,"offset":5061},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":141,"column":49,"offset":5061},"end":{"line":141,"column":50,"offset":5062},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":141,"column":50,"offset":5062},"end":{"line":141,"column":58,"offset":5070},"indent":[]}},{"type":"text","value":" syntax.","position":{"start":{"line":141,"column":58,"offset":5070},"end":{"line":141,"column":66,"offset":5078},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":5013},"end":{"line":141,"column":66,"offset":5078},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Named exports","position":{"start":{"line":143,"column":3,"offset":5082},"end":{"line":143,"column":16,"offset":5095},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":5080},"end":{"line":143,"column":18,"offset":5097},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":5080},"end":{"line":143,"column":18,"offset":5097},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inside any file, you can use ","position":{"start":{"line":145,"column":1,"offset":5099},"end":{"line":145,"column":30,"offset":5128},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":145,"column":30,"offset":5128},"end":{"line":145,"column":38,"offset":5136},"indent":[]}},{"type":"text","value":" to specify a variable the module should expose. Here's an example of a file that exports two functions:","position":{"start":{"line":145,"column":38,"offset":5136},"end":{"line":145,"column":142,"offset":5240},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":5099},"end":{"line":145,"column":142,"offset":5240},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const sayHi = () => (console.log('Hi!'));\nexport const sayBye = () => (console.log('Bye!'));\n\nconst saySomething = () => (console.log('Something!'));","position":{"start":{"line":147,"column":1,"offset":5242},"end":{"line":152,"column":4,"offset":5408},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, anywhere we wanted to use these functions we could use ","position":{"start":{"line":154,"column":1,"offset":5410},"end":{"line":154,"column":61,"offset":5470},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":154,"column":61,"offset":5470},"end":{"line":154,"column":69,"offset":5478},"indent":[]}},{"type":"text","value":". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:","position":{"start":{"line":154,"column":69,"offset":5478},"end":{"line":154,"column":226,"offset":5635},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5410},"end":{"line":154,"column":226,"offset":5635},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();","position":{"start":{"line":156,"column":1,"offset":5637},"end":{"line":161,"column":4,"offset":5711},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Importantly, the function that was ","position":{"start":{"line":163,"column":1,"offset":5713},"end":{"line":163,"column":36,"offset":5748},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":163,"column":37,"offset":5749},"end":{"line":163,"column":40,"offset":5752},"indent":[]}}],"position":{"start":{"line":163,"column":36,"offset":5748},"end":{"line":163,"column":41,"offset":5753},"indent":[]}},{"type":"text","value":" exported ","position":{"start":{"line":163,"column":41,"offset":5753},"end":{"line":163,"column":51,"offset":5763},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":163,"column":51,"offset":5763},"end":{"line":163,"column":53,"offset":5765},"indent":[]}},{"type":"inlineCode","value":"saySomething","position":{"start":{"line":163,"column":53,"offset":5765},"end":{"line":163,"column":67,"offset":5779},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":163,"column":67,"offset":5779},"end":{"line":163,"column":69,"offset":5781},"indent":[]}},{"type":"text","value":" is unavailable outside of the module.","position":{"start":{"line":163,"column":69,"offset":5781},"end":{"line":163,"column":107,"offset":5819},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":5713},"end":{"line":163,"column":107,"offset":5819},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Also note that we supply a ","position":{"start":{"line":165,"column":1,"offset":5821},"end":{"line":165,"column":28,"offset":5848},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"relative path","position":{"start":{"line":165,"column":30,"offset":5850},"end":{"line":165,"column":43,"offset":5863},"indent":[]}}],"position":{"start":{"line":165,"column":28,"offset":5848},"end":{"line":165,"column":45,"offset":5865},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":165,"column":45,"offset":5865},"end":{"line":165,"column":49,"offset":5869},"indent":[]}},{"type":"inlineCode","value":"from","position":{"start":{"line":165,"column":49,"offset":5869},"end":{"line":165,"column":55,"offset":5875},"indent":[]}},{"type":"text","value":", indicating that the ES6 module is a local file as opposed to an npm package.","position":{"start":{"line":165,"column":55,"offset":5875},"end":{"line":165,"column":133,"offset":5953},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":5821},"end":{"line":165,"column":133,"offset":5953},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of inserting an ","position":{"start":{"line":167,"column":1,"offset":5955},"end":{"line":167,"column":25,"offset":5979},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":167,"column":25,"offset":5979},"end":{"line":167,"column":33,"offset":5987},"indent":[]}},{"type":"text","value":" before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:","position":{"start":{"line":167,"column":33,"offset":5987},"end":{"line":167,"column":151,"offset":6105},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5955},"end":{"line":167,"column":151,"offset":6105},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => (console.log('Hi!'));\nconst sayBye = () => (console.log('Bye!'));\n\nconst saySomething = () => (console.log('Something!'));\n\nexport { sayHi, sayBye };","position":{"start":{"line":169,"column":1,"offset":6107},"end":{"line":176,"column":4,"offset":6286},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ","position":{"start":{"line":178,"column":1,"offset":6288},"end":{"line":178,"column":116,"offset":6403},"indent":[]}},{"type":"inlineCode","value":"import * as <Namespace>","position":{"start":{"line":178,"column":116,"offset":6403},"end":{"line":178,"column":141,"offset":6428},"indent":[]}},{"type":"text","value":" syntax:","position":{"start":{"line":178,"column":141,"offset":6428},"end":{"line":178,"column":149,"offset":6436},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":6288},"end":{"line":178,"column":149,"offset":6436},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();","position":{"start":{"line":180,"column":1,"offset":6438},"end":{"line":188,"column":4,"offset":6557},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Default export","position":{"start":{"line":190,"column":3,"offset":6561},"end":{"line":190,"column":17,"offset":6575},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6559},"end":{"line":190,"column":19,"offset":6577},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6559},"end":{"line":190,"column":19,"offset":6577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The other type of export is a default export. A module can only contain one default export:","position":{"start":{"line":192,"column":1,"offset":6579},"end":{"line":192,"column":92,"offset":6670},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":6579},"end":{"line":192,"column":92,"offset":6670},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => (console.log('Hi!'));\nconst sayBye = () => (console.log('Bye!'));\n\nconst saySomething = () => (console.log('Something!'));\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;","position":{"start":{"line":194,"column":1,"offset":6672},"end":{"line":203,"column":4,"offset":6889},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:","position":{"start":{"line":205,"column":1,"offset":6891},"end":{"line":205,"column":148,"offset":7038},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":6891},"end":{"line":205,"column":148,"offset":7038},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();","position":{"start":{"line":207,"column":1,"offset":7040},"end":{"line":212,"column":4,"offset":7126},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ","position":{"start":{"line":214,"column":1,"offset":7128},"end":{"line":214,"column":107,"offset":7234},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":214,"column":107,"offset":7234},"end":{"line":214,"column":118,"offset":7245},"indent":[]}},{"type":"text","value":", you can import ","position":{"start":{"line":214,"column":118,"offset":7245},"end":{"line":214,"column":135,"offset":7262},"indent":[]}},{"type":"inlineCode","value":"ReactDOM","position":{"start":{"line":214,"column":135,"offset":7262},"end":{"line":214,"column":145,"offset":7272},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":214,"column":145,"offset":7272},"end":{"line":214,"column":146,"offset":7273},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":214,"column":146,"offset":7273},"end":{"line":214,"column":148,"offset":7275},"indent":[]}},{"type":"text","value":"a default export","position":{"start":{"line":214,"column":148,"offset":7275},"end":{"line":214,"column":164,"offset":7291},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":214,"column":164,"offset":7291},"end":{"line":214,"column":166,"offset":7293},"indent":[]}},{"type":"text","value":" like this:","position":{"start":{"line":214,"column":166,"offset":7293},"end":{"line":214,"column":177,"offset":7304},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":7128},"end":{"line":214,"column":177,"offset":7304},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import ReactDOM from 'react-dom';\n\nReactDOM.render(\n\n);","position":{"start":{"line":216,"column":1,"offset":7306},"end":{"line":222,"column":4,"offset":7371},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or, if you're only going to use the ","position":{"start":{"line":224,"column":1,"offset":7373},"end":{"line":224,"column":37,"offset":7409},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":224,"column":37,"offset":7409},"end":{"line":224,"column":47,"offset":7419},"indent":[]}},{"type":"text","value":" function, you can import the named ","position":{"start":{"line":224,"column":47,"offset":7419},"end":{"line":224,"column":83,"offset":7455},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":224,"column":83,"offset":7455},"end":{"line":224,"column":93,"offset":7465},"indent":[]}},{"type":"text","value":" function like this:","position":{"start":{"line":224,"column":93,"offset":7465},"end":{"line":224,"column":113,"offset":7485},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":7373},"end":{"line":224,"column":113,"offset":7485},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { render } from 'react-dom';\n\nrender(\n\n);","position":{"start":{"line":226,"column":1,"offset":7487},"end":{"line":232,"column":4,"offset":7545},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To achieve this flexibility, the export implementation for ","position":{"start":{"line":234,"column":1,"offset":7547},"end":{"line":234,"column":60,"offset":7606},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":234,"column":60,"offset":7606},"end":{"line":234,"column":71,"offset":7617},"indent":[]}},{"type":"text","value":" looks something like this:","position":{"start":{"line":234,"column":71,"offset":7617},"end":{"line":234,"column":98,"offset":7644},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":7547},"end":{"line":234,"column":98,"offset":7644},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const render = (component, target) => {\n\n};\n\nconst ReactDOM = {\n  render,\n\n};\n\nexport default ReactDOM;","position":{"start":{"line":236,"column":1,"offset":7646},"end":{"line":247,"column":4,"offset":7766},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to play around with the module syntax, check out the folder ","position":{"start":{"line":249,"column":1,"offset":7768},"end":{"line":249,"column":73,"offset":7840},"indent":[]}},{"type":"inlineCode","value":"code/webpack/es6-modules","position":{"start":{"line":249,"column":73,"offset":7840},"end":{"line":249,"column":99,"offset":7866},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":249,"column":99,"offset":7866},"end":{"line":249,"column":100,"offset":7867},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":7768},"end":{"line":249,"column":100,"offset":7867},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more reading on ES6 modules, see this article from Mozilla: \"","position":{"start":{"line":251,"column":1,"offset":7869},"end":{"line":251,"column":66,"offset":7934},"indent":[]}},{"type":"link","title":null,"url":"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/","children":[{"type":"text","value":"ES6 in Depth: Modules","position":{"start":{"line":251,"column":67,"offset":7935},"end":{"line":251,"column":88,"offset":7956},"indent":[]}}],"position":{"start":{"line":251,"column":66,"offset":7934},"end":{"line":251,"column":146,"offset":8014},"indent":[]}},{"type":"text","value":"\".","position":{"start":{"line":251,"column":146,"offset":8014},"end":{"line":251,"column":148,"offset":8016},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":7869},"end":{"line":251,"column":148,"offset":8016},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":253,"column":4,"offset":8021},"end":{"line":253,"column":21,"offset":8038},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":8018},"end":{"line":253,"column":21,"offset":8038},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":255,"column":1,"offset":8040},"end":{"line":255,"column":8,"offset":8047},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":255,"column":8,"offset":8047},"end":{"line":255,"column":25,"offset":8064},"indent":[]}},{"type":"text","value":" often throughout the book. We use it in areas where we want to create a modified version of an existing object.","position":{"start":{"line":255,"column":25,"offset":8064},"end":{"line":255,"column":137,"offset":8176},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":8040},"end":{"line":255,"column":137,"offset":8176},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":257,"column":1,"offset":8178},"end":{"line":257,"column":18,"offset":8195},"indent":[]}},{"type":"text","value":" accepts any number of objects as arguments. When the function receives two arguments, it ","position":{"start":{"line":257,"column":18,"offset":8195},"end":{"line":257,"column":108,"offset":8285},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"copies","position":{"start":{"line":257,"column":109,"offset":8286},"end":{"line":257,"column":115,"offset":8292},"indent":[]}}],"position":{"start":{"line":257,"column":108,"offset":8285},"end":{"line":257,"column":116,"offset":8293},"indent":[]}},{"type":"text","value":" the properties of the second object onto the first, like so:","position":{"start":{"line":257,"column":116,"offset":8293},"end":{"line":257,"column":177,"offset":8354},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":8178},"end":{"line":257,"column":177,"offset":8354},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);","position":{"start":{"line":259,"column":1,"offset":8356},"end":{"line":264,"column":4,"offset":8482},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is idiomatic to pass in three arguments to ","position":{"start":{"line":266,"column":1,"offset":8484},"end":{"line":266,"column":47,"offset":8530},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":266,"column":47,"offset":8530},"end":{"line":266,"column":64,"offset":8547},"indent":[]}},{"type":"text","value":". The first argument is a new JavaScript object, the one that ","position":{"start":{"line":266,"column":64,"offset":8547},"end":{"line":266,"column":126,"offset":8609},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":266,"column":126,"offset":8609},"end":{"line":266,"column":143,"offset":8626},"indent":[]}},{"type":"text","value":" will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:","position":{"start":{"line":266,"column":143,"offset":8626},"end":{"line":266,"column":280,"offset":8763},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8484},"end":{"line":266,"column":280,"offset":8763},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const coffeeWithMilk = Object.assign({}, coffee, { milk: true });","position":{"start":{"line":268,"column":1,"offset":8765},"end":{"line":270,"column":4,"offset":8840},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":272,"column":1,"offset":8842},"end":{"line":272,"column":18,"offset":8859},"indent":[]}},{"type":"text","value":" is a handy method for working with \"immutable\" JavaScript objects.","position":{"start":{"line":272,"column":18,"offset":8859},"end":{"line":272,"column":85,"offset":8926},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":8842},"end":{"line":272,"column":85,"offset":8926},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Template literals","position":{"start":{"line":274,"column":4,"offset":8931},"end":{"line":274,"column":21,"offset":8948},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":8928},"end":{"line":274,"column":21,"offset":8948},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5 JavaScript, you'd interpolate variables into strings like this:","position":{"start":{"line":276,"column":1,"offset":8950},"end":{"line":276,"column":71,"offset":9020},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":8950},"end":{"line":276,"column":71,"offset":9020},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"var greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';","position":{"start":{"line":278,"column":1,"offset":9022},"end":{"line":280,"column":4,"offset":9106},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6 template literals, we can create the same string like this:","position":{"start":{"line":282,"column":1,"offset":9108},"end":{"line":282,"column":69,"offset":9176},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9108},"end":{"line":282,"column":69,"offset":9176},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const greeting = `Hello, ${user}! It is ${degF} degrees outside.`;","position":{"start":{"line":284,"column":1,"offset":9178},"end":{"line":286,"column":4,"offset":9254},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The spread operator ","position":{"start":{"line":288,"column":4,"offset":9259},"end":{"line":288,"column":24,"offset":9279},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":288,"column":24,"offset":9279},"end":{"line":288,"column":26,"offset":9281},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":288,"column":26,"offset":9281},"end":{"line":288,"column":31,"offset":9286},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":288,"column":31,"offset":9286},"end":{"line":288,"column":33,"offset":9288},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":9256},"end":{"line":288,"column":33,"offset":9288},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In arrays, the ellipsis ","position":{"start":{"line":290,"column":1,"offset":9290},"end":{"line":290,"column":25,"offset":9314},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":290,"column":25,"offset":9314},"end":{"line":290,"column":30,"offset":9319},"indent":[]}},{"type":"text","value":" operator will ","position":{"start":{"line":290,"column":30,"offset":9319},"end":{"line":290,"column":45,"offset":9334},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"expand","position":{"start":{"line":290,"column":46,"offset":9335},"end":{"line":290,"column":52,"offset":9341},"indent":[]}}],"position":{"start":{"line":290,"column":45,"offset":9334},"end":{"line":290,"column":53,"offset":9342},"indent":[]}},{"type":"text","value":" the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.","position":{"start":{"line":290,"column":53,"offset":9342},"end":{"line":290,"column":200,"offset":9489},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":9290},"end":{"line":290,"column":200,"offset":9489},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example:","position":{"start":{"line":292,"column":1,"offset":9491},"end":{"line":292,"column":20,"offset":9510},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":9491},"end":{"line":292,"column":20,"offset":9510},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);","position":{"start":{"line":294,"column":1,"offset":9512},"end":{"line":300,"column":4,"offset":9618},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice how this is different than if we wrote:","position":{"start":{"line":302,"column":1,"offset":9620},"end":{"line":302,"column":47,"offset":9666},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":9620},"end":{"line":302,"column":47,"offset":9666},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const d = [ a, b, 7, 8, 9 ];\nconsole.log(d);","position":{"start":{"line":304,"column":1,"offset":9668},"end":{"line":307,"column":4,"offset":9722},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Enhanced object literals","position":{"start":{"line":309,"column":4,"offset":9727},"end":{"line":309,"column":28,"offset":9751},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":9724},"end":{"line":309,"column":28,"offset":9751},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, all objects were required to have explicit key and value declarations:","position":{"start":{"line":311,"column":1,"offset":9753},"end":{"line":311,"column":79,"offset":9831},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":9753},"end":{"line":311,"column":79,"offset":9831},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const explicit = {\n  getState: getState,\n  dispatch: dispatch,\n};","position":{"start":{"line":313,"column":1,"offset":9833},"end":{"line":318,"column":4,"offset":9908},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, you can use this terser syntax whenever the property name and variable name are the same:","position":{"start":{"line":320,"column":1,"offset":9910},"end":{"line":320,"column":98,"offset":10007},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":9910},"end":{"line":320,"column":98,"offset":10007},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const implicit = {\n  getState,\n  dispatch,\n};","position":{"start":{"line":322,"column":1,"offset":10009},"end":{"line":327,"column":4,"offset":10064},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.","position":{"start":{"line":329,"column":1,"offset":10066},"end":{"line":329,"column":161,"offset":10226},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":10066},"end":{"line":329,"column":161,"offset":10226},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Default arguments","position":{"start":{"line":331,"column":4,"offset":10231},"end":{"line":331,"column":21,"offset":10248},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":10228},"end":{"line":331,"column":21,"offset":10248},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6, you can specify a default value for an argument in the case that it is ","position":{"start":{"line":333,"column":1,"offset":10250},"end":{"line":333,"column":82,"offset":10331},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":333,"column":82,"offset":10331},"end":{"line":333,"column":93,"offset":10342},"indent":[]}},{"type":"text","value":" when the function is called.","position":{"start":{"line":333,"column":93,"offset":10342},"end":{"line":333,"column":122,"offset":10371},"indent":[]}}],"position":{"start":{"line":333,"column":1,"offset":10250},"end":{"line":333,"column":122,"offset":10371},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This:","position":{"start":{"line":335,"column":1,"offset":10373},"end":{"line":335,"column":6,"offset":10378},"indent":[]}}],"position":{"start":{"line":335,"column":1,"offset":10373},"end":{"line":335,"column":6,"offset":10378},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}","position":{"start":{"line":337,"column":1,"offset":10380},"end":{"line":344,"column":4,"offset":10490},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Can be written as this:","position":{"start":{"line":346,"column":1,"offset":10492},"end":{"line":346,"column":24,"offset":10515},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":10492},"end":{"line":346,"column":24,"offset":10515},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function divide(a, b = 1) {\n  return a / b;\n}","position":{"start":{"line":348,"column":1,"offset":10517},"end":{"line":352,"column":4,"offset":10572},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In both cases, using the function looks like this:","position":{"start":{"line":354,"column":1,"offset":10574},"end":{"line":354,"column":51,"offset":10624},"indent":[]}}],"position":{"start":{"line":354,"column":1,"offset":10574},"end":{"line":354,"column":51,"offset":10624},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);","position":{"start":{"line":356,"column":1,"offset":10626},"end":{"line":362,"column":4,"offset":10687},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Whenever the argument ","position":{"start":{"line":364,"column":1,"offset":10689},"end":{"line":364,"column":23,"offset":10711},"indent":[]}},{"type":"inlineCode","value":"b","position":{"start":{"line":364,"column":23,"offset":10711},"end":{"line":364,"column":26,"offset":10714},"indent":[]}},{"type":"text","value":" in the example above is ","position":{"start":{"line":364,"column":26,"offset":10714},"end":{"line":364,"column":51,"offset":10739},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":364,"column":51,"offset":10739},"end":{"line":364,"column":62,"offset":10750},"indent":[]}},{"type":"text","value":", the default argument is used. Note that ","position":{"start":{"line":364,"column":62,"offset":10750},"end":{"line":364,"column":104,"offset":10792},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":364,"column":104,"offset":10792},"end":{"line":364,"column":110,"offset":10798},"indent":[]}},{"type":"text","value":" will not use the default argument:","position":{"start":{"line":364,"column":110,"offset":10798},"end":{"line":364,"column":145,"offset":10833},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":10689},"end":{"line":364,"column":145,"offset":10833},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, null);","position":{"start":{"line":366,"column":1,"offset":10835},"end":{"line":368,"column":4,"offset":10862},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Destructuring assignments","position":{"start":{"line":370,"column":4,"offset":10867},"end":{"line":370,"column":29,"offset":10892},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":10864},"end":{"line":370,"column":29,"offset":10892},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For arrays","position":{"start":{"line":372,"column":5,"offset":10898},"end":{"line":372,"column":15,"offset":10908},"indent":[]}}],"position":{"start":{"line":372,"column":1,"offset":10894},"end":{"line":372,"column":15,"offset":10908},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, extracting and assigning multiple elements from an array looked like this:","position":{"start":{"line":374,"column":1,"offset":10910},"end":{"line":374,"column":83,"offset":10992},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":10910},"end":{"line":374,"column":83,"offset":10992},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];","position":{"start":{"line":376,"column":1,"offset":10994},"end":{"line":380,"column":4,"offset":11099},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, we can use the destructuring syntax to accomplish the same task like this:","position":{"start":{"line":382,"column":1,"offset":11101},"end":{"line":382,"column":83,"offset":11183},"indent":[]}}],"position":{"start":{"line":382,"column":1,"offset":11101},"end":{"line":382,"column":83,"offset":11183},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const [ veg1, veg2 ] = [ 'asparagus', 'broccoli', 'onion' ];\nconsole.log(veg1);\nconsole.log(veg2);","position":{"start":{"line":384,"column":1,"offset":11185},"end":{"line":388,"column":4,"offset":11293},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ","position":{"start":{"line":390,"column":1,"offset":11295},"end":{"line":390,"column":134,"offset":11428},"indent":[]}},{"type":"inlineCode","value":"'onion'","position":{"start":{"line":390,"column":134,"offset":11428},"end":{"line":390,"column":143,"offset":11437},"indent":[]}},{"type":"text","value":" is ignored and has no variable bound to it.","position":{"start":{"line":390,"column":143,"offset":11437},"end":{"line":390,"column":187,"offset":11481},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":11295},"end":{"line":390,"column":187,"offset":11481},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For objects","position":{"start":{"line":392,"column":5,"offset":11487},"end":{"line":392,"column":16,"offset":11498},"indent":[]}}],"position":{"start":{"line":392,"column":1,"offset":11483},"end":{"line":392,"column":16,"offset":11498},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can do something similar for extracting object properties into variables:","position":{"start":{"line":394,"column":1,"offset":11500},"end":{"line":394,"column":77,"offset":11576},"indent":[]}}],"position":{"start":{"line":394,"column":1,"offset":11500},"end":{"line":394,"column":77,"offset":11576},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const smoothie = {\n  fats: [ 'avocado', 'peanut butter', 'greek yogurt' ],\n  liquids: [ 'almond milk' ],\n  greens: [ 'spinach' ],\n  fruits: [ 'blueberry', 'banana' ],\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);","position":{"start":{"line":396,"column":1,"offset":11578},"end":{"line":408,"column":4,"offset":11840},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameter context matching","position":{"start":{"line":410,"column":5,"offset":11846},"end":{"line":410,"column":31,"offset":11872},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":11842},"end":{"line":410,"column":31,"offset":11872},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:","position":{"start":{"line":412,"column":1,"offset":11874},"end":{"line":412,"column":121,"offset":11994},"indent":[]}}],"position":{"start":{"line":412,"column":1,"offset":11874},"end":{"line":412,"column":121,"offset":11994},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const containsSpinach = ({ greens }) => {\n  if (greens.find(g => g === 'spinach')) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\ncontainsSpinach(smoothie);","position":{"start":{"line":414,"column":1,"offset":11996},"end":{"line":424,"column":4,"offset":12171},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We do this often with functional React components:","position":{"start":{"line":426,"column":1,"offset":12173},"end":{"line":426,"column":51,"offset":12223},"indent":[]}}],"position":{"start":{"line":426,"column":1,"offset":12173},"end":{"line":426,"column":51,"offset":12223},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const IngredientList = ({ ingredients, onClick }) => (\n  <ul className='IngredientList'>\n    {\n      ingredients.map(i => (\n        <li\n          key={i.id}\n          onClick={() => onClick(i.id)}\n          className='item'\n        >\n          {i.name}\n        </li>\n      ))\n    }\n  </ul>\n)","position":{"start":{"line":428,"column":1,"offset":12225},"end":{"line":444,"column":4,"offset":12526},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here, we use destructuring to extract the props into variables ","position":{"start":{"line":446,"column":1,"offset":12528},"end":{"line":446,"column":64,"offset":12591},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":446,"column":64,"offset":12591},"end":{"line":446,"column":66,"offset":12593},"indent":[]}},{"type":"inlineCode","value":"ingredients","position":{"start":{"line":446,"column":66,"offset":12593},"end":{"line":446,"column":79,"offset":12606},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":446,"column":79,"offset":12606},"end":{"line":446,"column":84,"offset":12611},"indent":[]}},{"type":"inlineCode","value":"onClick","position":{"start":{"line":446,"column":84,"offset":12611},"end":{"line":446,"column":93,"offset":12620},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":446,"column":93,"offset":12620},"end":{"line":446,"column":95,"offset":12622},"indent":[]}},{"type":"text","value":" that we then use inside the component's function body.","position":{"start":{"line":446,"column":95,"offset":12622},"end":{"line":446,"column":150,"offset":12677},"indent":[]}}],"position":{"start":{"line":446,"column":1,"offset":12528},"end":{"line":446,"column":150,"offset":12677},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":447,"column":1,"offset":12678}}}}