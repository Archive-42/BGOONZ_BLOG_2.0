{
    "expireTime": 9007200888440672000,
    "key": "transformer-remark-markdown-html-ast-d8d619f07c71c94d83f068d71be19022--",
    "val": {
        "type": "root",
        "children": [
            {
                "type": "element",
                "tagName": "h1",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Go To Sitemap: ",
                        "position": { "start": { "line": 1, "column": 3, "offset": 2 }, "end": { "line": 1, "column": 18, "offset": 17 } }
                    },
                    {
                        "type": "element",
                        "tagName": "a",
                        "properties": { "href": "./docs/sitemap/" },
                        "children": [
                            {
                                "type": "text",
                                "value": "Go Now -->",
                                "position": { "start": { "line": 1, "column": 19, "offset": 18 }, "end": { "line": 1, "column": 29, "offset": 28 } }
                            }
                        ],
                        "position": { "start": { "line": 1, "column": 18, "offset": 17 }, "end": { "line": 1, "column": 47, "offset": 46 } }
                    }
                ],
                "position": { "start": { "line": 1, "column": 1, "offset": 0 }, "end": { "line": 1, "column": 47, "offset": 46 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "hr",
                "properties": {},
                "children": [],
                "position": { "start": { "line": 3, "column": 1, "offset": 48 }, "end": { "line": 3, "column": 4, "offset": 51 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "raw",
                "value": "<div id=\"search\"></div>",
                "position": { "start": { "line": 5, "column": 1, "offset": 53 }, "end": { "line": 5, "column": 24, "offset": 76 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "<",
                        "position": { "start": { "line": 7, "column": 1, "offset": 78 }, "end": { "line": 7, "column": 3, "offset": 80 } }
                    },
                    {
                        "type": "text",
                        "value": "div id=\"search\">",
                        "position": { "start": { "line": 7, "column": 3, "offset": 80 }, "end": { "line": 7, "column": 19, "offset": 96 } }
                    },
                    {
                        "type": "raw",
                        "value": "</div>",
                        "position": { "start": { "line": 7, "column": 19, "offset": 96 }, "end": { "line": 7, "column": 25, "offset": 102 } }
                    }
                ],
                "position": { "start": { "line": 7, "column": 1, "offset": 78 }, "end": { "line": 7, "column": 25, "offset": 102 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h1",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Actual Docs:",
                        "position": { "start": { "line": 9, "column": 3, "offset": 106 }, "end": { "line": 9, "column": 15, "offset": 118 } }
                    }
                ],
                "position": { "start": { "line": 9, "column": 1, "offset": 104 }, "end": { "line": 9, "column": 15, "offset": 118 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "raw",
                "value": "<br>",
                "position": { "start": { "line": 11, "column": 1, "offset": 120 }, "end": { "line": 11, "column": 5, "offset": 124 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "raw",
                "value": "<br>\n       <div id=\"search\" />\n<br>\n               <div id=\"search\" className=\"inner\"></div>\n<br>\n<h1>  Docs</h1>\n<br>",
                "position": { "start": { "line": 13, "column": 1, "offset": 126 }, "end": { "line": 19, "column": 5, "offset": 245 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "raw",
                "value": "<iframe class=\"inner\" src=\"https://docs42.netlify.app/#C:/MY-WEB-DEV/__NEW_GIT/DOCS/docs-collection\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
                "position": { "start": { "line": 21, "column": 1, "offset": 247 }, "end": { "line": 23, "column": 82, "offset": 657 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "raw",
                "value": "<br>",
                "position": { "start": { "line": 25, "column": 1, "offset": 659 }, "end": { "line": 25, "column": 5, "offset": 663 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "hr",
                "properties": {},
                "children": [],
                "position": { "start": { "line": 27, "column": 1, "offset": 665 }, "end": { "line": 27, "column": 4, "offset": 668 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Doc Websites & Repos",
                        "position": { "start": { "line": 29, "column": 4, "offset": 673 }, "end": { "line": 29, "column": 24, "offset": 693 } }
                    }
                ],
                "position": { "start": { "line": 29, "column": 1, "offset": 670 }, "end": { "line": 29, "column": 24, "offset": 693 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "ul",
                "properties": {},
                "children": [
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/PYTHON_PRAC" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Python Practice",
                                        "position": { "start": { "line": 31, "column": 6, "offset": 700 }, "end": { "line": 31, "column": 21, "offset": 715 } }
                                    }
                                ],
                                "position": { "start": { "line": 31, "column": 5, "offset": 699 }, "end": { "line": 31, "column": 61, "offset": 755 } }
                            }
                        ],
                        "position": { "start": { "line": 31, "column": 1, "offset": 695 }, "end": { "line": 31, "column": 61, "offset": 755 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://lambda-resources.netlify.app/" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Lambda Bootcamp Website",
                                        "position": { "start": { "line": 32, "column": 6, "offset": 761 }, "end": { "line": 32, "column": 29, "offset": 784 } }
                                    }
                                ],
                                "position": { "start": { "line": 32, "column": 5, "offset": 760 }, "end": { "line": 32, "column": 69, "offset": 824 } }
                            }
                        ],
                        "position": { "start": { "line": 32, "column": 1, "offset": 756 }, "end": { "line": 32, "column": 69, "offset": 824 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/React_Notes_V3" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "React Notes",
                                        "position": { "start": { "line": 33, "column": 6, "offset": 830 }, "end": { "line": 33, "column": 17, "offset": 841 } }
                                    }
                                ],
                                "position": { "start": { "line": 33, "column": 5, "offset": 829 }, "end": { "line": 33, "column": 60, "offset": 884 } }
                            }
                        ],
                        "position": { "start": { "line": 33, "column": 1, "offset": 825 }, "end": { "line": 33, "column": 60, "offset": 884 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/Project-Showcase" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Project Showcase",
                                        "position": { "start": { "line": 34, "column": 6, "offset": 890 }, "end": { "line": 34, "column": 22, "offset": 906 } }
                                    }
                                ],
                                "position": { "start": { "line": 34, "column": 5, "offset": 889 }, "end": { "line": 34, "column": 67, "offset": 951 } }
                            }
                        ],
                        "position": { "start": { "line": 34, "column": 1, "offset": 885 }, "end": { "line": 34, "column": 67, "offset": 951 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/DS-ALGO-OFFICIAL" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Data Structures & Algorithms",
                                        "position": { "start": { "line": 35, "column": 6, "offset": 957 }, "end": { "line": 35, "column": 34, "offset": 985 } }
                                    }
                                ],
                                "position": { "start": { "line": 35, "column": 5, "offset": 956 }, "end": { "line": 35, "column": 79, "offset": 1030 } }
                            }
                        ],
                        "position": { "start": { "line": 35, "column": 1, "offset": 952 }, "end": { "line": 35, "column": 79, "offset": 1030 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/Lambda-Resource-Static-Assets" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Lambda Site Static Content Server",
                                        "position": {
                                            "start": { "line": 36, "column": 6, "offset": 1036 },
                                            "end": { "line": 36, "column": 39, "offset": 1069 }
                                        }
                                    }
                                ],
                                "position": { "start": { "line": 36, "column": 5, "offset": 1035 }, "end": { "line": 36, "column": 97, "offset": 1127 } }
                            }
                        ],
                        "position": { "start": { "line": 36, "column": 1, "offset": 1031 }, "end": { "line": 36, "column": 97, "offset": 1127 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/mini-project-showcase" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Mini-Project Showcase",
                                        "position": {
                                            "start": { "line": 37, "column": 6, "offset": 1133 },
                                            "end": { "line": 37, "column": 27, "offset": 1154 }
                                        }
                                    }
                                ],
                                "position": { "start": { "line": 37, "column": 5, "offset": 1132 }, "end": { "line": 37, "column": 77, "offset": 1204 } }
                            }
                        ],
                        "position": { "start": { "line": 37, "column": 1, "offset": 1128 }, "end": { "line": 37, "column": 77, "offset": 1204 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/Useful-Snippets-js" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Useful Snippets",
                                        "position": {
                                            "start": { "line": 38, "column": 6, "offset": 1210 },
                                            "end": { "line": 38, "column": 21, "offset": 1225 }
                                        }
                                    }
                                ],
                                "position": { "start": { "line": 38, "column": 5, "offset": 1209 }, "end": { "line": 38, "column": 68, "offset": 1272 } }
                            }
                        ],
                        "position": { "start": { "line": 38, "column": 1, "offset": 1205 }, "end": { "line": 38, "column": 68, "offset": 1272 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/Markdown-Templates" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Markdown Templates",
                                        "position": {
                                            "start": { "line": 39, "column": 6, "offset": 1278 },
                                            "end": { "line": 39, "column": 24, "offset": 1296 }
                                        }
                                    }
                                ],
                                "position": { "start": { "line": 39, "column": 5, "offset": 1277 }, "end": { "line": 39, "column": 71, "offset": 1343 } }
                            }
                        ],
                        "position": { "start": { "line": 39, "column": 1, "offset": 1273 }, "end": { "line": 39, "column": 71, "offset": 1343 } }
                    },
                    { "type": "text", "value": "\n" },
                    {
                        "type": "element",
                        "tagName": "li",
                        "properties": {},
                        "children": [
                            {
                                "type": "element",
                                "tagName": "a",
                                "properties": { "href": "https://github.com/bgoonz/zumzi-chat-messenger" },
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Zumzi Video Conferencing App (mesibo api backend)",
                                        "position": {
                                            "start": { "line": 40, "column": 6, "offset": 1349 },
                                            "end": { "line": 40, "column": 55, "offset": 1398 }
                                        }
                                    }
                                ],
                                "position": { "start": { "line": 40, "column": 5, "offset": 1348 }, "end": { "line": 40, "column": 104, "offset": 1447 } }
                            }
                        ],
                        "position": { "start": { "line": 40, "column": 1, "offset": 1344 }, "end": { "line": 40, "column": 104, "offset": 1447 } }
                    },
                    { "type": "text", "value": "\n" }
                ],
                "position": { "start": { "line": 31, "column": 1, "offset": 695 }, "end": { "line": 40, "column": 104, "offset": 1447 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h1",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Core Concepts",
                        "position": { "start": { "line": 42, "column": 3, "offset": 1451 }, "end": { "line": 42, "column": 16, "offset": 1464 } }
                    }
                ],
                "position": { "start": { "line": 42, "column": 1, "offset": 1449 }, "end": { "line": 42, "column": 16, "offset": 1464 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h1",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "index",
                        "position": { "start": { "line": 44, "column": 3, "offset": 1468 }, "end": { "line": 44, "column": 8, "offset": 1473 } }
                    }
                ],
                "position": { "start": { "line": 44, "column": 1, "offset": 1466 }, "end": { "line": 44, "column": 8, "offset": 1473 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.",
                        "position": { "start": { "line": 46, "column": 1, "offset": 1475 }, "end": { "line": 46, "column": 175, "offset": 1649 } }
                    }
                ],
                "position": { "start": { "line": 46, "column": 1, "offset": 1475 }, "end": { "line": 46, "column": 175, "offset": 1649 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ",
                        "position": { "start": { "line": 48, "column": 1, "offset": 1651 }, "end": { "line": 48, "column": 319, "offset": 1969 } }
                    },
                    {
                        "type": "element",
                        "tagName": "a",
                        "properties": { "href": "https://developer.mozilla.org/" },
                        "children": [
                            {
                                "type": "text",
                                "value": "Mozilla Developer Network's website",
                                "position": { "start": { "line": 48, "column": 320, "offset": 1970 }, "end": { "line": 48, "column": 355, "offset": 2005 } }
                            }
                        ],
                        "position": { "start": { "line": 48, "column": 319, "offset": 1969 }, "end": { "line": 48, "column": 388, "offset": 2038 } }
                    },
                    {
                        "type": "text",
                        "value": " (MDN).",
                        "position": { "start": { "line": 48, "column": 388, "offset": 2038 }, "end": { "line": 48, "column": 395, "offset": 2045 } }
                    }
                ],
                "position": { "start": { "line": 48, "column": 1, "offset": 1651 }, "end": { "line": 48, "column": 395, "offset": 2045 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Prefer ",
                        "position": { "start": { "line": 50, "column": 4, "offset": 2050 }, "end": { "line": 50, "column": 11, "offset": 2057 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "const" }],
                        "position": { "start": { "line": 50, "column": 11, "offset": 2057 }, "end": { "line": 50, "column": 18, "offset": 2064 } }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": { "start": { "line": 50, "column": 18, "offset": 2064 }, "end": { "line": 50, "column": 23, "offset": 2069 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "let" }],
                        "position": { "start": { "line": 50, "column": 23, "offset": 2069 }, "end": { "line": 50, "column": 28, "offset": 2074 } }
                    },
                    {
                        "type": "text",
                        "value": " over ",
                        "position": { "start": { "line": 50, "column": 28, "offset": 2074 }, "end": { "line": 50, "column": 34, "offset": 2080 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "var" }],
                        "position": { "start": { "line": 50, "column": 34, "offset": 2080 }, "end": { "line": 50, "column": 39, "offset": 2085 } }
                    }
                ],
                "position": { "start": { "line": 50, "column": 1, "offset": 2047 }, "end": { "line": 50, "column": 39, "offset": 2085 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ",
                        "position": { "start": { "line": 52, "column": 1, "offset": 2087 }, "end": { "line": 52, "column": 99, "offset": 2185 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "var" }],
                        "position": { "start": { "line": 52, "column": 99, "offset": 2185 }, "end": { "line": 52, "column": 104, "offset": 2190 } }
                    },
                    {
                        "type": "text",
                        "value": ":",
                        "position": { "start": { "line": 52, "column": 104, "offset": 2190 }, "end": { "line": 52, "column": 105, "offset": 2191 } }
                    }
                ],
                "position": { "start": { "line": 52, "column": 1, "offset": 2087 }, "end": { "line": 52, "column": 105, "offset": 2191 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "ar myVariable = 5;\n" }],
                        "position": { "start": { "line": 54, "column": 1, "offset": 2193 }, "end": { "line": 56, "column": 4, "offset": 2221 } }
                    }
                ],
                "position": { "start": { "line": 54, "column": 1, "offset": 2193 }, "end": { "line": 56, "column": 4, "offset": 2221 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Both the ",
                        "position": { "start": { "line": 58, "column": 1, "offset": 2223 }, "end": { "line": 58, "column": 10, "offset": 2232 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "const" }],
                        "position": { "start": { "line": 58, "column": 10, "offset": 2232 }, "end": { "line": 58, "column": 17, "offset": 2239 } }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": { "start": { "line": 58, "column": 17, "offset": 2239 }, "end": { "line": 58, "column": 22, "offset": 2244 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "let" }],
                        "position": { "start": { "line": 58, "column": 22, "offset": 2244 }, "end": { "line": 58, "column": 27, "offset": 2249 } }
                    },
                    {
                        "type": "text",
                        "value": " statements also declare variables. They were introduced in ES6.",
                        "position": { "start": { "line": 58, "column": 27, "offset": 2249 }, "end": { "line": 58, "column": 91, "offset": 2313 } }
                    }
                ],
                "position": { "start": { "line": 58, "column": 1, "offset": 2223 }, "end": { "line": 58, "column": 91, "offset": 2313 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Use ",
                        "position": { "start": { "line": 60, "column": 1, "offset": 2315 }, "end": { "line": 60, "column": 5, "offset": 2319 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "const" }],
                        "position": { "start": { "line": 60, "column": 5, "offset": 2319 }, "end": { "line": 60, "column": 12, "offset": 2326 } }
                    },
                    {
                        "type": "text",
                        "value": " in cases where a variable is never re-assigned. Using ",
                        "position": { "start": { "line": 60, "column": 12, "offset": 2326 }, "end": { "line": 60, "column": 67, "offset": 2381 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "const" }],
                        "position": { "start": { "line": 60, "column": 67, "offset": 2381 }, "end": { "line": 60, "column": 74, "offset": 2388 } }
                    },
                    {
                        "type": "text",
                        "value": " makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.",
                        "position": { "start": { "line": 60, "column": 74, "offset": 2388 }, "end": { "line": 60, "column": 211, "offset": 2525 } }
                    }
                ],
                "position": { "start": { "line": 60, "column": 1, "offset": 2315 }, "end": { "line": 60, "column": 211, "offset": 2525 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "If the variable will be re-assigned, use ",
                        "position": { "start": { "line": 62, "column": 1, "offset": 2527 }, "end": { "line": 62, "column": 42, "offset": 2568 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "let" }],
                        "position": { "start": { "line": 62, "column": 42, "offset": 2568 }, "end": { "line": 62, "column": 47, "offset": 2573 } }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": { "start": { "line": 62, "column": 47, "offset": 2573 }, "end": { "line": 62, "column": 48, "offset": 2574 } }
                    }
                ],
                "position": { "start": { "line": 62, "column": 1, "offset": 2527 }, "end": { "line": 62, "column": 48, "offset": 2574 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "We encourage the use of ",
                        "position": { "start": { "line": 64, "column": 1, "offset": 2576 }, "end": { "line": 64, "column": 25, "offset": 2600 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "const" }],
                        "position": { "start": { "line": 64, "column": 25, "offset": 2600 }, "end": { "line": 64, "column": 32, "offset": 2607 } }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": { "start": { "line": 64, "column": 32, "offset": 2607 }, "end": { "line": 64, "column": 37, "offset": 2612 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "let" }],
                        "position": { "start": { "line": 64, "column": 37, "offset": 2612 }, "end": { "line": 64, "column": 42, "offset": 2617 } }
                    },
                    {
                        "type": "text",
                        "value": " instead of ",
                        "position": { "start": { "line": 64, "column": 42, "offset": 2617 }, "end": { "line": 64, "column": 54, "offset": 2629 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "var" }],
                        "position": { "start": { "line": 64, "column": 54, "offset": 2629 }, "end": { "line": 64, "column": 59, "offset": 2634 } }
                    },
                    {
                        "type": "text",
                        "value": ". In addition to the restriction introduced by ",
                        "position": { "start": { "line": 64, "column": 59, "offset": 2634 }, "end": { "line": 64, "column": 106, "offset": 2681 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "const" }],
                        "position": { "start": { "line": 64, "column": 106, "offset": 2681 }, "end": { "line": 64, "column": 113, "offset": 2688 } }
                    },
                    {
                        "type": "text",
                        "value": ", both ",
                        "position": { "start": { "line": 64, "column": 113, "offset": 2688 }, "end": { "line": 64, "column": 120, "offset": 2695 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "const" }],
                        "position": { "start": { "line": 64, "column": 120, "offset": 2695 }, "end": { "line": 64, "column": 127, "offset": 2702 } }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": { "start": { "line": 64, "column": 127, "offset": 2702 }, "end": { "line": 64, "column": 132, "offset": 2707 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "let" }],
                        "position": { "start": { "line": 64, "column": 132, "offset": 2707 }, "end": { "line": 64, "column": 137, "offset": 2712 } }
                    },
                    {
                        "type": "text",
                        "value": " are ",
                        "position": { "start": { "line": 64, "column": 137, "offset": 2712 }, "end": { "line": 64, "column": 142, "offset": 2717 } }
                    },
                    {
                        "type": "element",
                        "tagName": "em",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "block scoped",
                                "position": { "start": { "line": 64, "column": 143, "offset": 2718 }, "end": { "line": 64, "column": 155, "offset": 2730 } }
                            }
                        ],
                        "position": { "start": { "line": 64, "column": 142, "offset": 2717 }, "end": { "line": 64, "column": 156, "offset": 2731 } }
                    },
                    {
                        "type": "text",
                        "value": " as opposed to ",
                        "position": { "start": { "line": 64, "column": 156, "offset": 2731 }, "end": { "line": 64, "column": 171, "offset": 2746 } }
                    },
                    {
                        "type": "element",
                        "tagName": "em",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "function scoped",
                                "position": { "start": { "line": 64, "column": 172, "offset": 2747 }, "end": { "line": 64, "column": 187, "offset": 2762 } }
                            }
                        ],
                        "position": { "start": { "line": 64, "column": 171, "offset": 2746 }, "end": { "line": 64, "column": 188, "offset": 2763 } }
                    },
                    {
                        "type": "text",
                        "value": ". This scoping can help avoid unexpected bugs.",
                        "position": { "start": { "line": 64, "column": 188, "offset": 2763 }, "end": { "line": 64, "column": 234, "offset": 2809 } }
                    }
                ],
                "position": { "start": { "line": 64, "column": 1, "offset": 2576 }, "end": { "line": 64, "column": 234, "offset": 2809 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Arrow functions",
                        "position": { "start": { "line": 66, "column": 4, "offset": 2814 }, "end": { "line": 66, "column": 19, "offset": 2829 } }
                    }
                ],
                "position": { "start": { "line": 66, "column": 1, "offset": 2811 }, "end": { "line": 66, "column": 19, "offset": 2829 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:",
                        "position": { "start": { "line": 68, "column": 1, "offset": 2831 }, "end": { "line": 68, "column": 121, "offset": 2951 } }
                    }
                ],
                "position": { "start": { "line": 68, "column": 1, "offset": 2831 }, "end": { "line": 68, "column": 121, "offset": 2951 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            { "type": "text", "value": "onst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];\n" }
                        ],
                        "position": { "start": { "line": 70, "column": 1, "offset": 2953 }, "end": { "line": 75, "column": 4, "offset": 3051 } }
                    }
                ],
                "position": { "start": { "line": 70, "column": 1, "offset": 2953 }, "end": { "line": 75, "column": 4, "offset": 3051 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:",
                        "position": { "start": { "line": 77, "column": 1, "offset": 3053 }, "end": { "line": 77, "column": 116, "offset": 3168 } }
                    }
                ],
                "position": { "start": { "line": 77, "column": 1, "offset": 3053 }, "end": { "line": 77, "column": 116, "offset": 3168 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "const formattedPopulations = cities.map((city) => {\n    const popMM = (city.pop / 1000000).toFixed(2);\n    return popMM + ' million';\n});\nconsole.log(formattedPopulations);\n"
                            }
                        ],
                        "position": { "start": { "line": 79, "column": 1, "offset": 3170 }, "end": { "line": 85, "column": 4, "offset": 3352 } }
                    }
                ],
                "position": { "start": { "line": 79, "column": 1, "offset": 3170 }, "end": { "line": 85, "column": 4, "offset": 3352 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Note that we must also explicitly specify a ",
                        "position": { "start": { "line": 87, "column": 1, "offset": 3354 }, "end": { "line": 87, "column": 45, "offset": 3398 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "return" }],
                        "position": { "start": { "line": 87, "column": 45, "offset": 3398 }, "end": { "line": 87, "column": 53, "offset": 3406 } }
                    },
                    {
                        "type": "text",
                        "value": " for the function.",
                        "position": { "start": { "line": 87, "column": 53, "offset": 3406 }, "end": { "line": 87, "column": 71, "offset": 3424 } }
                    }
                ],
                "position": { "start": { "line": 87, "column": 1, "offset": 3354 }, "end": { "line": 87, "column": 71, "offset": 3424 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "However, if we write a function body that is only a single line (or single expression) we can use parentheses to delimit it:",
                        "position": { "start": { "line": 89, "column": 1, "offset": 3426 }, "end": { "line": 89, "column": 125, "offset": 3550 } }
                    }
                ],
                "position": { "start": { "line": 89, "column": 1, "offset": 3426 }, "end": { "line": 89, "column": 125, "offset": 3550 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            { "type": "text", "value": "const formattedPopulations2 = cities.map((city) => (city.pop / 1000000).toFixed(2) + ' million');\n" }
                        ],
                        "position": { "start": { "line": 91, "column": 1, "offset": 3552 }, "end": { "line": 93, "column": 4, "offset": 3659 } }
                    }
                ],
                "position": { "start": { "line": 91, "column": 1, "offset": 3552 }, "end": { "line": 93, "column": 4, "offset": 3659 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Notably, we don't use ",
                        "position": { "start": { "line": 95, "column": 1, "offset": 3661 }, "end": { "line": 95, "column": 23, "offset": 3683 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "return" }],
                        "position": { "start": { "line": 95, "column": 23, "offset": 3683 }, "end": { "line": 95, "column": 31, "offset": 3691 } }
                    },
                    {
                        "type": "text",
                        "value": " as it's implied.",
                        "position": { "start": { "line": 95, "column": 31, "offset": 3691 }, "end": { "line": 95, "column": 48, "offset": 3708 } }
                    }
                ],
                "position": { "start": { "line": 95, "column": 1, "offset": 3661 }, "end": { "line": 95, "column": 48, "offset": 3708 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Furthermore, if your function body is terse you can write it like so:",
                        "position": { "start": { "line": 97, "column": 1, "offset": 3710 }, "end": { "line": 97, "column": 70, "offset": 3779 } }
                    }
                ],
                "position": { "start": { "line": 97, "column": 1, "offset": 3710 }, "end": { "line": 97, "column": 70, "offset": 3779 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "const pops = cities.map((city) => city.pop);\nconsole.log(pops);\n" }],
                        "position": { "start": { "line": 99, "column": 1, "offset": 3781 }, "end": { "line": 102, "column": 4, "offset": 3854 } }
                    }
                ],
                "position": { "start": { "line": 99, "column": 1, "offset": 3781 }, "end": { "line": 102, "column": 4, "offset": 3854 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:",
                        "position": { "start": { "line": 104, "column": 1, "offset": 3856 }, "end": { "line": 104, "column": 110, "offset": 3965 } }
                    }
                ],
                "position": { "start": { "line": 104, "column": 1, "offset": 3856 }, "end": { "line": 104, "column": 110, "offset": 3965 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "const popsNoArrow = cities.map(function (city) {\n    return city.pop;\n});\n" }],
                        "position": { "start": { "line": 106, "column": 1, "offset": 3967 }, "end": { "line": 110, "column": 4, "offset": 4050 } }
                    }
                ],
                "position": { "start": { "line": 106, "column": 1, "offset": 3967 }, "end": { "line": 110, "column": 4, "offset": 4050 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Of greater benefit, though, is how arrow functions bind the ",
                        "position": { "start": { "line": 112, "column": 1, "offset": 4052 }, "end": { "line": 112, "column": 61, "offset": 4112 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "this" }],
                        "position": { "start": { "line": 112, "column": 61, "offset": 4112 }, "end": { "line": 112, "column": 67, "offset": 4118 } }
                    },
                    {
                        "type": "text",
                        "value": " object.",
                        "position": { "start": { "line": 112, "column": 67, "offset": 4118 }, "end": { "line": 112, "column": 75, "offset": 4126 } }
                    }
                ],
                "position": { "start": { "line": 112, "column": 1, "offset": 4052 }, "end": { "line": 112, "column": 75, "offset": 4126 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "The traditional JavaScript function declaration syntax (",
                        "position": { "start": { "line": 114, "column": 1, "offset": 4128 }, "end": { "line": 114, "column": 57, "offset": 4184 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "function () {}" }],
                        "position": { "start": { "line": 114, "column": 57, "offset": 4184 }, "end": { "line": 114, "column": 73, "offset": 4200 } }
                    },
                    {
                        "type": "text",
                        "value": ") will bind ",
                        "position": { "start": { "line": 114, "column": 73, "offset": 4200 }, "end": { "line": 114, "column": 85, "offset": 4212 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "this" }],
                        "position": { "start": { "line": 114, "column": 85, "offset": 4212 }, "end": { "line": 114, "column": 91, "offset": 4218 } }
                    },
                    {
                        "type": "text",
                        "value": " in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:",
                        "position": { "start": { "line": 114, "column": 91, "offset": 4218 }, "end": { "line": 114, "column": 209, "offset": 4336 } }
                    }
                ],
                "position": { "start": { "line": 114, "column": 1, "offset": 4128 }, "end": { "line": 114, "column": 209, "offset": 4336 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "unction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();\n"
                            }
                        ],
                        "position": { "start": { "line": 116, "column": 1, "offset": 4338 }, "end": { "line": 145, "column": 4, "offset": 4826 } }
                    }
                ],
                "position": { "start": { "line": 116, "column": 1, "offset": 4338 }, "end": { "line": 145, "column": 4, "offset": 4826 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "The method ",
                        "position": { "start": { "line": 147, "column": 1, "offset": 4828 }, "end": { "line": 147, "column": 12, "offset": 4839 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "printSongs()" }],
                        "position": { "start": { "line": 147, "column": 12, "offset": 4839 }, "end": { "line": 147, "column": 26, "offset": 4853 } }
                    },
                    {
                        "type": "text",
                        "value": " iterates over ",
                        "position": { "start": { "line": 147, "column": 26, "offset": 4853 }, "end": { "line": 147, "column": 41, "offset": 4868 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "this.songs" }],
                        "position": { "start": { "line": 147, "column": 41, "offset": 4868 }, "end": { "line": 147, "column": 53, "offset": 4880 } }
                    },
                    {
                        "type": "text",
                        "value": " with ",
                        "position": { "start": { "line": 147, "column": 53, "offset": 4880 }, "end": { "line": 147, "column": 59, "offset": 4886 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "forEach()" }],
                        "position": { "start": { "line": 147, "column": 59, "offset": 4886 }, "end": { "line": 147, "column": 70, "offset": 4897 } }
                    },
                    {
                        "type": "text",
                        "value": ". In this context, ",
                        "position": { "start": { "line": 147, "column": 70, "offset": 4897 }, "end": { "line": 147, "column": 89, "offset": 4916 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "this" }],
                        "position": { "start": { "line": 147, "column": 89, "offset": 4916 }, "end": { "line": 147, "column": 95, "offset": 4922 } }
                    },
                    {
                        "type": "text",
                        "value": " is bound to the object (",
                        "position": { "start": { "line": 147, "column": 95, "offset": 4922 }, "end": { "line": 147, "column": 120, "offset": 4947 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "jukebox" }],
                        "position": { "start": { "line": 147, "column": 120, "offset": 4947 }, "end": { "line": 147, "column": 129, "offset": 4956 } }
                    },
                    {
                        "type": "text",
                        "value": ") as expected. However, the anonymous function passed to ",
                        "position": { "start": { "line": 147, "column": 129, "offset": 4956 }, "end": { "line": 147, "column": 186, "offset": 5013 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "forEach()" }],
                        "position": { "start": { "line": 147, "column": 186, "offset": 5013 }, "end": { "line": 147, "column": 197, "offset": 5024 } }
                    },
                    {
                        "type": "text",
                        "value": " binds its internal ",
                        "position": { "start": { "line": 147, "column": 197, "offset": 5024 }, "end": { "line": 147, "column": 217, "offset": 5044 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "this" }],
                        "position": { "start": { "line": 147, "column": 217, "offset": 5044 }, "end": { "line": 147, "column": 223, "offset": 5050 } }
                    },
                    {
                        "type": "text",
                        "value": " to the global object. As such, ",
                        "position": { "start": { "line": 147, "column": 223, "offset": 5050 }, "end": { "line": 147, "column": 255, "offset": 5082 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "this.printSong(song)" }],
                        "position": { "start": { "line": 147, "column": 255, "offset": 5082 }, "end": { "line": 147, "column": 277, "offset": 5104 } }
                    },
                    {
                        "type": "text",
                        "value": " calls the function declared at the top of the example, ",
                        "position": { "start": { "line": 147, "column": 277, "offset": 5104 }, "end": { "line": 147, "column": 333, "offset": 5160 } }
                    },
                    {
                        "type": "element",
                        "tagName": "em",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "not",
                                "position": { "start": { "line": 147, "column": 334, "offset": 5161 }, "end": { "line": 147, "column": 337, "offset": 5164 } }
                            }
                        ],
                        "position": { "start": { "line": 147, "column": 333, "offset": 5160 }, "end": { "line": 147, "column": 338, "offset": 5165 } }
                    },
                    {
                        "type": "text",
                        "value": " the method on ",
                        "position": { "start": { "line": 147, "column": 338, "offset": 5165 }, "end": { "line": 147, "column": 353, "offset": 5180 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "jukebox" }],
                        "position": { "start": { "line": 147, "column": 353, "offset": 5180 }, "end": { "line": 147, "column": 362, "offset": 5189 } }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": { "start": { "line": 147, "column": 362, "offset": 5189 }, "end": { "line": 147, "column": 363, "offset": 5190 } }
                    }
                ],
                "position": { "start": { "line": 147, "column": 1, "offset": 4828 }, "end": { "line": 147, "column": 363, "offset": 5190 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ",
                        "position": { "start": { "line": 149, "column": 1, "offset": 5192 }, "end": { "line": 149, "column": 119, "offset": 5310 } }
                    },
                    {
                        "type": "element",
                        "tagName": "strong",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "capturing the ",
                                "position": { "start": { "line": 149, "column": 121, "offset": 5312 }, "end": { "line": 149, "column": 135, "offset": 5326 } }
                            },
                            {
                                "type": "element",
                                "tagName": "code",
                                "properties": {},
                                "children": [{ "type": "text", "value": "this" }],
                                "position": { "start": { "line": 149, "column": 135, "offset": 5326 }, "end": { "line": 149, "column": 141, "offset": 5332 } }
                            },
                            {
                                "type": "text",
                                "value": " value of the enclosing context",
                                "position": { "start": { "line": 149, "column": 141, "offset": 5332 }, "end": { "line": 149, "column": 172, "offset": 5363 } }
                            }
                        ],
                        "position": { "start": { "line": 149, "column": 119, "offset": 5310 }, "end": { "line": 149, "column": 174, "offset": 5365 } }
                    },
                    {
                        "type": "text",
                        "value": ". Using an arrow function for ",
                        "position": { "start": { "line": 149, "column": 174, "offset": 5365 }, "end": { "line": 149, "column": 204, "offset": 5395 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "printSongs()" }],
                        "position": { "start": { "line": 149, "column": 204, "offset": 5395 }, "end": { "line": 149, "column": 218, "offset": 5409 } }
                    },
                    {
                        "type": "text",
                        "value": " has the expected result:",
                        "position": { "start": { "line": 149, "column": 218, "offset": 5409 }, "end": { "line": 149, "column": 243, "offset": 5434 } }
                    }
                ],
                "position": { "start": { "line": 149, "column": 1, "offset": 5192 }, "end": { "line": 149, "column": 243, "offset": 5434 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();\n"
                            }
                        ],
                        "position": { "start": { "line": 151, "column": 1, "offset": 5436 }, "end": { "line": 161, "column": 4, "offset": 5575 } }
                    }
                ],
                "position": { "start": { "line": 151, "column": 1, "offset": 5436 }, "end": { "line": 161, "column": 4, "offset": 5575 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "For this reason, throughout the book we use arrow functions for all anonymous functions.",
                        "position": { "start": { "line": 163, "column": 1, "offset": 5577 }, "end": { "line": 163, "column": 89, "offset": 5665 } }
                    }
                ],
                "position": { "start": { "line": 163, "column": 1, "offset": 5577 }, "end": { "line": 163, "column": 89, "offset": 5665 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Modules",
                        "position": { "start": { "line": 165, "column": 4, "offset": 5670 }, "end": { "line": 165, "column": 11, "offset": 5677 } }
                    }
                ],
                "position": { "start": { "line": 165, "column": 1, "offset": 5667 }, "end": { "line": 165, "column": 11, "offset": 5677 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "ES6 formally supports modules using the ",
                        "position": { "start": { "line": 167, "column": 1, "offset": 5679 }, "end": { "line": 167, "column": 41, "offset": 5719 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "import" }],
                        "position": { "start": { "line": 167, "column": 41, "offset": 5719 }, "end": { "line": 167, "column": 49, "offset": 5727 } }
                    },
                    {
                        "type": "text",
                        "value": "/",
                        "position": { "start": { "line": 167, "column": 49, "offset": 5727 }, "end": { "line": 167, "column": 50, "offset": 5728 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "export" }],
                        "position": { "start": { "line": 167, "column": 50, "offset": 5728 }, "end": { "line": 167, "column": 58, "offset": 5736 } }
                    },
                    {
                        "type": "text",
                        "value": " syntax.",
                        "position": { "start": { "line": 167, "column": 58, "offset": 5736 }, "end": { "line": 167, "column": 66, "offset": 5744 } }
                    }
                ],
                "position": { "start": { "line": 167, "column": 1, "offset": 5679 }, "end": { "line": 167, "column": 66, "offset": 5744 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "strong",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "Named exports",
                                "position": { "start": { "line": 169, "column": 3, "offset": 5748 }, "end": { "line": 169, "column": 16, "offset": 5761 } }
                            }
                        ],
                        "position": { "start": { "line": 169, "column": 1, "offset": 5746 }, "end": { "line": 169, "column": 18, "offset": 5763 } }
                    }
                ],
                "position": { "start": { "line": 169, "column": 1, "offset": 5746 }, "end": { "line": 169, "column": 18, "offset": 5763 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Inside any file, you can use ",
                        "position": { "start": { "line": 171, "column": 1, "offset": 5765 }, "end": { "line": 171, "column": 30, "offset": 5794 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "export" }],
                        "position": { "start": { "line": 171, "column": 30, "offset": 5794 }, "end": { "line": 171, "column": 38, "offset": 5802 } }
                    },
                    {
                        "type": "text",
                        "value": " to specify a variable the module should expose. Here's an example of a file that exports two functions:",
                        "position": { "start": { "line": 171, "column": 38, "offset": 5802 }, "end": { "line": 171, "column": 142, "offset": 5906 } }
                    }
                ],
                "position": { "start": { "line": 171, "column": 1, "offset": 5765 }, "end": { "line": 171, "column": 142, "offset": 5906 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "export const sayHi = () => console.log('Hi!');\nexport const sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n"
                            }
                        ],
                        "position": { "start": { "line": 173, "column": 1, "offset": 5908 }, "end": { "line": 178, "column": 4, "offset": 6068 } }
                    }
                ],
                "position": { "start": { "line": 173, "column": 1, "offset": 5908 }, "end": { "line": 178, "column": 4, "offset": 6068 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Now, anywhere we wanted to use these functions we could use ",
                        "position": { "start": { "line": 180, "column": 1, "offset": 6070 }, "end": { "line": 180, "column": 61, "offset": 6130 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "import" }],
                        "position": { "start": { "line": 180, "column": 61, "offset": 6130 }, "end": { "line": 180, "column": 69, "offset": 6138 } }
                    },
                    {
                        "type": "text",
                        "value": ". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:",
                        "position": { "start": { "line": 180, "column": 69, "offset": 6138 }, "end": { "line": 180, "column": 226, "offset": 6295 } }
                    }
                ],
                "position": { "start": { "line": 180, "column": 1, "offset": 6070 }, "end": { "line": 180, "column": 226, "offset": 6295 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "import { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();\n" }],
                        "position": { "start": { "line": 182, "column": 1, "offset": 6297 }, "end": { "line": 187, "column": 4, "offset": 6371 } }
                    }
                ],
                "position": { "start": { "line": 182, "column": 1, "offset": 6297 }, "end": { "line": 187, "column": 4, "offset": 6371 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Importantly, the function that was ",
                        "position": { "start": { "line": 189, "column": 1, "offset": 6373 }, "end": { "line": 189, "column": 36, "offset": 6408 } }
                    },
                    {
                        "type": "element",
                        "tagName": "em",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "not",
                                "position": { "start": { "line": 189, "column": 37, "offset": 6409 }, "end": { "line": 189, "column": 40, "offset": 6412 } }
                            }
                        ],
                        "position": { "start": { "line": 189, "column": 36, "offset": 6408 }, "end": { "line": 189, "column": 41, "offset": 6413 } }
                    },
                    {
                        "type": "text",
                        "value": " exported (",
                        "position": { "start": { "line": 189, "column": 41, "offset": 6413 }, "end": { "line": 189, "column": 52, "offset": 6424 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "saySomething" }],
                        "position": { "start": { "line": 189, "column": 52, "offset": 6424 }, "end": { "line": 189, "column": 66, "offset": 6438 } }
                    },
                    {
                        "type": "text",
                        "value": ") is unavailable outside of the module.",
                        "position": { "start": { "line": 189, "column": 66, "offset": 6438 }, "end": { "line": 189, "column": 105, "offset": 6477 } }
                    }
                ],
                "position": { "start": { "line": 189, "column": 1, "offset": 6373 }, "end": { "line": 189, "column": 105, "offset": 6477 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Also note that we supply a ",
                        "position": { "start": { "line": 191, "column": 1, "offset": 6479 }, "end": { "line": 191, "column": 28, "offset": 6506 } }
                    },
                    {
                        "type": "element",
                        "tagName": "strong",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "relative path",
                                "position": { "start": { "line": 191, "column": 30, "offset": 6508 }, "end": { "line": 191, "column": 43, "offset": 6521 } }
                            }
                        ],
                        "position": { "start": { "line": 191, "column": 28, "offset": 6506 }, "end": { "line": 191, "column": 45, "offset": 6523 } }
                    },
                    {
                        "type": "text",
                        "value": " to ",
                        "position": { "start": { "line": 191, "column": 45, "offset": 6523 }, "end": { "line": 191, "column": 49, "offset": 6527 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "from" }],
                        "position": { "start": { "line": 191, "column": 49, "offset": 6527 }, "end": { "line": 191, "column": 55, "offset": 6533 } }
                    },
                    {
                        "type": "text",
                        "value": ", indicating that the ES6 module is a local file as opposed to an npm package.",
                        "position": { "start": { "line": 191, "column": 55, "offset": 6533 }, "end": { "line": 191, "column": 133, "offset": 6611 } }
                    }
                ],
                "position": { "start": { "line": 191, "column": 1, "offset": 6479 }, "end": { "line": 191, "column": 133, "offset": 6611 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Instead of inserting an ",
                        "position": { "start": { "line": 193, "column": 1, "offset": 6613 }, "end": { "line": 193, "column": 25, "offset": 6637 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "export" }],
                        "position": { "start": { "line": 193, "column": 25, "offset": 6637 }, "end": { "line": 193, "column": 33, "offset": 6645 } }
                    },
                    {
                        "type": "text",
                        "value": " before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:",
                        "position": { "start": { "line": 193, "column": 33, "offset": 6645 }, "end": { "line": 193, "column": 151, "offset": 6763 } }
                    }
                ],
                "position": { "start": { "line": 193, "column": 1, "offset": 6613 }, "end": { "line": 193, "column": 151, "offset": 6763 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nexport { sayHi, sayBye };\n"
                            }
                        ],
                        "position": { "start": { "line": 195, "column": 1, "offset": 6765 }, "end": { "line": 202, "column": 4, "offset": 6938 } }
                    }
                ],
                "position": { "start": { "line": 195, "column": 1, "offset": 6765 }, "end": { "line": 202, "column": 4, "offset": 6938 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ",
                        "position": { "start": { "line": 204, "column": 1, "offset": 6940 }, "end": { "line": 204, "column": 116, "offset": 7055 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "import * as <Namespace>" }],
                        "position": { "start": { "line": 204, "column": 116, "offset": 7055 }, "end": { "line": 204, "column": 141, "offset": 7080 } }
                    },
                    {
                        "type": "text",
                        "value": " syntax:",
                        "position": { "start": { "line": 204, "column": 141, "offset": 7080 }, "end": { "line": 204, "column": 149, "offset": 7088 } }
                    }
                ],
                "position": { "start": { "line": 204, "column": 1, "offset": 6940 }, "end": { "line": 204, "column": 149, "offset": 7088 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "import * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();\n"
                            }
                        ],
                        "position": { "start": { "line": 206, "column": 1, "offset": 7090 }, "end": { "line": 214, "column": 4, "offset": 7209 } }
                    }
                ],
                "position": { "start": { "line": 206, "column": 1, "offset": 7090 }, "end": { "line": 214, "column": 4, "offset": 7209 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "strong",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "Default export",
                                "position": { "start": { "line": 216, "column": 3, "offset": 7213 }, "end": { "line": 216, "column": 17, "offset": 7227 } }
                            }
                        ],
                        "position": { "start": { "line": 216, "column": 1, "offset": 7211 }, "end": { "line": 216, "column": 19, "offset": 7229 } }
                    }
                ],
                "position": { "start": { "line": 216, "column": 1, "offset": 7211 }, "end": { "line": 216, "column": 19, "offset": 7229 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "The other type of export is a default export. A module can only contain one default export:",
                        "position": { "start": { "line": 218, "column": 1, "offset": 7231 }, "end": { "line": 218, "column": 92, "offset": 7322 } }
                    }
                ],
                "position": { "start": { "line": 218, "column": 1, "offset": 7231 }, "end": { "line": 218, "column": 92, "offset": 7322 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;\n"
                            }
                        ],
                        "position": { "start": { "line": 220, "column": 1, "offset": 7324 }, "end": { "line": 229, "column": 4, "offset": 7535 } }
                    }
                ],
                "position": { "start": { "line": 220, "column": 1, "offset": 7324 }, "end": { "line": 229, "column": 4, "offset": 7535 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:",
                        "position": { "start": { "line": 231, "column": 1, "offset": 7537 }, "end": { "line": 231, "column": 148, "offset": 7684 } }
                    }
                ],
                "position": { "start": { "line": 231, "column": 1, "offset": 7537 }, "end": { "line": 231, "column": 148, "offset": 7684 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "import Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();\n" }],
                        "position": { "start": { "line": 233, "column": 1, "offset": 7686 }, "end": { "line": 238, "column": 4, "offset": 7772 } }
                    }
                ],
                "position": { "start": { "line": 233, "column": 1, "offset": 7686 }, "end": { "line": 238, "column": 4, "offset": 7772 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ",
                        "position": { "start": { "line": 240, "column": 1, "offset": 7774 }, "end": { "line": 240, "column": 107, "offset": 7880 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "react-dom" }],
                        "position": { "start": { "line": 240, "column": 107, "offset": 7880 }, "end": { "line": 240, "column": 118, "offset": 7891 } }
                    },
                    {
                        "type": "text",
                        "value": ", you can import ",
                        "position": { "start": { "line": 240, "column": 118, "offset": 7891 }, "end": { "line": 240, "column": 135, "offset": 7908 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "ReactDOM" }],
                        "position": { "start": { "line": 240, "column": 135, "offset": 7908 }, "end": { "line": 240, "column": 145, "offset": 7918 } }
                    },
                    {
                        "type": "text",
                        "value": " (a default export) like this:",
                        "position": { "start": { "line": 240, "column": 145, "offset": 7918 }, "end": { "line": 240, "column": 175, "offset": 7948 } }
                    }
                ],
                "position": { "start": { "line": 240, "column": 1, "offset": 7774 }, "end": { "line": 240, "column": 175, "offset": 7948 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "import ReactDOM from 'react-dom';\n\nReactDOM.render();\n" }],
                        "position": { "start": { "line": 242, "column": 1, "offset": 7950 }, "end": { "line": 246, "column": 4, "offset": 8013 } }
                    }
                ],
                "position": { "start": { "line": 242, "column": 1, "offset": 7950 }, "end": { "line": 246, "column": 4, "offset": 8013 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Or, if you're only going to use the ",
                        "position": { "start": { "line": 248, "column": 1, "offset": 8015 }, "end": { "line": 248, "column": 37, "offset": 8051 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "render()" }],
                        "position": { "start": { "line": 248, "column": 37, "offset": 8051 }, "end": { "line": 248, "column": 47, "offset": 8061 } }
                    },
                    {
                        "type": "text",
                        "value": " function, you can import the named ",
                        "position": { "start": { "line": 248, "column": 47, "offset": 8061 }, "end": { "line": 248, "column": 83, "offset": 8097 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "render()" }],
                        "position": { "start": { "line": 248, "column": 83, "offset": 8097 }, "end": { "line": 248, "column": 93, "offset": 8107 } }
                    },
                    {
                        "type": "text",
                        "value": " function like this:",
                        "position": { "start": { "line": 248, "column": 93, "offset": 8107 }, "end": { "line": 248, "column": 113, "offset": 8127 } }
                    }
                ],
                "position": { "start": { "line": 248, "column": 1, "offset": 8015 }, "end": { "line": 248, "column": 113, "offset": 8127 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "import { render } from 'react-dom';\n\nrender();\n" }],
                        "position": { "start": { "line": 250, "column": 1, "offset": 8129 }, "end": { "line": 254, "column": 4, "offset": 8185 } }
                    }
                ],
                "position": { "start": { "line": 250, "column": 1, "offset": 8129 }, "end": { "line": 254, "column": 4, "offset": 8185 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "To achieve this flexibility, the export implementation for ",
                        "position": { "start": { "line": 256, "column": 1, "offset": 8187 }, "end": { "line": 256, "column": 60, "offset": 8246 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "react-dom" }],
                        "position": { "start": { "line": 256, "column": 60, "offset": 8246 }, "end": { "line": 256, "column": 71, "offset": 8257 } }
                    },
                    {
                        "type": "text",
                        "value": " looks something like this:",
                        "position": { "start": { "line": 256, "column": 71, "offset": 8257 }, "end": { "line": 256, "column": 98, "offset": 8284 } }
                    }
                ],
                "position": { "start": { "line": 256, "column": 1, "offset": 8187 }, "end": { "line": 256, "column": 98, "offset": 8284 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "export const render = (component, target) => {};\n\nconst ReactDOM = {\n    render\n};\n\nexport default ReactDOM;\n"
                            }
                        ],
                        "position": { "start": { "line": 258, "column": 1, "offset": 8286 }, "end": { "line": 266, "column": 4, "offset": 8404 } }
                    }
                ],
                "position": { "start": { "line": 258, "column": 1, "offset": 8286 }, "end": { "line": 266, "column": 4, "offset": 8404 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "If you want to play around with the module syntax, check out the folder ",
                        "position": { "start": { "line": 268, "column": 1, "offset": 8406 }, "end": { "line": 268, "column": 73, "offset": 8478 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "code/webpack/es6-modules" }],
                        "position": { "start": { "line": 268, "column": 73, "offset": 8478 }, "end": { "line": 268, "column": 99, "offset": 8504 } }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": { "start": { "line": 268, "column": 99, "offset": 8504 }, "end": { "line": 268, "column": 100, "offset": 8505 } }
                    }
                ],
                "position": { "start": { "line": 268, "column": 1, "offset": 8406 }, "end": { "line": 268, "column": 100, "offset": 8505 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "For more reading on ES6 modules, see this article from Mozilla: \"",
                        "position": { "start": { "line": 270, "column": 1, "offset": 8507 }, "end": { "line": 270, "column": 66, "offset": 8572 } }
                    },
                    {
                        "type": "element",
                        "tagName": "a",
                        "properties": { "href": "https://hacks.mozilla.org/2015/08/es6-in-depth-modules/" },
                        "children": [
                            {
                                "type": "text",
                                "value": "ES6 in Depth: Modules",
                                "position": { "start": { "line": 270, "column": 67, "offset": 8573 }, "end": { "line": 270, "column": 88, "offset": 8594 } }
                            }
                        ],
                        "position": { "start": { "line": 270, "column": 66, "offset": 8572 }, "end": { "line": 270, "column": 146, "offset": 8652 } }
                    },
                    {
                        "type": "text",
                        "value": "\".",
                        "position": { "start": { "line": 270, "column": 146, "offset": 8652 }, "end": { "line": 270, "column": 148, "offset": 8654 } }
                    }
                ],
                "position": { "start": { "line": 270, "column": 1, "offset": 8507 }, "end": { "line": 270, "column": 148, "offset": 8654 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "Object.assign()" }],
                        "position": { "start": { "line": 272, "column": 4, "offset": 8659 }, "end": { "line": 272, "column": 21, "offset": 8676 } }
                    }
                ],
                "position": { "start": { "line": 272, "column": 1, "offset": 8656 }, "end": { "line": 272, "column": 21, "offset": 8676 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "We use ",
                        "position": { "start": { "line": 274, "column": 1, "offset": 8678 }, "end": { "line": 274, "column": 8, "offset": 8685 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "Object.assign()" }],
                        "position": { "start": { "line": 274, "column": 8, "offset": 8685 }, "end": { "line": 274, "column": 25, "offset": 8702 } }
                    },
                    {
                        "type": "text",
                        "value": " often throughout the book. We use it in areas where we want to create a modified version of an existing object.",
                        "position": { "start": { "line": 274, "column": 25, "offset": 8702 }, "end": { "line": 274, "column": 137, "offset": 8814 } }
                    }
                ],
                "position": { "start": { "line": 274, "column": 1, "offset": 8678 }, "end": { "line": 274, "column": 137, "offset": 8814 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "Object.assign()" }],
                        "position": { "start": { "line": 276, "column": 1, "offset": 8816 }, "end": { "line": 276, "column": 18, "offset": 8833 } }
                    },
                    {
                        "type": "text",
                        "value": " accepts any number of objects as arguments. When the function receives two arguments, it ",
                        "position": { "start": { "line": 276, "column": 18, "offset": 8833 }, "end": { "line": 276, "column": 108, "offset": 8923 } }
                    },
                    {
                        "type": "element",
                        "tagName": "em",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "copies",
                                "position": { "start": { "line": 276, "column": 109, "offset": 8924 }, "end": { "line": 276, "column": 115, "offset": 8930 } }
                            }
                        ],
                        "position": { "start": { "line": 276, "column": 108, "offset": 8923 }, "end": { "line": 276, "column": 116, "offset": 8931 } }
                    },
                    {
                        "type": "text",
                        "value": " the properties of the second object onto the first, like so:",
                        "position": { "start": { "line": 276, "column": 116, "offset": 8931 }, "end": { "line": 276, "column": 177, "offset": 8992 } }
                    }
                ],
                "position": { "start": { "line": 276, "column": 1, "offset": 8816 }, "end": { "line": 276, "column": 177, "offset": 8992 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "onst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);\n"
                            }
                        ],
                        "position": { "start": { "line": 278, "column": 1, "offset": 8994 }, "end": { "line": 283, "column": 4, "offset": 9120 } }
                    }
                ],
                "position": { "start": { "line": 278, "column": 1, "offset": 8994 }, "end": { "line": 283, "column": 4, "offset": 9120 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "It is idiomatic to pass in three arguments to ",
                        "position": { "start": { "line": 285, "column": 1, "offset": 9122 }, "end": { "line": 285, "column": 47, "offset": 9168 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "Object.assign()" }],
                        "position": { "start": { "line": 285, "column": 47, "offset": 9168 }, "end": { "line": 285, "column": 64, "offset": 9185 } }
                    },
                    {
                        "type": "text",
                        "value": ". The first argument is a new JavaScript object, the one that ",
                        "position": { "start": { "line": 285, "column": 64, "offset": 9185 }, "end": { "line": 285, "column": 126, "offset": 9247 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "Object.assign()" }],
                        "position": { "start": { "line": 285, "column": 126, "offset": 9247 }, "end": { "line": 285, "column": 143, "offset": 9264 } }
                    },
                    {
                        "type": "text",
                        "value": " will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:",
                        "position": { "start": { "line": 285, "column": 143, "offset": 9264 }, "end": { "line": 285, "column": 280, "offset": 9401 } }
                    }
                ],
                "position": { "start": { "line": 285, "column": 1, "offset": 9122 }, "end": { "line": 285, "column": 280, "offset": 9401 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "const coffeeWithMilk = Object.assign({}, coffee, { milk: true });\n" }],
                        "position": { "start": { "line": 287, "column": 1, "offset": 9403 }, "end": { "line": 289, "column": 4, "offset": 9478 } }
                    }
                ],
                "position": { "start": { "line": 287, "column": 1, "offset": 9403 }, "end": { "line": 289, "column": 4, "offset": 9478 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "Object.assign()" }],
                        "position": { "start": { "line": 291, "column": 1, "offset": 9480 }, "end": { "line": 291, "column": 18, "offset": 9497 } }
                    },
                    {
                        "type": "text",
                        "value": " is a handy method for working with \"immutable\" JavaScript objects.",
                        "position": { "start": { "line": 291, "column": 18, "offset": 9497 }, "end": { "line": 291, "column": 85, "offset": 9564 } }
                    }
                ],
                "position": { "start": { "line": 291, "column": 1, "offset": 9480 }, "end": { "line": 291, "column": 85, "offset": 9564 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Template literals",
                        "position": { "start": { "line": 293, "column": 4, "offset": 9569 }, "end": { "line": 293, "column": 21, "offset": 9586 } }
                    }
                ],
                "position": { "start": { "line": 293, "column": 1, "offset": 9566 }, "end": { "line": 293, "column": 21, "offset": 9586 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "In ES5 JavaScript, you'd interpolate variables into strings like this:",
                        "position": { "start": { "line": 295, "column": 1, "offset": 9588 }, "end": { "line": 295, "column": 71, "offset": 9658 } }
                    }
                ],
                "position": { "start": { "line": 295, "column": 1, "offset": 9588 }, "end": { "line": 295, "column": 71, "offset": 9658 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "var greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';\n" }],
                        "position": { "start": { "line": 297, "column": 1, "offset": 9660 }, "end": { "line": 299, "column": 4, "offset": 9744 } }
                    }
                ],
                "position": { "start": { "line": 297, "column": 1, "offset": 9660 }, "end": { "line": 299, "column": 4, "offset": 9744 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "With ES6 template literals, we can create the same string like this:",
                        "position": { "start": { "line": 301, "column": 1, "offset": 9746 }, "end": { "line": 301, "column": 69, "offset": 9814 } }
                    }
                ],
                "position": { "start": { "line": 301, "column": 1, "offset": 9746 }, "end": { "line": 301, "column": 69, "offset": 9814 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "const greeting = `Hello, ${user}! It is ${degF} degrees outside.`;\n" }],
                        "position": { "start": { "line": 303, "column": 1, "offset": 9816 }, "end": { "line": 305, "column": 4, "offset": 9892 } }
                    }
                ],
                "position": { "start": { "line": 303, "column": 1, "offset": 9816 }, "end": { "line": 305, "column": 4, "offset": 9892 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "The spread operator (",
                        "position": { "start": { "line": 307, "column": 4, "offset": 9897 }, "end": { "line": 307, "column": 25, "offset": 9918 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "..." }],
                        "position": { "start": { "line": 307, "column": 25, "offset": 9918 }, "end": { "line": 307, "column": 30, "offset": 9923 } }
                    },
                    {
                        "type": "text",
                        "value": ")",
                        "position": { "start": { "line": 307, "column": 30, "offset": 9923 }, "end": { "line": 307, "column": 31, "offset": 9924 } }
                    }
                ],
                "position": { "start": { "line": 307, "column": 1, "offset": 9894 }, "end": { "line": 307, "column": 31, "offset": 9924 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "In arrays, the ellipsis ",
                        "position": { "start": { "line": 309, "column": 1, "offset": 9926 }, "end": { "line": 309, "column": 25, "offset": 9950 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "..." }],
                        "position": { "start": { "line": 309, "column": 25, "offset": 9950 }, "end": { "line": 309, "column": 30, "offset": 9955 } }
                    },
                    {
                        "type": "text",
                        "value": " operator will ",
                        "position": { "start": { "line": 309, "column": 30, "offset": 9955 }, "end": { "line": 309, "column": 45, "offset": 9970 } }
                    },
                    {
                        "type": "element",
                        "tagName": "em",
                        "properties": {},
                        "children": [
                            {
                                "type": "text",
                                "value": "expand",
                                "position": { "start": { "line": 309, "column": 46, "offset": 9971 }, "end": { "line": 309, "column": 52, "offset": 9977 } }
                            }
                        ],
                        "position": { "start": { "line": 309, "column": 45, "offset": 9970 }, "end": { "line": 309, "column": 53, "offset": 9978 } }
                    },
                    {
                        "type": "text",
                        "value": " the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.",
                        "position": { "start": { "line": 309, "column": 53, "offset": 9978 }, "end": { "line": 309, "column": 200, "offset": 10125 } }
                    }
                ],
                "position": { "start": { "line": 309, "column": 1, "offset": 9926 }, "end": { "line": 309, "column": 200, "offset": 10125 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Here is an example:",
                        "position": { "start": { "line": 311, "column": 1, "offset": 10127 }, "end": { "line": 311, "column": 20, "offset": 10146 } }
                    }
                ],
                "position": { "start": { "line": 311, "column": 1, "offset": 10127 }, "end": { "line": 311, "column": 20, "offset": 10146 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "onst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);\n"
                            }
                        ],
                        "position": { "start": { "line": 313, "column": 1, "offset": 10148 }, "end": { "line": 319, "column": 4, "offset": 10254 } }
                    }
                ],
                "position": { "start": { "line": 313, "column": 1, "offset": 10148 }, "end": { "line": 319, "column": 4, "offset": 10254 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Notice how this is different than if we wrote:",
                        "position": { "start": { "line": 321, "column": 1, "offset": 10256 }, "end": { "line": 321, "column": 47, "offset": 10302 } }
                    }
                ],
                "position": { "start": { "line": 321, "column": 1, "offset": 10256 }, "end": { "line": 321, "column": 47, "offset": 10302 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "const d = [a, b, 7, 8, 9];\nconsole.log(d);\n" }],
                        "position": { "start": { "line": 323, "column": 1, "offset": 10304 }, "end": { "line": 326, "column": 4, "offset": 10356 } }
                    }
                ],
                "position": { "start": { "line": 323, "column": 1, "offset": 10304 }, "end": { "line": 326, "column": 4, "offset": 10356 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Enhanced object literals",
                        "position": { "start": { "line": 328, "column": 4, "offset": 10361 }, "end": { "line": 328, "column": 28, "offset": 10385 } }
                    }
                ],
                "position": { "start": { "line": 328, "column": 1, "offset": 10358 }, "end": { "line": 328, "column": 28, "offset": 10385 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "In ES5, all objects were required to have explicit key and value declarations:",
                        "position": { "start": { "line": 330, "column": 1, "offset": 10387 }, "end": { "line": 330, "column": 79, "offset": 10465 } }
                    }
                ],
                "position": { "start": { "line": 330, "column": 1, "offset": 10387 }, "end": { "line": 330, "column": 79, "offset": 10465 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "const explicit = {\n    getState: getState,\n    dispatch: dispatch\n};\n" }],
                        "position": { "start": { "line": 332, "column": 1, "offset": 10467 }, "end": { "line": 337, "column": 4, "offset": 10545 } }
                    }
                ],
                "position": { "start": { "line": 332, "column": 1, "offset": 10467 }, "end": { "line": 337, "column": 4, "offset": 10545 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "In ES6, you can use this terser syntax whenever the property name and variable name are the same:",
                        "position": { "start": { "line": 339, "column": 1, "offset": 10547 }, "end": { "line": 339, "column": 98, "offset": 10644 } }
                    }
                ],
                "position": { "start": { "line": 339, "column": 1, "offset": 10547 }, "end": { "line": 339, "column": 98, "offset": 10644 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "const implicit = {\n    getState,\n    dispatch\n};\n" }],
                        "position": { "start": { "line": 341, "column": 1, "offset": 10646 }, "end": { "line": 346, "column": 4, "offset": 10704 } }
                    }
                ],
                "position": { "start": { "line": 341, "column": 1, "offset": 10646 }, "end": { "line": 346, "column": 4, "offset": 10704 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.",
                        "position": { "start": { "line": 348, "column": 1, "offset": 10706 }, "end": { "line": 348, "column": 161, "offset": 10866 } }
                    }
                ],
                "position": { "start": { "line": 348, "column": 1, "offset": 10706 }, "end": { "line": 348, "column": 161, "offset": 10866 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Default arguments",
                        "position": { "start": { "line": 350, "column": 4, "offset": 10871 }, "end": { "line": 350, "column": 21, "offset": 10888 } }
                    }
                ],
                "position": { "start": { "line": 350, "column": 1, "offset": 10868 }, "end": { "line": 350, "column": 21, "offset": 10888 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "With ES6, you can specify a default value for an argument in the case that it is ",
                        "position": { "start": { "line": 352, "column": 1, "offset": 10890 }, "end": { "line": 352, "column": 82, "offset": 10971 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "undefined" }],
                        "position": { "start": { "line": 352, "column": 82, "offset": 10971 }, "end": { "line": 352, "column": 93, "offset": 10982 } }
                    },
                    {
                        "type": "text",
                        "value": " when the function is called.",
                        "position": { "start": { "line": 352, "column": 93, "offset": 10982 }, "end": { "line": 352, "column": 122, "offset": 11011 } }
                    }
                ],
                "position": { "start": { "line": 352, "column": 1, "offset": 10890 }, "end": { "line": 352, "column": 122, "offset": 11011 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "This:",
                        "position": { "start": { "line": 354, "column": 1, "offset": 11013 }, "end": { "line": 354, "column": 6, "offset": 11018 } }
                    }
                ],
                "position": { "start": { "line": 354, "column": 1, "offset": 11013 }, "end": { "line": 354, "column": 6, "offset": 11018 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "unction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}\n"
                            }
                        ],
                        "position": { "start": { "line": 356, "column": 1, "offset": 11020 }, "end": { "line": 363, "column": 4, "offset": 11130 } }
                    }
                ],
                "position": { "start": { "line": 356, "column": 1, "offset": 11020 }, "end": { "line": 363, "column": 4, "offset": 11130 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Can be written as this:",
                        "position": { "start": { "line": 365, "column": 1, "offset": 11132 }, "end": { "line": 365, "column": 24, "offset": 11155 } }
                    }
                ],
                "position": { "start": { "line": 365, "column": 1, "offset": 11132 }, "end": { "line": 365, "column": 24, "offset": 11155 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "function divide(a, b = 1) {\n    return a / b;\n}\n" }],
                        "position": { "start": { "line": 367, "column": 1, "offset": 11157 }, "end": { "line": 371, "column": 4, "offset": 11214 } }
                    }
                ],
                "position": { "start": { "line": 367, "column": 1, "offset": 11157 }, "end": { "line": 371, "column": 4, "offset": 11214 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "In both cases, using the function looks like this:",
                        "position": { "start": { "line": 373, "column": 1, "offset": 11216 }, "end": { "line": 373, "column": 51, "offset": 11266 } }
                    }
                ],
                "position": { "start": { "line": 373, "column": 1, "offset": 11216 }, "end": { "line": 373, "column": 51, "offset": 11266 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "divide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);\n" }],
                        "position": { "start": { "line": 375, "column": 1, "offset": 11268 }, "end": { "line": 381, "column": 4, "offset": 11329 } }
                    }
                ],
                "position": { "start": { "line": 375, "column": 1, "offset": 11268 }, "end": { "line": 381, "column": 4, "offset": 11329 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Whenever the argument ",
                        "position": { "start": { "line": 383, "column": 1, "offset": 11331 }, "end": { "line": 383, "column": 23, "offset": 11353 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "b" }],
                        "position": { "start": { "line": 383, "column": 23, "offset": 11353 }, "end": { "line": 383, "column": 26, "offset": 11356 } }
                    },
                    {
                        "type": "text",
                        "value": " in the example above is ",
                        "position": { "start": { "line": 383, "column": 26, "offset": 11356 }, "end": { "line": 383, "column": 51, "offset": 11381 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "undefined" }],
                        "position": { "start": { "line": 383, "column": 51, "offset": 11381 }, "end": { "line": 383, "column": 62, "offset": 11392 } }
                    },
                    {
                        "type": "text",
                        "value": ", the default argument is used. Note that ",
                        "position": { "start": { "line": 383, "column": 62, "offset": 11392 }, "end": { "line": 383, "column": 104, "offset": 11434 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "null" }],
                        "position": { "start": { "line": 383, "column": 104, "offset": 11434 }, "end": { "line": 383, "column": 110, "offset": 11440 } }
                    },
                    {
                        "type": "text",
                        "value": " will not use the default argument:",
                        "position": { "start": { "line": 383, "column": 110, "offset": 11440 }, "end": { "line": 383, "column": 145, "offset": 11475 } }
                    }
                ],
                "position": { "start": { "line": 383, "column": 1, "offset": 11331 }, "end": { "line": 383, "column": 145, "offset": 11475 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [{ "type": "text", "value": "divide(14, null);\n" }],
                        "position": { "start": { "line": 385, "column": 1, "offset": 11477 }, "end": { "line": 387, "column": 4, "offset": 11504 } }
                    }
                ],
                "position": { "start": { "line": 385, "column": 1, "offset": 11477 }, "end": { "line": 387, "column": 4, "offset": 11504 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h2",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Destructuring assignments",
                        "position": { "start": { "line": 389, "column": 4, "offset": 11509 }, "end": { "line": 389, "column": 29, "offset": 11534 } }
                    }
                ],
                "position": { "start": { "line": 389, "column": 1, "offset": 11506 }, "end": { "line": 389, "column": 29, "offset": 11534 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h3",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "For arrays",
                        "position": { "start": { "line": 391, "column": 5, "offset": 11540 }, "end": { "line": 391, "column": 15, "offset": 11550 } }
                    }
                ],
                "position": { "start": { "line": 391, "column": 1, "offset": 11536 }, "end": { "line": 391, "column": 15, "offset": 11550 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "In ES5, extracting and assigning multiple elements from an array looked like this:",
                        "position": { "start": { "line": 393, "column": 1, "offset": 11552 }, "end": { "line": 393, "column": 83, "offset": 11634 } }
                    }
                ],
                "position": { "start": { "line": 393, "column": 1, "offset": 11552 }, "end": { "line": 393, "column": 83, "offset": 11634 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            { "type": "text", "value": "ar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];\n" }
                        ],
                        "position": { "start": { "line": 395, "column": 1, "offset": 11636 }, "end": { "line": 399, "column": 4, "offset": 11741 } }
                    }
                ],
                "position": { "start": { "line": 395, "column": 1, "offset": 11636 }, "end": { "line": 399, "column": 4, "offset": 11741 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "In ES6, we can use the destructuring syntax to accomplish the same task like this:",
                        "position": { "start": { "line": 401, "column": 1, "offset": 11743 }, "end": { "line": 401, "column": 83, "offset": 11825 } }
                    }
                ],
                "position": { "start": { "line": 401, "column": 1, "offset": 11743 }, "end": { "line": 401, "column": 83, "offset": 11825 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            { "type": "text", "value": "const [veg1, veg2] = ['asparagus', 'broccoli', 'onion'];\nconsole.log(veg1);\nconsole.log(veg2);\n" }
                        ],
                        "position": { "start": { "line": 403, "column": 1, "offset": 11827 }, "end": { "line": 407, "column": 4, "offset": 11931 } }
                    }
                ],
                "position": { "start": { "line": 403, "column": 1, "offset": 11827 }, "end": { "line": 407, "column": 4, "offset": 11931 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ",
                        "position": { "start": { "line": 409, "column": 1, "offset": 11933 }, "end": { "line": 409, "column": 134, "offset": 12066 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "'onion'" }],
                        "position": { "start": { "line": 409, "column": 134, "offset": 12066 }, "end": { "line": 409, "column": 143, "offset": 12075 } }
                    },
                    {
                        "type": "text",
                        "value": " is ignored and has no variable bound to it.",
                        "position": { "start": { "line": 409, "column": 143, "offset": 12075 }, "end": { "line": 409, "column": 187, "offset": 12119 } }
                    }
                ],
                "position": { "start": { "line": 409, "column": 1, "offset": 11933 }, "end": { "line": 409, "column": 187, "offset": 12119 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h3",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "For objects",
                        "position": { "start": { "line": 411, "column": 5, "offset": 12125 }, "end": { "line": 411, "column": 16, "offset": 12136 } }
                    }
                ],
                "position": { "start": { "line": 411, "column": 1, "offset": 12121 }, "end": { "line": 411, "column": 16, "offset": 12136 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "We can do something similar for extracting object properties into variables:",
                        "position": { "start": { "line": 413, "column": 1, "offset": 12138 }, "end": { "line": 413, "column": 77, "offset": 12214 } }
                    }
                ],
                "position": { "start": { "line": 413, "column": 1, "offset": 12138 }, "end": { "line": 413, "column": 77, "offset": 12214 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "const smoothie = {\n    fats: ['avocado', 'peanut butter', 'greek yogurt'],\n    liquids: ['almond milk'],\n    greens: ['spinach'],\n    fruits: ['blueberry', 'banana']\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);\n"
                            }
                        ],
                        "position": { "start": { "line": 415, "column": 1, "offset": 12216 }, "end": { "line": 427, "column": 4, "offset": 12477 } }
                    }
                ],
                "position": { "start": { "line": 415, "column": 1, "offset": 12216 }, "end": { "line": 427, "column": 4, "offset": 12477 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "h3",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Parameter context matching",
                        "position": { "start": { "line": 429, "column": 5, "offset": 12483 }, "end": { "line": 429, "column": 31, "offset": 12509 } }
                    }
                ],
                "position": { "start": { "line": 429, "column": 1, "offset": 12479 }, "end": { "line": 429, "column": 31, "offset": 12509 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:",
                        "position": { "start": { "line": 431, "column": 1, "offset": 12511 }, "end": { "line": 431, "column": 121, "offset": 12631 } }
                    }
                ],
                "position": { "start": { "line": 431, "column": 1, "offset": 12511 }, "end": { "line": 431, "column": 121, "offset": 12631 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "const containsSpinach = ({ greens }) => {\n    if (greens.find((g) => g === 'spinach')) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\ncontainsSpinach(smoothie);\n"
                            }
                        ],
                        "position": { "start": { "line": 433, "column": 1, "offset": 12633 }, "end": { "line": 443, "column": 4, "offset": 12824 } }
                    }
                ],
                "position": { "start": { "line": 433, "column": 1, "offset": 12633 }, "end": { "line": 443, "column": 4, "offset": 12824 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "We do this often with functional React components:",
                        "position": { "start": { "line": 445, "column": 1, "offset": 12826 }, "end": { "line": 445, "column": 51, "offset": 12876 } }
                    }
                ],
                "position": { "start": { "line": 445, "column": 1, "offset": 12826 }, "end": { "line": 445, "column": 51, "offset": 12876 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "pre",
                "properties": {},
                "children": [
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": { "className": ["language-js"] },
                        "children": [
                            {
                                "type": "text",
                                "value": "const IngredientList = ({ ingredients, onClick }) => (\n    <ul className=\"IngredientList\">\n        {ingredients.map((i) => (\n            <li key={i.id} onClick={() => onClick(i.id)} className=\"item\">\n                {i.name}\n            </li>\n        ))}\n    </ul>\n);\n"
                            }
                        ],
                        "position": { "start": { "line": 447, "column": 1, "offset": 12878 }, "end": { "line": 457, "column": 4, "offset": 13155 } }
                    }
                ],
                "position": { "start": { "line": 447, "column": 1, "offset": 12878 }, "end": { "line": 457, "column": 4, "offset": 13155 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Here, we use destructuring to extract the props into variables (",
                        "position": { "start": { "line": 459, "column": 1, "offset": 13157 }, "end": { "line": 459, "column": 65, "offset": 13221 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "ingredients" }],
                        "position": { "start": { "line": 459, "column": 65, "offset": 13221 }, "end": { "line": 459, "column": 78, "offset": 13234 } }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": { "start": { "line": 459, "column": 78, "offset": 13234 }, "end": { "line": 459, "column": 83, "offset": 13239 } }
                    },
                    {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [{ "type": "text", "value": "onClick" }],
                        "position": { "start": { "line": 459, "column": 83, "offset": 13239 }, "end": { "line": 459, "column": 92, "offset": 13248 } }
                    },
                    {
                        "type": "text",
                        "value": ") that we then use inside the component's function body.",
                        "position": { "start": { "line": 459, "column": 92, "offset": 13248 }, "end": { "line": 459, "column": 148, "offset": 13304 } }
                    }
                ],
                "position": { "start": { "line": 459, "column": 1, "offset": 13157 }, "end": { "line": 459, "column": 148, "offset": 13304 } }
            },
            { "type": "text", "value": "\n" },
            {
                "type": "element",
                "tagName": "p",
                "properties": {},
                "children": [
                    {
                        "type": "text",
                        "value": "Share To Linkedin:",
                        "position": { "start": { "line": 467, "column": 1, "offset": 13312 }, "end": { "line": 467, "column": 19, "offset": 13330 } }
                    }
                ],
                "position": { "start": { "line": 467, "column": 1, "offset": 13312 }, "end": { "line": 467, "column": 19, "offset": 13330 } }
            }
        ],
        "position": { "start": { "line": 1, "column": 1, "offset": 0 }, "end": { "line": 469, "column": 1, "offset": 13332 } }
    }
}
