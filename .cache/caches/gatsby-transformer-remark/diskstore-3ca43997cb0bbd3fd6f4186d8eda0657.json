{"expireTime":9007200908516803000,"key":"transformer-remark-markdown-html-872f25817cbf375e01fac7cbce3ea987-gatsby-remark-code-buttons-","val":"<p>By default you cannot pass arguments to a callback function. For example:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`function callback() {\n    console.log('Hi human');\n}\n\ndocument.getElementById('someelem').addEventListener('click', callback);`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre><code class=\"language-js\">function callback() {\n    console.log('Hi human');\n}\n\ndocument.getElementById('someelem').addEventListener('click', callback);\n</code></pre>\n<p>You can take advantage of the closure scope in Javascript to pass arguments to callback functions. Check this example:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`function callback(a, b) {\n    return function () {\n        console.log('sum = ', a + b);\n    };\n}\n\nvar x = 1,\n    y = 2;\ndocument.getElementById('someelem').addEventListener('click', callback(x, y));`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre><code class=\"language-js\">function callback(a, b) {\n    return function () {\n        console.log('sum = ', a + b);\n    };\n}\n\nvar x = 1,\n    y = 2;\ndocument.getElementById('someelem').addEventListener('click', callback(x, y));\n</code></pre>\n<h3>What are closures?</h3>\n<p>Closures are functions that refer to independent (free) variables. In other words, the function defined in the closure 'remembers' the environment in which it was created. <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\">Check MDN Documentation</a> to learn more.</p>\n<p>So this way the arguments <code>x</code> and <code>y</code> are in scope of the callback function when it is called.</p>\n<p>Another method to do this is using the <code>bind</code> method. For example:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`var alertText = function (text) {\n  alert(text);\n};\n\ndocument\n  .getElementById(&quot;someelem&quot;)\n  .addEventListener(&quot;click&quot;, alertText.bind(this, &quot;hello&quot;));`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<pre><code class=\"language-js\">var alertText = function (text) {\n  alert(text);\n};\n\ndocument\n  .getElementById(\"someelem\")\n  .addEventListener(\"click\", alertText.bind(this, \"hello\"));\n</code></pre>"}