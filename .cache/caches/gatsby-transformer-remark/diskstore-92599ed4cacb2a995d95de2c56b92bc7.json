{
    "expireTime": 9007200888440671000,
    "key": "transformer-remark-markdown-ast-e58ecf7154e75a6fc5c359e372aa4314--",
    "val": {
        "type": "root",
        "children": [
            {
                "type": "html",
                "value": "<script async src=\"//jsfiddle.net/bgoonz/tu3Lw57r/embed/result/dark/\"></script>",
                "position": { "start": { "line": 1, "column": 1, "offset": 0 }, "end": { "line": 1, "column": 80, "offset": 79 }, "indent": [] }
            },
            {
                "type": "html",
                "value": "<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"Linear vs Binary Search\" src=\"https://codepen.io/bgoonz/embed/MWbZoOa?default-tab=result&editable=true&theme-id=light\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/bgoonz/pen/MWbZoOa\">\n  Linear vs Binary Search</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>",
                "position": { "start": { "line": 6, "column": 1, "offset": 84 }, "end": { "line": 10, "column": 10, "offset": 564 }, "indent": [1, 1, 1, 1] }
            },
            {
                "type": "html",
                "value": "<p class=\"codepen\" data-height=\"300\" data-theme-id=\"light\" data-default-tab=\"result\" data-slug-hash=\"GRNPEdY\" data-editable=\"true\" data-user=\"bgoonz\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/bgoonz/pen/GRNPEdY\">\n  Data Structures Viz</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>",
                "position": {
                    "start": { "line": 13, "column": 1, "offset": 567 },
                    "end": { "line": 18, "column": 80, "offset": 1174 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "Callstack Visualizer",
                        "position": { "start": { "line": 22, "column": 4, "offset": 1181 }, "end": { "line": 22, "column": 24, "offset": 1201 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 22, "column": 1, "offset": 1178 }, "end": { "line": 22, "column": 24, "offset": 1201 }, "indent": [] }
            },
            {
                "type": "html",
                "value": "<iframe src=\"https://visualize-callstack-qdvyu8oyc-visualize42.vercel.app/\" height=\"900px\" width=\"100%\">\n</iframe>",
                "position": { "start": { "line": 24, "column": 1, "offset": 1203 }, "end": { "line": 25, "column": 10, "offset": 1317 }, "indent": [1] }
            },
            {
                "type": "heading",
                "depth": 6,
                "children": [
                    {
                        "type": "text",
                        "value": "About the Call Stack",
                        "position": { "start": { "line": 27, "column": 8, "offset": 1326 }, "end": { "line": 27, "column": 28, "offset": 1346 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 27, "column": 1, "offset": 1319 }, "end": { "line": 27, "column": 28, "offset": 1346 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "TL;DR",
                                "position": {
                                    "start": { "line": 29, "column": 3, "offset": 1350 },
                                    "end": { "line": 29, "column": 8, "offset": 1355 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 29, "column": 1, "offset": 1348 }, "end": { "line": 29, "column": 10, "offset": 1357 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " *The ",
                        "position": { "start": { "line": 29, "column": 10, "offset": 1357 }, "end": { "line": 29, "column": 16, "offset": 1363 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 29, "column": 18, "offset": 1365 },
                                    "end": { "line": 29, "column": 28, "offset": 1375 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 29, "column": 16, "offset": 1363 }, "end": { "line": 29, "column": 30, "offset": 1377 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " tracks function calls. It is a LIFO stack of frames. Each frame represents a function call.*",
                        "position": {
                            "start": { "line": 29, "column": 30, "offset": 1377 },
                            "end": { "line": 29, "column": 123, "offset": 1470 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 29, "column": 1, "offset": 1348 }, "end": { "line": 29, "column": 123, "offset": 1470 }, "indent": [] }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 31, "column": 1, "offset": 1472 }, "end": { "line": 31, "column": 4, "offset": 1475 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The ",
                        "position": { "start": { "line": 33, "column": 1, "offset": 1477 }, "end": { "line": 33, "column": 5, "offset": 1481 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 33, "column": 7, "offset": 1483 },
                                    "end": { "line": 33, "column": 17, "offset": 1493 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 33, "column": 5, "offset": 1481 }, "end": { "line": 33, "column": 19, "offset": 1495 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " is a fundamental part of the JavaScript language. It is a record-keeping structure that allows us to perform function calls. Each function call is represented as a frame on the ",
                        "position": {
                            "start": { "line": 33, "column": 19, "offset": 1495 },
                            "end": { "line": 33, "column": 197, "offset": 1673 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 33, "column": 199, "offset": 1675 },
                                    "end": { "line": 33, "column": 209, "offset": 1685 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 33, "column": 197, "offset": 1673 },
                            "end": { "line": 33, "column": 211, "offset": 1687 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". This is how the JavaScript engine keeps track of which functions have been called and in what order. The JS engine uses this information to ensure execution picks back up in the right spot after a function returns.",
                        "position": {
                            "start": { "line": 33, "column": 211, "offset": 1687 },
                            "end": { "line": 33, "column": 427, "offset": 1903 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 33, "column": 1, "offset": 1477 }, "end": { "line": 33, "column": 427, "offset": 1903 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "When a JavaScript program first starts executing, the ",
                        "position": { "start": { "line": 35, "column": 1, "offset": 1905 }, "end": { "line": 35, "column": 55, "offset": 1959 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 35, "column": 57, "offset": 1961 },
                                    "end": { "line": 35, "column": 67, "offset": 1971 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 35, "column": 55, "offset": 1959 }, "end": { "line": 35, "column": 69, "offset": 1973 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " is empty. When the first function call is made, a new frame is pushed onto the top of the ",
                        "position": {
                            "start": { "line": 35, "column": 69, "offset": 1973 },
                            "end": { "line": 35, "column": 160, "offset": 2064 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 35, "column": 162, "offset": 2066 },
                                    "end": { "line": 35, "column": 172, "offset": 2076 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 35, "column": 160, "offset": 2064 },
                            "end": { "line": 35, "column": 174, "offset": 2078 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". When that function returns, its frame is popped off of the ",
                        "position": {
                            "start": { "line": 35, "column": 174, "offset": 2078 },
                            "end": { "line": 35, "column": 235, "offset": 2139 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 35, "column": 237, "offset": 2141 },
                                    "end": { "line": 35, "column": 247, "offset": 2151 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 35, "column": 235, "offset": 2139 },
                            "end": { "line": 35, "column": 249, "offset": 2153 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 35, "column": 249, "offset": 2153 },
                            "end": { "line": 35, "column": 250, "offset": 2154 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 35, "column": 1, "offset": 1905 }, "end": { "line": 35, "column": 250, "offset": 2154 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 6,
                "children": [
                    {
                        "type": "text",
                        "value": "About the Event Loop",
                        "position": { "start": { "line": 37, "column": 8, "offset": 2163 }, "end": { "line": 37, "column": 28, "offset": 2183 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 37, "column": 1, "offset": 2156 }, "end": { "line": 37, "column": 28, "offset": 2183 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "TL;DR",
                                "position": {
                                    "start": { "line": 39, "column": 3, "offset": 2187 },
                                    "end": { "line": 39, "column": 8, "offset": 2192 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 39, "column": 1, "offset": 2185 }, "end": { "line": 39, "column": 10, "offset": 2194 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " *The ",
                        "position": { "start": { "line": 39, "column": 10, "offset": 2194 }, "end": { "line": 39, "column": 16, "offset": 2200 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Event Loop",
                                "position": {
                                    "start": { "line": 39, "column": 18, "offset": 2202 },
                                    "end": { "line": 39, "column": 28, "offset": 2212 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 39, "column": 16, "offset": 2200 }, "end": { "line": 39, "column": 30, "offset": 2214 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " processes Tasks and Microtasks. It places them into the Call Stack for execution one at a time. It also controls when rerendering occurs.*",
                        "position": {
                            "start": { "line": 39, "column": 30, "offset": 2214 },
                            "end": { "line": 39, "column": 169, "offset": 2353 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 39, "column": 1, "offset": 2185 }, "end": { "line": 39, "column": 169, "offset": 2353 }, "indent": [] }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 41, "column": 1, "offset": 2355 }, "end": { "line": 41, "column": 4, "offset": 2358 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The Event Loop is a looping algorithm that processes the Tasks/Microtasks in the Task Queue and Microtask Queue. It handles selecting the next Task/Microtask to be run and placing it in the Call Stack for execution.",
                        "position": { "start": { "line": 43, "column": 1, "offset": 2360 }, "end": { "line": 43, "column": 216, "offset": 2575 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 43, "column": 1, "offset": 2360 }, "end": { "line": 43, "column": 216, "offset": 2575 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The Event Loop algorithm consists of four key steps:",
                        "position": { "start": { "line": 45, "column": 1, "offset": 2577 }, "end": { "line": 45, "column": 53, "offset": 2629 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 45, "column": 1, "offset": 2577 }, "end": { "line": 45, "column": 53, "offset": 2629 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": true,
                "start": 1,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Evaluate Script:",
                                                "position": {
                                                    "start": { "line": 47, "column": 7, "offset": 2637 },
                                                    "end": { "line": 47, "column": 23, "offset": 2653 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 47, "column": 5, "offset": 2635 },
                                            "end": { "line": 47, "column": 25, "offset": 2655 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " Synchronously execute the script as though it were a function body. Run until the Call Stack is empty.",
                                        "position": {
                                            "start": { "line": 47, "column": 25, "offset": 2655 },
                                            "end": { "line": 47, "column": 128, "offset": 2758 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 47, "column": 5, "offset": 2635 },
                                    "end": { "line": 47, "column": 128, "offset": 2758 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 47, "column": 1, "offset": 2631 }, "end": { "line": 47, "column": 128, "offset": 2758 }, "indent": [] }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Run a Task:",
                                                "position": {
                                                    "start": { "line": 48, "column": 7, "offset": 2765 },
                                                    "end": { "line": 48, "column": 18, "offset": 2776 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 48, "column": 5, "offset": 2763 },
                                            "end": { "line": 48, "column": 20, "offset": 2778 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " Select the oldest Task from the Task Queue. Run it until the Call Stack is empty.",
                                        "position": {
                                            "start": { "line": 48, "column": 20, "offset": 2778 },
                                            "end": { "line": 48, "column": 102, "offset": 2860 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 48, "column": 5, "offset": 2763 },
                                    "end": { "line": 48, "column": 102, "offset": 2860 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 48, "column": 1, "offset": 2759 }, "end": { "line": 48, "column": 102, "offset": 2860 }, "indent": [] }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Run all Microtasks:",
                                                "position": {
                                                    "start": { "line": 49, "column": 7, "offset": 2867 },
                                                    "end": { "line": 49, "column": 26, "offset": 2886 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 49, "column": 5, "offset": 2865 },
                                            "end": { "line": 49, "column": 28, "offset": 2888 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " Select the oldest Microtask from the Microtask Queue. Run it until the Call Stack is empty. Repeat until the Microtask Queue is empty.",
                                        "position": {
                                            "start": { "line": 49, "column": 28, "offset": 2888 },
                                            "end": { "line": 49, "column": 163, "offset": 3023 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 49, "column": 5, "offset": 2865 },
                                    "end": { "line": 49, "column": 163, "offset": 3023 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 49, "column": 1, "offset": 2861 }, "end": { "line": 49, "column": 163, "offset": 3023 }, "indent": [] }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Rerender the UI:",
                                                "position": {
                                                    "start": { "line": 50, "column": 7, "offset": 3030 },
                                                    "end": { "line": 50, "column": 23, "offset": 3046 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 50, "column": 5, "offset": 3028 },
                                            "end": { "line": 50, "column": 25, "offset": 3048 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " Rerender the UI. Then, return to step 2. (This step only applies to browsers, not NodeJS).",
                                        "position": {
                                            "start": { "line": 50, "column": 25, "offset": 3048 },
                                            "end": { "line": 50, "column": 116, "offset": 3139 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 50, "column": 5, "offset": 3028 },
                                    "end": { "line": 50, "column": 116, "offset": 3139 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 50, "column": 1, "offset": 3024 }, "end": { "line": 50, "column": 116, "offset": 3139 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 47, "column": 1, "offset": 2631 }, "end": { "line": 50, "column": 116, "offset": 3139 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Let's model the Event Loop with some JavaScript psuedocode:",
                        "position": { "start": { "line": 52, "column": 1, "offset": 3141 }, "end": { "line": 52, "column": 60, "offset": 3200 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 52, "column": 1, "offset": 3141 }, "end": { "line": 52, "column": 60, "offset": 3200 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "while (EventLoop.waitForTask()) {\n  const taskQueue = EventLoop.selectTaskQueue();\n  if (taskQueue.hasNextTask()) {\n    taskQueue.processNextTask();\n  }\n\n  const microtaskQueue = EventLoop.microTaskQueue;\n  while (microtaskQueue.hasNextMicrotask()) {\n    microtaskQueue.processNextMicrotask();\n  }\n\n  rerender();\n}",
                "position": {
                    "start": { "line": 54, "column": 1, "offset": 3202 },
                    "end": { "line": 68, "column": 4, "offset": 3524 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            }
        ],
        "position": { "start": { "line": 1, "column": 1, "offset": 0 }, "end": { "line": 69, "column": 1, "offset": 3525 } }
    }
}
