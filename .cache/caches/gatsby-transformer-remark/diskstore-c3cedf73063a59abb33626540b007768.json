{"expireTime":9007200882630523000,"key":"transformer-remark-markdown-html-ast-c417dc46b0762dc69ded75535e22fff8--","val":{"type":"root","children":[{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":4,"offset":5}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"description: Review","position":{"start":{"line":4,"column":4,"offset":12},"end":{"line":4,"column":23,"offset":31}}}],"position":{"start":{"line":4,"column":1,"offset":9},"end":{"line":4,"column":23,"offset":31}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Review-Of-Previous-Concepts","position":{"start":{"line":6,"column":3,"offset":37},"end":{"line":6,"column":30,"offset":64}}}],"position":{"start":{"line":6,"column":1,"offset":35},"end":{"line":6,"column":30,"offset":64}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":8,"column":5,"offset":72},"end":{"line":8,"column":23,"offset":90}}}],"position":{"start":{"line":8,"column":1,"offset":68},"end":{"line":8,"column":23,"offset":90}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Running JS Locally Concepts","position":{"start":{"line":10,"column":5,"offset":98},"end":{"line":10,"column":32,"offset":125}}}],"position":{"start":{"line":10,"column":1,"offset":94},"end":{"line":10,"column":32,"offset":125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Match the commands ","position":{"start":{"line":12,"column":5,"offset":133},"end":{"line":12,"column":24,"offset":152}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ls"}],"position":{"start":{"line":12,"column":24,"offset":152},"end":{"line":12,"column":28,"offset":156}}},{"type":"text","value":", ","position":{"start":{"line":12,"column":28,"offset":156},"end":{"line":12,"column":30,"offset":158}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":12,"column":30,"offset":158},"end":{"line":12,"column":34,"offset":162}}},{"type":"text","value":", ","position":{"start":{"line":12,"column":34,"offset":162},"end":{"line":12,"column":36,"offset":164}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pwd"}],"position":{"start":{"line":12,"column":36,"offset":164},"end":{"line":12,"column":41,"offset":169}}},{"type":"text","value":" to their descriptions","position":{"start":{"line":12,"column":41,"offset":169},"end":{"line":12,"column":63,"offset":191}}}],"position":{"start":{"line":12,"column":5,"offset":133},"end":{"line":12,"column":63,"offset":191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ls"}],"position":{"start":{"line":13,"column":9,"offset":201},"end":{"line":13,"column":13,"offset":205}}},{"type":"text","value":" lists contents of current directory","position":{"start":{"line":13,"column":13,"offset":205},"end":{"line":13,"column":49,"offset":241}}}],"position":{"start":{"line":13,"column":5,"offset":197},"end":{"line":13,"column":49,"offset":241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":14,"column":9,"offset":251},"end":{"line":14,"column":13,"offset":255}}},{"type":"text","value":" changes current directory","position":{"start":{"line":14,"column":13,"offset":255},"end":{"line":14,"column":39,"offset":281}}}],"position":{"start":{"line":14,"column":9,"offset":251},"end":{"line":14,"column":39,"offset":281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd .."}],"position":{"start":{"line":15,"column":13,"offset":295},"end":{"line":15,"column":20,"offset":302}}},{"type":"text","value":" takes you up one level","position":{"start":{"line":15,"column":20,"offset":302},"end":{"line":15,"column":43,"offset":325}}}],"position":{"start":{"line":15,"column":9,"offset":291},"end":{"line":15,"column":43,"offset":325}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":16,"column":13,"offset":339},"end":{"line":16,"column":17,"offset":343}}},{"type":"text","value":" alone takes you back home","position":{"start":{"line":16,"column":17,"offset":343},"end":{"line":16,"column":43,"offset":369}}}],"position":{"start":{"line":16,"column":9,"offset":335},"end":{"line":16,"column":43,"offset":369}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":9,"offset":291},"end":{"line":16,"column":43,"offset":369}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":5,"offset":247},"end":{"line":16,"column":43,"offset":369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pwd"}],"position":{"start":{"line":17,"column":9,"offset":379},"end":{"line":17,"column":14,"offset":384}}},{"type":"text","value":" returns current directory","position":{"start":{"line":17,"column":14,"offset":384},"end":{"line":17,"column":40,"offset":410}}}],"position":{"start":{"line":17,"column":5,"offset":375},"end":{"line":17,"column":40,"offset":410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":5,"offset":197},"end":{"line":17,"column":40,"offset":410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":129},"end":{"line":17,"column":40,"offset":410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Given a folder structure diagram, a list of 'cd ","position":{"start":{"line":18,"column":5,"offset":416},"end":{"line":18,"column":53,"offset":464}}},{"type":"text","value":"(","position":{"start":{"line":18,"column":53,"offset":464},"end":{"line":18,"column":55,"offset":466}}},{"type":"text","value":"path","position":{"start":{"line":18,"column":55,"offset":466},"end":{"line":18,"column":59,"offset":470}}},{"type":"text","value":")","position":{"start":{"line":18,"column":59,"offset":470},"end":{"line":18,"column":61,"offset":472}}},{"type":"text","value":"' commands and target files, match the paths to the target files.","position":{"start":{"line":18,"column":61,"offset":472},"end":{"line":18,"column":126,"offset":537}}}],"position":{"start":{"line":18,"column":1,"offset":412},"end":{"line":18,"column":126,"offset":537}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use VSCode to create a folder. Within the folder create a .js file containing ","position":{"start":{"line":19,"column":5,"offset":543},"end":{"line":19,"column":83,"offset":621}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log('hello new world');"}],"position":{"start":{"line":19,"column":83,"offset":621},"end":{"line":19,"column":116,"offset":654}}},{"type":"text","value":" and save it.","position":{"start":{"line":19,"column":116,"offset":654},"end":{"line":19,"column":129,"offset":667}}}],"position":{"start":{"line":19,"column":1,"offset":539},"end":{"line":19,"column":129,"offset":667}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use node to execute a JavaScript file in the terminal","position":{"start":{"line":20,"column":5,"offset":673},"end":{"line":20,"column":58,"offset":726}}}],"position":{"start":{"line":20,"column":1,"offset":669},"end":{"line":20,"column":58,"offset":726}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":129},"end":{"line":20,"column":58,"offset":726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Plain Old JS Object Lesson Concepts","position":{"start":{"line":22,"column":5,"offset":734},"end":{"line":22,"column":40,"offset":769}}}],"position":{"start":{"line":22,"column":1,"offset":730},"end":{"line":22,"column":40,"offset":769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Label variables as either Primitive vs. Reference","position":{"start":{"line":24,"column":5,"offset":777},"end":{"line":24,"column":54,"offset":826}}}],"position":{"start":{"line":24,"column":5,"offset":777},"end":{"line":24,"column":54,"offset":826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"primitives: strings, booleans, numbers, null and undefined","position":{"start":{"line":25,"column":9,"offset":836},"end":{"line":25,"column":67,"offset":894}}}],"position":{"start":{"line":25,"column":9,"offset":836},"end":{"line":25,"column":67,"offset":894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"primitives are immutable","position":{"start":{"line":26,"column":13,"offset":908},"end":{"line":26,"column":37,"offset":932}}}],"position":{"start":{"line":26,"column":9,"offset":904},"end":{"line":26,"column":37,"offset":932}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":9,"offset":904},"end":{"line":26,"column":37,"offset":932}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":5,"offset":832},"end":{"line":26,"column":37,"offset":932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"refereces: objects ","position":{"start":{"line":27,"column":9,"offset":942},"end":{"line":27,"column":28,"offset":961}}},{"type":"text","value":"(","position":{"start":{"line":27,"column":28,"offset":961},"end":{"line":27,"column":30,"offset":963}}},{"type":"text","value":"including arrays","position":{"start":{"line":27,"column":30,"offset":963},"end":{"line":27,"column":46,"offset":979}}},{"type":"text","value":")","position":{"start":{"line":27,"column":46,"offset":979},"end":{"line":27,"column":48,"offset":981}}}],"position":{"start":{"line":27,"column":9,"offset":942},"end":{"line":27,"column":48,"offset":981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"references are mutable","position":{"start":{"line":28,"column":13,"offset":995},"end":{"line":28,"column":35,"offset":1017}}}],"position":{"start":{"line":28,"column":9,"offset":991},"end":{"line":28,"column":35,"offset":1017}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":9,"offset":991},"end":{"line":28,"column":35,"offset":1017}}},{"type":"text","value":"\n"}],"position":{"start":{"line":27,"column":5,"offset":938},"end":{"line":28,"column":35,"offset":1017}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":5,"offset":832},"end":{"line":28,"column":35,"offset":1017}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":773},"end":{"line":28,"column":35,"offset":1017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identify when to use ","position":{"start":{"line":29,"column":5,"offset":1023},"end":{"line":29,"column":26,"offset":1044}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"."}],"position":{"start":{"line":29,"column":26,"offset":1044},"end":{"line":29,"column":29,"offset":1047}}},{"type":"text","value":" vs ","position":{"start":{"line":29,"column":29,"offset":1047},"end":{"line":29,"column":33,"offset":1051}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[]"}],"position":{"start":{"line":29,"column":33,"offset":1051},"end":{"line":29,"column":37,"offset":1055}}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":29,"column":37,"offset":1055},"end":{"line":29,"column":72,"offset":1090}}}],"position":{"start":{"line":29,"column":5,"offset":1023},"end":{"line":29,"column":72,"offset":1090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"dot syntax ","position":{"start":{"line":30,"column":9,"offset":1100},"end":{"line":30,"column":20,"offset":1111}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object.key"}],"position":{"start":{"line":30,"column":20,"offset":1111},"end":{"line":30,"column":32,"offset":1123}}}],"position":{"start":{"line":30,"column":9,"offset":1100},"end":{"line":30,"column":32,"offset":1123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"easier to read","position":{"start":{"line":31,"column":13,"offset":1137},"end":{"line":31,"column":27,"offset":1151}}}],"position":{"start":{"line":31,"column":9,"offset":1133},"end":{"line":31,"column":27,"offset":1151}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"easier to write","position":{"start":{"line":32,"column":13,"offset":1165},"end":{"line":32,"column":28,"offset":1180}}}],"position":{"start":{"line":32,"column":9,"offset":1161},"end":{"line":32,"column":28,"offset":1180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"cannot use variables as keys","position":{"start":{"line":33,"column":13,"offset":1194},"end":{"line":33,"column":41,"offset":1222}}}],"position":{"start":{"line":33,"column":9,"offset":1190},"end":{"line":33,"column":41,"offset":1222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"keys cannot begin with a number","position":{"start":{"line":34,"column":13,"offset":1236},"end":{"line":34,"column":44,"offset":1267}}}],"position":{"start":{"line":34,"column":9,"offset":1232},"end":{"line":34,"column":44,"offset":1267}}},{"type":"text","value":"\n"}],"position":{"start":{"line":31,"column":9,"offset":1133},"end":{"line":34,"column":44,"offset":1267}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":5,"offset":1096},"end":{"line":34,"column":44,"offset":1267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"bracket notation ","position":{"start":{"line":35,"column":9,"offset":1277},"end":{"line":35,"column":26,"offset":1294}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object[\"key]"}],"position":{"start":{"line":35,"column":26,"offset":1294},"end":{"line":35,"column":40,"offset":1308}}}],"position":{"start":{"line":35,"column":9,"offset":1277},"end":{"line":35,"column":40,"offset":1308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"allows variables as keys","position":{"start":{"line":36,"column":13,"offset":1322},"end":{"line":36,"column":37,"offset":1346}}}],"position":{"start":{"line":36,"column":9,"offset":1318},"end":{"line":36,"column":37,"offset":1346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"strings that start with numbers can be use as keys","position":{"start":{"line":37,"column":13,"offset":1360},"end":{"line":37,"column":63,"offset":1410}}}],"position":{"start":{"line":37,"column":9,"offset":1356},"end":{"line":37,"column":63,"offset":1410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":36,"column":9,"offset":1318},"end":{"line":37,"column":63,"offset":1410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":35,"column":5,"offset":1273},"end":{"line":37,"column":63,"offset":1410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":5,"offset":1096},"end":{"line":37,"column":63,"offset":1410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":29,"column":1,"offset":1019},"end":{"line":37,"column":63,"offset":1410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write an object literal with a variable key using interpolation","position":{"start":{"line":38,"column":5,"offset":1416},"end":{"line":38,"column":68,"offset":1479}}}],"position":{"start":{"line":38,"column":5,"offset":1416},"end":{"line":38,"column":68,"offset":1479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"put it in brackets to access the value of the variable, rather than just make the value that string","position":{"start":{"line":40,"column":9,"offset":1491},"end":{"line":40,"column":108,"offset":1590}}}],"position":{"start":{"line":40,"column":9,"offset":1491},"end":{"line":40,"column":108,"offset":1590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };\n"}],"position":{"start":{"line":42,"column":9,"offset":1602},"end":{"line":45,"column":12,"offset":1705}}}],"position":{"start":{"line":42,"column":9,"offset":1602},"end":{"line":45,"column":12,"offset":1705}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":5,"offset":1487},"end":{"line":45,"column":12,"offset":1705}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":5,"offset":1487},"end":{"line":45,"column":12,"offset":1705}}},{"type":"text","value":"\n"}],"position":{"start":{"line":38,"column":1,"offset":1412},"end":{"line":46,"column":1,"offset":1707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":47,"column":5,"offset":1713},"end":{"line":47,"column":13,"offset":1721}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj[key] !== undefined"}],"position":{"start":{"line":47,"column":13,"offset":1721},"end":{"line":47,"column":37,"offset":1745}}},{"type":"text","value":" pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":47,"column":37,"offset":1745},"end":{"line":47,"column":114,"offset":1822}}}],"position":{"start":{"line":47,"column":5,"offset":1713},"end":{"line":47,"column":114,"offset":1822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"can also use ","position":{"start":{"line":48,"column":9,"offset":1832},"end":{"line":48,"column":22,"offset":1845}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(key in object)"}],"position":{"start":{"line":48,"column":22,"offset":1845},"end":{"line":48,"column":39,"offset":1862}}},{"type":"text","value":" syntax interchangeably ","position":{"start":{"line":48,"column":39,"offset":1862},"end":{"line":48,"column":63,"offset":1886}}},{"type":"text","value":"(","position":{"start":{"line":48,"column":63,"offset":1886},"end":{"line":48,"column":65,"offset":1888}}},{"type":"text","value":"returns a boolean","position":{"start":{"line":48,"column":65,"offset":1888},"end":{"line":48,"column":82,"offset":1905}}},{"type":"text","value":")","position":{"start":{"line":48,"column":82,"offset":1905},"end":{"line":48,"column":84,"offset":1907}}}],"position":{"start":{"line":48,"column":5,"offset":1828},"end":{"line":48,"column":84,"offset":1907}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":5,"offset":1828},"end":{"line":48,"column":84,"offset":1907}}},{"type":"text","value":"\n"}],"position":{"start":{"line":47,"column":1,"offset":1709},"end":{"line":48,"column":84,"offset":1907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Utilize Object.keys and Object.values in a function","position":{"start":{"line":49,"column":5,"offset":1913},"end":{"line":49,"column":56,"offset":1964}}}],"position":{"start":{"line":49,"column":5,"offset":1913},"end":{"line":49,"column":56,"offset":1964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.keys(obj)"}],"position":{"start":{"line":50,"column":9,"offset":1974},"end":{"line":50,"column":27,"offset":1992}}},{"type":"text","value":" returns an array of all the keys in ","position":{"start":{"line":50,"column":27,"offset":1992},"end":{"line":50,"column":64,"offset":2029}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj"}],"position":{"start":{"line":50,"column":64,"offset":2029},"end":{"line":50,"column":69,"offset":2034}}}],"position":{"start":{"line":50,"column":5,"offset":1970},"end":{"line":50,"column":69,"offset":2034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.values(obj)"}],"position":{"start":{"line":51,"column":9,"offset":2044},"end":{"line":51,"column":29,"offset":2064}}},{"type":"text","value":" returns an array of the values in ","position":{"start":{"line":51,"column":29,"offset":2064},"end":{"line":51,"column":64,"offset":2099}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj"}],"position":{"start":{"line":51,"column":64,"offset":2099},"end":{"line":51,"column":69,"offset":2104}}}],"position":{"start":{"line":51,"column":5,"offset":2040},"end":{"line":51,"column":69,"offset":2104}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":5,"offset":1970},"end":{"line":51,"column":69,"offset":2104}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":1909},"end":{"line":51,"column":69,"offset":2104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Iterate through an object using a ","position":{"start":{"line":52,"column":5,"offset":2110},"end":{"line":52,"column":39,"offset":2144}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for in"}],"position":{"start":{"line":52,"column":39,"offset":2144},"end":{"line":52,"column":47,"offset":2152}}},{"type":"text","value":" loop","position":{"start":{"line":52,"column":47,"offset":2152},"end":{"line":52,"column":52,"offset":2157}}}],"position":{"start":{"line":52,"column":5,"offset":2110},"end":{"line":52,"column":52,"offset":2157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};\n"}],"position":{"start":{"line":54,"column":5,"offset":2165},"end":{"line":61,"column":8,"offset":2346}}}],"position":{"start":{"line":54,"column":5,"offset":2165},"end":{"line":61,"column":8,"offset":2346}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":2106},"end":{"line":62,"column":1,"offset":2348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a function that utilizes ","position":{"start":{"line":63,"column":5,"offset":2354},"end":{"line":63,"column":37,"offset":2386}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...rest"}],"position":{"start":{"line":63,"column":37,"offset":2386},"end":{"line":63,"column":46,"offset":2395}}},{"type":"text","value":" syntax to accept an arbitrary number of arguments","position":{"start":{"line":63,"column":46,"offset":2395},"end":{"line":63,"column":96,"offset":2445}}}],"position":{"start":{"line":63,"column":5,"offset":2354},"end":{"line":63,"column":96,"offset":2445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...rest"}],"position":{"start":{"line":65,"column":9,"offset":2457},"end":{"line":65,"column":18,"offset":2466}}},{"type":"text","value":" syntax will store all additional arguments in an array","position":{"start":{"line":65,"column":18,"offset":2466},"end":{"line":65,"column":73,"offset":2521}}}],"position":{"start":{"line":65,"column":5,"offset":2453},"end":{"line":65,"column":73,"offset":2521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"array will be empty if there are no additional arguments","position":{"start":{"line":66,"column":9,"offset":2531},"end":{"line":66,"column":65,"offset":2587}}}],"position":{"start":{"line":66,"column":9,"offset":2531},"end":{"line":66,"column":65,"offset":2587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};\n"}],"position":{"start":{"line":68,"column":9,"offset":2599},"end":{"line":76,"column":12,"offset":2898}}}],"position":{"start":{"line":68,"column":9,"offset":2599},"end":{"line":76,"column":12,"offset":2898}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":5,"offset":2527},"end":{"line":76,"column":12,"offset":2898}}},{"type":"text","value":"\n"}],"position":{"start":{"line":65,"column":5,"offset":2453},"end":{"line":76,"column":12,"offset":2898}}},{"type":"text","value":"\n"}],"position":{"start":{"line":63,"column":1,"offset":2350},"end":{"line":76,"column":12,"offset":2898}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":773},"end":{"line":76,"column":12,"offset":2898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":78,"column":1,"offset":2902},"end":{"line":78,"column":4,"offset":2905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":80,"column":5,"offset":2913},"end":{"line":80,"column":9,"offset":2917}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...spread"}],"position":{"start":{"line":80,"column":9,"offset":2917},"end":{"line":80,"column":20,"offset":2928}}},{"type":"text","value":" syntax for Object literals and Array literals","position":{"start":{"line":80,"column":20,"offset":2928},"end":{"line":80,"column":66,"offset":2974}}}],"position":{"start":{"line":80,"column":5,"offset":2913},"end":{"line":80,"column":66,"offset":2974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]\n"}],"position":{"start":{"line":82,"column":5,"offset":2982},"end":{"line":87,"column":8,"offset":3243}}}],"position":{"start":{"line":82,"column":5,"offset":2982},"end":{"line":87,"column":8,"offset":3243}}},{"type":"text","value":"\n"}],"position":{"start":{"line":80,"column":1,"offset":2909},"end":{"line":88,"column":1,"offset":3245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Destructure an array to reference specific elements","position":{"start":{"line":89,"column":5,"offset":3251},"end":{"line":89,"column":56,"offset":3302}}}],"position":{"start":{"line":89,"column":5,"offset":3251},"end":{"line":89,"column":56,"offset":3302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":91,"column":5,"offset":3310},"end":{"line":91,"column":7,"offset":3312}}},{"type":"text","value":"`","position":{"start":{"line":91,"column":7,"offset":3312},"end":{"line":91,"column":9,"offset":3314}}},{"type":"text","value":"`","position":{"start":{"line":91,"column":9,"offset":3314},"end":{"line":91,"column":11,"offset":3316}}},{"type":"text","value":"javascript","position":{"start":{"line":91,"column":11,"offset":3316},"end":{"line":91,"column":21,"offset":3326}}}],"position":{"start":{"line":91,"column":5,"offset":3310},"end":{"line":91,"column":21,"offset":3326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let array = ","position":{"start":{"line":93,"column":5,"offset":3334},"end":{"line":93,"column":17,"offset":3346}}},{"type":"text","value":"[","position":{"start":{"line":93,"column":17,"offset":3346},"end":{"line":93,"column":19,"offset":3348}}},{"type":"text","value":"35,9","position":{"start":{"line":93,"column":19,"offset":3348},"end":{"line":93,"column":23,"offset":3352}}},{"type":"text","value":"]","position":{"start":{"line":93,"column":23,"offset":3352},"end":{"line":93,"column":25,"offset":3354}}},{"type":"text","value":";","position":{"start":{"line":93,"column":25,"offset":3354},"end":{"line":93,"column":26,"offset":3355}}}],"position":{"start":{"line":93,"column":5,"offset":3334},"end":{"line":93,"column":26,"offset":3355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let ","position":{"start":{"line":95,"column":5,"offset":3363},"end":{"line":95,"column":9,"offset":3367}}},{"type":"text","value":"[","position":{"start":{"line":95,"column":9,"offset":3367},"end":{"line":95,"column":11,"offset":3369}}},{"type":"text","value":"firstEl, secondEl","position":{"start":{"line":95,"column":11,"offset":3369},"end":{"line":95,"column":28,"offset":3386}}},{"type":"text","value":"]","position":{"start":{"line":95,"column":28,"offset":3386},"end":{"line":95,"column":30,"offset":3388}}},{"type":"text","value":" = array;","position":{"start":{"line":95,"column":30,"offset":3388},"end":{"line":95,"column":39,"offset":3397}}}],"position":{"start":{"line":95,"column":5,"offset":3363},"end":{"line":95,"column":39,"offset":3397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":97,"column":5,"offset":3405},"end":{"line":97,"column":16,"offset":3416}}},{"type":"text","value":"(","position":{"start":{"line":97,"column":16,"offset":3416},"end":{"line":97,"column":18,"offset":3418}}},{"type":"text","value":"firstEl","position":{"start":{"line":97,"column":18,"offset":3418},"end":{"line":97,"column":25,"offset":3425}}},{"type":"text","value":")","position":{"start":{"line":97,"column":25,"offset":3425},"end":{"line":97,"column":27,"offset":3427}}},{"type":"text","value":"; // =","position":{"start":{"line":97,"column":27,"offset":3427},"end":{"line":97,"column":33,"offset":3433}}},{"type":"text","value":">","position":{"start":{"line":97,"column":33,"offset":3433},"end":{"line":97,"column":37,"offset":3437}}},{"type":"text","value":" 35","position":{"start":{"line":97,"column":37,"offset":3437},"end":{"line":97,"column":40,"offset":3440}}}],"position":{"start":{"line":97,"column":5,"offset":3405},"end":{"line":97,"column":40,"offset":3440}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":99,"column":5,"offset":3448},"end":{"line":99,"column":16,"offset":3459}}},{"type":"text","value":"(","position":{"start":{"line":99,"column":16,"offset":3459},"end":{"line":99,"column":18,"offset":3461}}},{"type":"text","value":"secondEl","position":{"start":{"line":99,"column":18,"offset":3461},"end":{"line":99,"column":26,"offset":3469}}},{"type":"text","value":")","position":{"start":{"line":99,"column":26,"offset":3469},"end":{"line":99,"column":28,"offset":3471}}},{"type":"text","value":"; // =","position":{"start":{"line":99,"column":28,"offset":3471},"end":{"line":99,"column":34,"offset":3477}}},{"type":"text","value":">","position":{"start":{"line":99,"column":34,"offset":3477},"end":{"line":99,"column":38,"offset":3481}}},{"type":"text","value":" 9","position":{"start":{"line":99,"column":38,"offset":3481},"end":{"line":99,"column":40,"offset":3483}}}],"position":{"start":{"line":99,"column":5,"offset":3448},"end":{"line":99,"column":40,"offset":3483}}},{"type":"text","value":"\n"}],"position":{"start":{"line":89,"column":1,"offset":3247},"end":{"line":99,"column":40,"offset":3483}}},{"type":"text","value":"\n"}],"position":{"start":{"line":80,"column":1,"offset":2909},"end":{"line":99,"column":40,"offset":3483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// can also destructure using ... syntax let array = ","position":{"start":{"line":101,"column":1,"offset":3487},"end":{"line":101,"column":54,"offset":3540}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":54,"offset":3540},"end":{"line":101,"column":56,"offset":3542}}},{"type":"text","value":"35,9,14","position":{"start":{"line":101,"column":56,"offset":3542},"end":{"line":101,"column":63,"offset":3549}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":63,"offset":3549},"end":{"line":101,"column":65,"offset":3551}}},{"type":"text","value":"; let ","position":{"start":{"line":101,"column":65,"offset":3551},"end":{"line":101,"column":71,"offset":3557}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":71,"offset":3557},"end":{"line":101,"column":73,"offset":3559}}},{"type":"text","value":"head, ...tail","position":{"start":{"line":101,"column":73,"offset":3559},"end":{"line":101,"column":86,"offset":3572}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":86,"offset":3572},"end":{"line":101,"column":88,"offset":3574}}},{"type":"text","value":" = array; console.log","position":{"start":{"line":101,"column":88,"offset":3574},"end":{"line":101,"column":109,"offset":3595}}},{"type":"text","value":"(","position":{"start":{"line":101,"column":109,"offset":3595},"end":{"line":101,"column":111,"offset":3597}}},{"type":"text","value":"head","position":{"start":{"line":101,"column":111,"offset":3597},"end":{"line":101,"column":115,"offset":3601}}},{"type":"text","value":")","position":{"start":{"line":101,"column":115,"offset":3601},"end":{"line":101,"column":117,"offset":3603}}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":117,"offset":3603},"end":{"line":101,"column":123,"offset":3609}}},{"type":"text","value":">","position":{"start":{"line":101,"column":123,"offset":3609},"end":{"line":101,"column":127,"offset":3613}}},{"type":"text","value":" 35 console.log","position":{"start":{"line":101,"column":127,"offset":3613},"end":{"line":101,"column":142,"offset":3628}}},{"type":"text","value":"(","position":{"start":{"line":101,"column":142,"offset":3628},"end":{"line":101,"column":144,"offset":3630}}},{"type":"text","value":"tail","position":{"start":{"line":101,"column":144,"offset":3630},"end":{"line":101,"column":148,"offset":3634}}},{"type":"text","value":")","position":{"start":{"line":101,"column":148,"offset":3634},"end":{"line":101,"column":150,"offset":3636}}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":150,"offset":3636},"end":{"line":101,"column":156,"offset":3642}}},{"type":"text","value":">","position":{"start":{"line":101,"column":156,"offset":3642},"end":{"line":101,"column":160,"offset":3646}}},{"type":"text","value":" ","position":{"start":{"line":101,"column":160,"offset":3646},"end":{"line":101,"column":161,"offset":3647}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":161,"offset":3647},"end":{"line":101,"column":163,"offset":3649}}},{"type":"text","value":"9, 14","position":{"start":{"line":101,"column":163,"offset":3649},"end":{"line":101,"column":168,"offset":3654}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":168,"offset":3654},"end":{"line":101,"column":170,"offset":3656}}}],"position":{"start":{"line":101,"column":1,"offset":3487},"end":{"line":101,"column":170,"offset":3656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```javascript\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash\n"}],"position":{"start":{"line":103,"column":1,"offset":3660},"end":{"line":137,"column":5,"offset":4741}}}],"position":{"start":{"line":103,"column":1,"offset":3660},"end":{"line":137,"column":5,"offset":4741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function that accepts a array as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":139,"column":5,"offset":4749},"end":{"line":139,"column":133,"offset":4877}}}],"position":{"start":{"line":139,"column":5,"offset":4749},"end":{"line":139,"column":133,"offset":4877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}\n"}],"position":{"start":{"line":141,"column":5,"offset":4885},"end":{"line":152,"column":8,"offset":5223}}}],"position":{"start":{"line":141,"column":5,"offset":4885},"end":{"line":152,"column":8,"offset":5223}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":4745},"end":{"line":152,"column":8,"offset":5223}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":4745},"end":{"line":152,"column":8,"offset":5223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Callbacks Lesson Concepts","position":{"start":{"line":154,"column":5,"offset":5231},"end":{"line":154,"column":30,"offset":5256}}}],"position":{"start":{"line":154,"column":1,"offset":5227},"end":{"line":154,"column":30,"offset":5256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.","position":{"start":{"line":156,"column":5,"offset":5264},"end":{"line":156,"column":109,"offset":5368}}}],"position":{"start":{"line":156,"column":5,"offset":5264},"end":{"line":156,"column":109,"offset":5368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"they can be stored in variables, passed as arguments to other functions, and serve as return value for a function","position":{"start":{"line":157,"column":9,"offset":5378},"end":{"line":157,"column":122,"offset":5491}}}],"position":{"start":{"line":157,"column":5,"offset":5374},"end":{"line":157,"column":122,"offset":5491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"supports same basic operations as other types ","position":{"start":{"line":158,"column":9,"offset":5501},"end":{"line":158,"column":55,"offset":5547}}},{"type":"text","value":"(","position":{"start":{"line":158,"column":55,"offset":5547},"end":{"line":158,"column":57,"offset":5549}}},{"type":"text","value":"strings, bools, numbers","position":{"start":{"line":158,"column":57,"offset":5549},"end":{"line":158,"column":80,"offset":5572}}},{"type":"text","value":")","position":{"start":{"line":158,"column":80,"offset":5572},"end":{"line":158,"column":82,"offset":5574}}}],"position":{"start":{"line":158,"column":5,"offset":5497},"end":{"line":158,"column":82,"offset":5574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"higher-order functions take functions as arguments or return functions as values","position":{"start":{"line":159,"column":9,"offset":5584},"end":{"line":159,"column":89,"offset":5664}}}],"position":{"start":{"line":159,"column":5,"offset":5580},"end":{"line":159,"column":89,"offset":5664}}},{"type":"text","value":"\n"}],"position":{"start":{"line":157,"column":5,"offset":5374},"end":{"line":159,"column":89,"offset":5664}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":5260},"end":{"line":159,"column":89,"offset":5664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a code snippet containing an anonymous callback, a named callback, and multiple ","position":{"start":{"line":160,"column":5,"offset":5670},"end":{"line":160,"column":91,"offset":5756}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log"}],"position":{"start":{"line":160,"column":91,"offset":5756},"end":{"line":160,"column":104,"offset":5769}}},{"type":"text","value":"s, predict what will be printed","position":{"start":{"line":160,"column":104,"offset":5769},"end":{"line":160,"column":135,"offset":5800}}}],"position":{"start":{"line":160,"column":5,"offset":5670},"end":{"line":160,"column":135,"offset":5800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"what is this referring to?","position":{"start":{"line":161,"column":9,"offset":5810},"end":{"line":161,"column":35,"offset":5836}}}],"position":{"start":{"line":161,"column":5,"offset":5806},"end":{"line":161,"column":35,"offset":5836}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":5,"offset":5806},"end":{"line":161,"column":35,"offset":5836}}},{"type":"text","value":"\n"}],"position":{"start":{"line":160,"column":1,"offset":5666},"end":{"line":161,"column":35,"offset":5836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.","position":{"start":{"line":162,"column":5,"offset":5842},"end":{"line":162,"column":133,"offset":5970}}}],"position":{"start":{"line":162,"column":1,"offset":5838},"end":{"line":162,"column":133,"offset":5970}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":5260},"end":{"line":162,"column":133,"offset":5970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n"}],"position":{"start":{"line":164,"column":1,"offset":5974},"end":{"line":178,"column":4,"offset":6336}}}],"position":{"start":{"line":164,"column":1,"offset":5974},"end":{"line":178,"column":4,"offset":6336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// shorter version let greaterCB = function","position":{"start":{"line":180,"column":1,"offset":6340},"end":{"line":180,"column":44,"offset":6383}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":44,"offset":6383},"end":{"line":180,"column":46,"offset":6385}}},{"type":"text","value":"val, callback1, callback2","position":{"start":{"line":180,"column":46,"offset":6385},"end":{"line":180,"column":71,"offset":6410}}},{"type":"text","value":")","position":{"start":{"line":180,"column":71,"offset":6410},"end":{"line":180,"column":73,"offset":6412}}},{"type":"text","value":" { return Math.max","position":{"start":{"line":180,"column":73,"offset":6412},"end":{"line":180,"column":91,"offset":6430}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":91,"offset":6430},"end":{"line":180,"column":93,"offset":6432}}},{"type":"text","value":"callback1","position":{"start":{"line":180,"column":93,"offset":6432},"end":{"line":180,"column":102,"offset":6441}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":102,"offset":6441},"end":{"line":180,"column":104,"offset":6443}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":104,"offset":6443},"end":{"line":180,"column":107,"offset":6446}}},{"type":"text","value":")","position":{"start":{"line":180,"column":107,"offset":6446},"end":{"line":180,"column":109,"offset":6448}}},{"type":"text","value":", callback2","position":{"start":{"line":180,"column":109,"offset":6448},"end":{"line":180,"column":120,"offset":6459}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":120,"offset":6459},"end":{"line":180,"column":122,"offset":6461}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":122,"offset":6461},"end":{"line":180,"column":125,"offset":6464}}},{"type":"text","value":")","position":{"start":{"line":180,"column":125,"offset":6464},"end":{"line":180,"column":127,"offset":6466}}},{"type":"text","value":")","position":{"start":{"line":180,"column":127,"offset":6466},"end":{"line":180,"column":129,"offset":6468}}},{"type":"text","value":"; } // even shorter, cause why not let greaterCB = ","position":{"start":{"line":180,"column":129,"offset":6468},"end":{"line":180,"column":180,"offset":6519}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":180,"offset":6519},"end":{"line":180,"column":182,"offset":6521}}},{"type":"text","value":"val, cb1, cb2","position":{"start":{"line":180,"column":182,"offset":6521},"end":{"line":180,"column":195,"offset":6534}}},{"type":"text","value":")","position":{"start":{"line":180,"column":195,"offset":6534},"end":{"line":180,"column":197,"offset":6536}}},{"type":"text","value":" =","position":{"start":{"line":180,"column":197,"offset":6536},"end":{"line":180,"column":199,"offset":6538}}},{"type":"text","value":">","position":{"start":{"line":180,"column":199,"offset":6538},"end":{"line":180,"column":203,"offset":6542}}},{"type":"text","value":" Math.max","position":{"start":{"line":180,"column":203,"offset":6542},"end":{"line":180,"column":212,"offset":6551}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":212,"offset":6551},"end":{"line":180,"column":214,"offset":6553}}},{"type":"text","value":"cb1","position":{"start":{"line":180,"column":214,"offset":6553},"end":{"line":180,"column":217,"offset":6556}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":217,"offset":6556},"end":{"line":180,"column":219,"offset":6558}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":219,"offset":6558},"end":{"line":180,"column":222,"offset":6561}}},{"type":"text","value":")","position":{"start":{"line":180,"column":222,"offset":6561},"end":{"line":180,"column":224,"offset":6563}}},{"type":"text","value":", cb2","position":{"start":{"line":180,"column":224,"offset":6563},"end":{"line":180,"column":229,"offset":6568}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":229,"offset":6568},"end":{"line":180,"column":231,"offset":6570}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":231,"offset":6570},"end":{"line":180,"column":234,"offset":6573}}},{"type":"text","value":")","position":{"start":{"line":180,"column":234,"offset":6573},"end":{"line":180,"column":236,"offset":6575}}},{"type":"text","value":")","position":{"start":{"line":180,"column":236,"offset":6575},"end":{"line":180,"column":238,"offset":6577}}},{"type":"text","value":";","position":{"start":{"line":180,"column":238,"offset":6577},"end":{"line":180,"column":239,"offset":6578}}}],"position":{"start":{"line":180,"column":1,"offset":6340},"end":{"line":180,"column":239,"offset":6578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```javascript\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i < array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];\n"}],"position":{"start":{"line":182,"column":1,"offset":6582},"end":{"line":203,"column":5,"offset":7272}}}],"position":{"start":{"line":182,"column":1,"offset":6582},"end":{"line":203,"column":5,"offset":7272}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":205,"column":5,"offset":7280},"end":{"line":205,"column":127,"offset":7402}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#filter"}],"position":{"start":{"line":205,"column":127,"offset":7402},"end":{"line":205,"column":141,"offset":7416}}},{"type":"text","value":".","position":{"start":{"line":205,"column":141,"offset":7416},"end":{"line":205,"column":142,"offset":7417}}}],"position":{"start":{"line":205,"column":5,"offset":7280},"end":{"line":205,"column":142,"offset":7417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i < array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};\n"}],"position":{"start":{"line":207,"column":5,"offset":7425},"end":{"line":216,"column":8,"offset":7699}}}],"position":{"start":{"line":207,"column":5,"offset":7425},"end":{"line":216,"column":8,"offset":7699}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":7276},"end":{"line":217,"column":1,"offset":7701}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":218,"column":5,"offset":7707},"end":{"line":218,"column":126,"offset":7828}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#every"}],"position":{"start":{"line":218,"column":126,"offset":7828},"end":{"line":218,"column":139,"offset":7841}}},{"type":"text","value":".","position":{"start":{"line":218,"column":139,"offset":7841},"end":{"line":218,"column":140,"offset":7842}}}],"position":{"start":{"line":218,"column":5,"offset":7707},"end":{"line":218,"column":140,"offset":7842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let myEvery = function (array, callback) {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n"}],"position":{"start":{"line":220,"column":5,"offset":7850},"end":{"line":238,"column":8,"offset":8361}}}],"position":{"start":{"line":220,"column":5,"offset":7850},"end":{"line":238,"column":8,"offset":8361}}},{"type":"text","value":"\n"}],"position":{"start":{"line":218,"column":1,"offset":7703},"end":{"line":238,"column":8,"offset":8361}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":7276},"end":{"line":238,"column":8,"offset":8361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Scope Lesson Concepts","position":{"start":{"line":240,"column":5,"offset":8369},"end":{"line":240,"column":26,"offset":8390}}}],"position":{"start":{"line":240,"column":1,"offset":8365},"end":{"line":240,"column":26,"offset":8390}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identify the difference between ","position":{"start":{"line":242,"column":5,"offset":8398},"end":{"line":242,"column":37,"offset":8430}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":242,"column":37,"offset":8430},"end":{"line":242,"column":44,"offset":8437}}},{"type":"text","value":", ","position":{"start":{"line":242,"column":44,"offset":8437},"end":{"line":242,"column":46,"offset":8439}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":242,"column":46,"offset":8439},"end":{"line":242,"column":51,"offset":8444}}},{"type":"text","value":", and ","position":{"start":{"line":242,"column":51,"offset":8444},"end":{"line":242,"column":57,"offset":8450}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":242,"column":57,"offset":8450},"end":{"line":242,"column":62,"offset":8455}}},{"type":"text","value":" declarations","position":{"start":{"line":242,"column":62,"offset":8455},"end":{"line":242,"column":75,"offset":8468}}}],"position":{"start":{"line":242,"column":5,"offset":8398},"end":{"line":242,"column":75,"offset":8468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":243,"column":9,"offset":8478},"end":{"line":243,"column":16,"offset":8485}}},{"type":"text","value":" - cannot reassign variable, scoped to block","position":{"start":{"line":243,"column":16,"offset":8485},"end":{"line":243,"column":60,"offset":8529}}}],"position":{"start":{"line":243,"column":5,"offset":8474},"end":{"line":243,"column":60,"offset":8529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":244,"column":9,"offset":8539},"end":{"line":244,"column":14,"offset":8544}}},{"type":"text","value":" - can reassign variable, scoped to block","position":{"start":{"line":244,"column":14,"offset":8544},"end":{"line":244,"column":55,"offset":8585}}}],"position":{"start":{"line":244,"column":5,"offset":8535},"end":{"line":244,"column":55,"offset":8585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":245,"column":9,"offset":8595},"end":{"line":245,"column":14,"offset":8600}}},{"type":"text","value":" - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!","position":{"start":{"line":245,"column":14,"offset":8600},"end":{"line":245,"column":125,"offset":8711}}}],"position":{"start":{"line":245,"column":5,"offset":8591},"end":{"line":245,"column":125,"offset":8711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"a variable will always evaluate to the value it contains regardless of how it was declared","position":{"start":{"line":246,"column":9,"offset":8721},"end":{"line":246,"column":99,"offset":8811}}}],"position":{"start":{"line":246,"column":5,"offset":8717},"end":{"line":246,"column":99,"offset":8811}}},{"type":"text","value":"\n"}],"position":{"start":{"line":243,"column":5,"offset":8474},"end":{"line":246,"column":99,"offset":8811}}},{"type":"text","value":"\n"}],"position":{"start":{"line":242,"column":1,"offset":8394},"end":{"line":246,"column":99,"offset":8811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Explain the difference between ","position":{"start":{"line":247,"column":5,"offset":8817},"end":{"line":247,"column":36,"offset":8848}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":247,"column":36,"offset":8848},"end":{"line":247,"column":43,"offset":8855}}},{"type":"text","value":", ","position":{"start":{"line":247,"column":43,"offset":8855},"end":{"line":247,"column":45,"offset":8857}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":247,"column":45,"offset":8857},"end":{"line":247,"column":50,"offset":8862}}},{"type":"text","value":", and ","position":{"start":{"line":247,"column":50,"offset":8862},"end":{"line":247,"column":56,"offset":8868}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":247,"column":56,"offset":8868},"end":{"line":247,"column":61,"offset":8873}}},{"type":"text","value":" declarations","position":{"start":{"line":247,"column":61,"offset":8873},"end":{"line":247,"column":74,"offset":8886}}}],"position":{"start":{"line":247,"column":5,"offset":8817},"end":{"line":247,"column":74,"offset":8886}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":248,"column":9,"offset":8896},"end":{"line":248,"column":14,"offset":8901}}},{"type":"text","value":" is function scoped—so if you declare it anywhere in a function, the declaration ","position":{"start":{"line":248,"column":14,"offset":8901},"end":{"line":248,"column":95,"offset":8982}}},{"type":"text","value":"(","position":{"start":{"line":248,"column":95,"offset":8982},"end":{"line":248,"column":97,"offset":8984}}},{"type":"text","value":"but not assignment","position":{"start":{"line":248,"column":97,"offset":8984},"end":{"line":248,"column":115,"offset":9002}}},{"type":"text","value":")","position":{"start":{"line":248,"column":115,"offset":9002},"end":{"line":248,"column":117,"offset":9004}}},{"type":"text","value":" is \"hoisted\"","position":{"start":{"line":248,"column":117,"offset":9004},"end":{"line":248,"column":130,"offset":9017}}}],"position":{"start":{"line":248,"column":9,"offset":8896},"end":{"line":248,"column":130,"offset":9017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"so it will exist in memory as \"undefined\" which is bad and unpredictable","position":{"start":{"line":249,"column":13,"offset":9031},"end":{"line":249,"column":85,"offset":9103}}}],"position":{"start":{"line":249,"column":9,"offset":9027},"end":{"line":249,"column":85,"offset":9103}}},{"type":"text","value":"\n"}],"position":{"start":{"line":249,"column":9,"offset":9027},"end":{"line":249,"column":85,"offset":9103}}},{"type":"text","value":"\n"}],"position":{"start":{"line":248,"column":5,"offset":8892},"end":{"line":249,"column":85,"offset":9103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":250,"column":9,"offset":9113},"end":{"line":250,"column":14,"offset":9118}}},{"type":"text","value":" will also allow you to redeclare a variable, while ","position":{"start":{"line":250,"column":14,"offset":9118},"end":{"line":250,"column":66,"offset":9170}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":250,"column":66,"offset":9170},"end":{"line":250,"column":71,"offset":9175}}},{"type":"text","value":" or ","position":{"start":{"line":250,"column":71,"offset":9175},"end":{"line":250,"column":75,"offset":9179}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":250,"column":75,"offset":9179},"end":{"line":250,"column":82,"offset":9186}}},{"type":"text","value":" will raise a syntax error. you shouldn't be able to do that!","position":{"start":{"line":250,"column":82,"offset":9186},"end":{"line":250,"column":143,"offset":9247}}}],"position":{"start":{"line":250,"column":5,"offset":9109},"end":{"line":250,"column":143,"offset":9247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":251,"column":9,"offset":9257},"end":{"line":251,"column":16,"offset":9264}}},{"type":"text","value":" won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object","position":{"start":{"line":251,"column":16,"offset":9264},"end":{"line":251,"column":155,"offset":9403}}}],"position":{"start":{"line":251,"column":5,"offset":9253},"end":{"line":251,"column":155,"offset":9403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"block-scoped variables allow new variables with the same name in new scopes","position":{"start":{"line":252,"column":9,"offset":9413},"end":{"line":252,"column":84,"offset":9488}}}],"position":{"start":{"line":252,"column":5,"offset":9409},"end":{"line":252,"column":84,"offset":9488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of ","position":{"start":{"line":253,"column":9,"offset":9498},"end":{"line":253,"column":123,"offset":9612}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":253,"column":123,"offset":9612},"end":{"line":253,"column":134,"offset":9623}}},{"type":"text","value":" like ","position":{"start":{"line":253,"column":134,"offset":9623},"end":{"line":253,"column":140,"offset":9629}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":253,"column":140,"offset":9629},"end":{"line":253,"column":145,"offset":9634}}},{"type":"text","value":" does, so it throws a specific reference error if you try to access the value before it has been declared","position":{"start":{"line":253,"column":145,"offset":9634},"end":{"line":253,"column":250,"offset":9739}}}],"position":{"start":{"line":253,"column":5,"offset":9494},"end":{"line":253,"column":250,"offset":9739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you do not use ","position":{"start":{"line":254,"column":9,"offset":9749},"end":{"line":254,"column":27,"offset":9767}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":254,"column":27,"offset":9767},"end":{"line":254,"column":32,"offset":9772}}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":32,"offset":9772},"end":{"line":254,"column":36,"offset":9776}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":254,"column":36,"offset":9776},"end":{"line":254,"column":41,"offset":9781}}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":41,"offset":9781},"end":{"line":254,"column":45,"offset":9785}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":254,"column":45,"offset":9785},"end":{"line":254,"column":52,"offset":9792}}},{"type":"text","value":" when initializing, it will be declared as global—THIS IS BAD","position":{"start":{"line":254,"column":52,"offset":9792},"end":{"line":254,"column":113,"offset":9853}}}],"position":{"start":{"line":254,"column":9,"offset":9749},"end":{"line":254,"column":113,"offset":9853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if you assign a value without a declaration, it exists in the global scope ","position":{"start":{"line":255,"column":13,"offset":9867},"end":{"line":255,"column":88,"offset":9942}}},{"type":"text","value":"(","position":{"start":{"line":255,"column":88,"offset":9942},"end":{"line":255,"column":90,"offset":9944}}},{"type":"text","value":"so then it would be accessible by all outer scopes, so bad","position":{"start":{"line":255,"column":90,"offset":9944},"end":{"line":255,"column":148,"offset":10002}}},{"type":"text","value":")","position":{"start":{"line":255,"column":148,"offset":10002},"end":{"line":255,"column":150,"offset":10004}}},{"type":"text","value":". however, there's no hoisting, so it doesn't exist in the scope until after the line is run","position":{"start":{"line":255,"column":150,"offset":10004},"end":{"line":255,"column":242,"offset":10096}}}],"position":{"start":{"line":255,"column":9,"offset":9863},"end":{"line":255,"column":242,"offset":10096}}},{"type":"text","value":"\n"}],"position":{"start":{"line":255,"column":9,"offset":9863},"end":{"line":255,"column":242,"offset":10096}}},{"type":"text","value":"\n"}],"position":{"start":{"line":254,"column":5,"offset":9745},"end":{"line":255,"column":242,"offset":10096}}},{"type":"text","value":"\n"}],"position":{"start":{"line":248,"column":5,"offset":8892},"end":{"line":255,"column":242,"offset":10096}}},{"type":"text","value":"\n"}],"position":{"start":{"line":247,"column":1,"offset":8813},"end":{"line":255,"column":242,"offset":10096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":256,"column":5,"offset":10102},"end":{"line":256,"column":112,"offset":10209}}}],"position":{"start":{"line":256,"column":5,"offset":10102},"end":{"line":256,"column":112,"offset":10209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope of a program means the set of variables that are available for use within the program","position":{"start":{"line":257,"column":9,"offset":10219},"end":{"line":257,"column":100,"offset":10310}}}],"position":{"start":{"line":257,"column":5,"offset":10215},"end":{"line":257,"column":100,"offset":10310}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"global scope is represented by the ","position":{"start":{"line":258,"column":9,"offset":10320},"end":{"line":258,"column":44,"offset":10355}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"window"}],"position":{"start":{"line":258,"column":44,"offset":10355},"end":{"line":258,"column":52,"offset":10363}}},{"type":"text","value":" object in the browser and the ","position":{"start":{"line":258,"column":52,"offset":10363},"end":{"line":258,"column":83,"offset":10394}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global"}],"position":{"start":{"line":258,"column":83,"offset":10394},"end":{"line":258,"column":91,"offset":10402}}},{"type":"text","value":" object in Node.js","position":{"start":{"line":258,"column":91,"offset":10402},"end":{"line":258,"column":109,"offset":10420}}}],"position":{"start":{"line":258,"column":9,"offset":10320},"end":{"line":258,"column":109,"offset":10420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"global variables are available everywhere, and so increase the risk of name collisions","position":{"start":{"line":259,"column":13,"offset":10434},"end":{"line":259,"column":99,"offset":10520}}}],"position":{"start":{"line":259,"column":9,"offset":10430},"end":{"line":259,"column":99,"offset":10520}}},{"type":"text","value":"\n"}],"position":{"start":{"line":259,"column":9,"offset":10430},"end":{"line":259,"column":99,"offset":10520}}},{"type":"text","value":"\n"}],"position":{"start":{"line":258,"column":5,"offset":10316},"end":{"line":259,"column":99,"offset":10520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"local scope is the set of variables available for use within the function","position":{"start":{"line":260,"column":9,"offset":10530},"end":{"line":260,"column":82,"offset":10603}}}],"position":{"start":{"line":260,"column":9,"offset":10530},"end":{"line":260,"column":82,"offset":10603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"when we enter a function, we enter a new scope","position":{"start":{"line":261,"column":13,"offset":10617},"end":{"line":261,"column":59,"offset":10663}}}],"position":{"start":{"line":261,"column":9,"offset":10613},"end":{"line":261,"column":59,"offset":10663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined ","position":{"start":{"line":262,"column":13,"offset":10677},"end":{"line":262,"column":159,"offset":10823}}},{"type":"text","value":"(","position":{"start":{"line":262,"column":159,"offset":10823},"end":{"line":262,"column":161,"offset":10825}}},{"type":"text","value":"hmm about that last one","position":{"start":{"line":262,"column":161,"offset":10825},"end":{"line":262,"column":184,"offset":10848}}},{"type":"text","value":")","position":{"start":{"line":262,"column":184,"offset":10848},"end":{"line":262,"column":186,"offset":10850}}}],"position":{"start":{"line":262,"column":9,"offset":10673},"end":{"line":262,"column":186,"offset":10850}}},{"type":"text","value":"\n"}],"position":{"start":{"line":261,"column":9,"offset":10613},"end":{"line":262,"column":186,"offset":10850}}},{"type":"text","value":"\n"}],"position":{"start":{"line":260,"column":5,"offset":10526},"end":{"line":262,"column":186,"offset":10850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"for blocks ","position":{"start":{"line":263,"column":9,"offset":10860},"end":{"line":263,"column":20,"offset":10871}}},{"type":"text","value":"(","position":{"start":{"line":263,"column":20,"offset":10871},"end":{"line":263,"column":22,"offset":10873}}},{"type":"text","value":"denoted by curly braces ","position":{"start":{"line":263,"column":22,"offset":10873},"end":{"line":263,"column":46,"offset":10897}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{}"}],"position":{"start":{"line":263,"column":46,"offset":10897},"end":{"line":263,"column":50,"offset":10901}}},{"type":"text","value":", as in conditionals or ","position":{"start":{"line":263,"column":50,"offset":10901},"end":{"line":263,"column":74,"offset":10925}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for"}],"position":{"start":{"line":263,"column":74,"offset":10925},"end":{"line":263,"column":79,"offset":10930}}},{"type":"text","value":" loops","position":{"start":{"line":263,"column":79,"offset":10930},"end":{"line":263,"column":85,"offset":10936}}},{"type":"text","value":")","position":{"start":{"line":263,"column":85,"offset":10936},"end":{"line":263,"column":87,"offset":10938}}},{"type":"text","value":", variables can be block scoped","position":{"start":{"line":263,"column":87,"offset":10938},"end":{"line":263,"column":118,"offset":10969}}}],"position":{"start":{"line":263,"column":5,"offset":10856},"end":{"line":263,"column":118,"offset":10969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inner scope does not have access to variables in the outer scope","position":{"start":{"line":264,"column":9,"offset":10979},"end":{"line":264,"column":73,"offset":11043}}}],"position":{"start":{"line":264,"column":9,"offset":10979},"end":{"line":264,"column":73,"offset":11043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found","position":{"start":{"line":265,"column":13,"offset":11057},"end":{"line":265,"column":155,"offset":11199}}}],"position":{"start":{"line":265,"column":9,"offset":11053},"end":{"line":265,"column":155,"offset":11199}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"so an inner scope can access outer scope variables","position":{"start":{"line":266,"column":13,"offset":11213},"end":{"line":266,"column":63,"offset":11263}}}],"position":{"start":{"line":266,"column":9,"offset":11209},"end":{"line":266,"column":63,"offset":11263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"but an outer scope can never access inner scope variables","position":{"start":{"line":267,"column":13,"offset":11277},"end":{"line":267,"column":70,"offset":11334}}}],"position":{"start":{"line":267,"column":9,"offset":11273},"end":{"line":267,"column":70,"offset":11334}}},{"type":"text","value":"\n"}],"position":{"start":{"line":265,"column":9,"offset":11053},"end":{"line":267,"column":70,"offset":11334}}},{"type":"text","value":"\n"}],"position":{"start":{"line":264,"column":5,"offset":10975},"end":{"line":267,"column":70,"offset":11334}}},{"type":"text","value":"\n"}],"position":{"start":{"line":257,"column":5,"offset":10215},"end":{"line":267,"column":70,"offset":11334}}},{"type":"text","value":"\n"}],"position":{"start":{"line":256,"column":1,"offset":10098},"end":{"line":267,"column":70,"offset":11334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define an arrow function","position":{"start":{"line":268,"column":5,"offset":11340},"end":{"line":268,"column":29,"offset":11364}}}],"position":{"start":{"line":268,"column":5,"offset":11340},"end":{"line":268,"column":29,"offset":11364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":270,"column":5,"offset":11372},"end":{"line":270,"column":7,"offset":11374}}},{"type":"text","value":"`","position":{"start":{"line":270,"column":7,"offset":11374},"end":{"line":270,"column":9,"offset":11376}}},{"type":"text","value":"`","position":{"start":{"line":270,"column":9,"offset":11376},"end":{"line":270,"column":11,"offset":11378}}},{"type":"text","value":"javascript","position":{"start":{"line":270,"column":11,"offset":11378},"end":{"line":270,"column":21,"offset":11388}}}],"position":{"start":{"line":270,"column":5,"offset":11372},"end":{"line":270,"column":21,"offset":11388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let arrowFunction = ","position":{"start":{"line":272,"column":5,"offset":11396},"end":{"line":272,"column":25,"offset":11416}}},{"type":"text","value":"(","position":{"start":{"line":272,"column":25,"offset":11416},"end":{"line":272,"column":27,"offset":11418}}},{"type":"text","value":"param1, param2","position":{"start":{"line":272,"column":27,"offset":11418},"end":{"line":272,"column":41,"offset":11432}}},{"type":"text","value":")","position":{"start":{"line":272,"column":41,"offset":11432},"end":{"line":272,"column":43,"offset":11434}}},{"type":"text","value":" =","position":{"start":{"line":272,"column":43,"offset":11434},"end":{"line":272,"column":45,"offset":11436}}},{"type":"text","value":">","position":{"start":{"line":272,"column":45,"offset":11436},"end":{"line":272,"column":49,"offset":11440}}},{"type":"text","value":" {","position":{"start":{"line":272,"column":49,"offset":11440},"end":{"line":272,"column":51,"offset":11442}}}],"position":{"start":{"line":272,"column":5,"offset":11396},"end":{"line":272,"column":51,"offset":11442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let sum = param1 + param2;","position":{"start":{"line":274,"column":5,"offset":11450},"end":{"line":274,"column":31,"offset":11476}}}],"position":{"start":{"line":274,"column":5,"offset":11450},"end":{"line":274,"column":31,"offset":11476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"return sum;","position":{"start":{"line":276,"column":5,"offset":11484},"end":{"line":276,"column":16,"offset":11495}}}],"position":{"start":{"line":276,"column":5,"offset":11484},"end":{"line":276,"column":16,"offset":11495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":278,"column":5,"offset":11503},"end":{"line":278,"column":6,"offset":11504}}}],"position":{"start":{"line":278,"column":5,"offset":11503},"end":{"line":278,"column":6,"offset":11504}}},{"type":"text","value":"\n"}],"position":{"start":{"line":268,"column":1,"offset":11336},"end":{"line":278,"column":6,"offset":11504}}},{"type":"text","value":"\n"}],"position":{"start":{"line":242,"column":1,"offset":8394},"end":{"line":278,"column":6,"offset":11504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// with 1 param you can remove parens around parameters let arrowFunction = param =","position":{"start":{"line":280,"column":1,"offset":11508},"end":{"line":280,"column":84,"offset":11591}}},{"type":"text","value":">","position":{"start":{"line":280,"column":84,"offset":11591},"end":{"line":280,"column":88,"offset":11595}}},{"type":"text","value":" { param += 1; return param; }","position":{"start":{"line":280,"column":88,"offset":11595},"end":{"line":280,"column":118,"offset":11625}}}],"position":{"start":{"line":280,"column":1,"offset":11508},"end":{"line":280,"column":118,"offset":11625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// if your return statement is one line, you can use implied return let arrowFunction = param =","position":{"start":{"line":282,"column":1,"offset":11629},"end":{"line":282,"column":96,"offset":11724}}},{"type":"text","value":">","position":{"start":{"line":282,"column":96,"offset":11724},"end":{"line":282,"column":100,"offset":11728}}},{"type":"text","value":" param + 1;","position":{"start":{"line":282,"column":100,"offset":11728},"end":{"line":282,"column":111,"offset":11739}}}],"position":{"start":{"line":282,"column":1,"offset":11629},"end":{"line":282,"column":111,"offset":11739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// you don't have to assign to variable, can be anonymous // if you never need to use it again param =","position":{"start":{"line":284,"column":1,"offset":11743},"end":{"line":284,"column":103,"offset":11845}}},{"type":"text","value":">","position":{"start":{"line":284,"column":103,"offset":11845},"end":{"line":284,"column":107,"offset":11849}}},{"type":"text","value":" param + 1;","position":{"start":{"line":284,"column":107,"offset":11849},"end":{"line":284,"column":118,"offset":11860}}}],"position":{"start":{"line":284,"column":1,"offset":11743},"end":{"line":284,"column":118,"offset":11860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":286,"column":1,"offset":11864},"end":{"line":286,"column":3,"offset":11866}}},{"type":"text","value":"`","position":{"start":{"line":286,"column":3,"offset":11866},"end":{"line":286,"column":5,"offset":11868}}},{"type":"text","value":"`","position":{"start":{"line":286,"column":5,"offset":11868},"end":{"line":286,"column":7,"offset":11870}}}],"position":{"start":{"line":286,"column":1,"offset":11864},"end":{"line":286,"column":7,"offset":11870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an arrow function, deduce the value of ","position":{"start":{"line":288,"column":5,"offset":11878},"end":{"line":288,"column":50,"offset":11923}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":288,"column":50,"offset":11923},"end":{"line":288,"column":56,"offset":11929}}},{"type":"text","value":" without executing the code","position":{"start":{"line":288,"column":56,"offset":11929},"end":{"line":288,"column":83,"offset":11956}}}],"position":{"start":{"line":288,"column":5,"offset":11878},"end":{"line":288,"column":83,"offset":11956}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"arrow functions are automatically bound to the context they were declared in","position":{"start":{"line":290,"column":9,"offset":11968},"end":{"line":290,"column":85,"offset":12044}}}],"position":{"start":{"line":290,"column":5,"offset":11964},"end":{"line":290,"column":85,"offset":12044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"unlike regular function which use the context they are invoked in ","position":{"start":{"line":291,"column":9,"offset":12054},"end":{"line":291,"column":75,"offset":12120}}},{"type":"text","value":"(","position":{"start":{"line":291,"column":75,"offset":12120},"end":{"line":291,"column":77,"offset":12122}}},{"type":"text","value":"unless they have been bound using ","position":{"start":{"line":291,"column":77,"offset":12122},"end":{"line":291,"column":111,"offset":12156}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function#bind"}],"position":{"start":{"line":291,"column":111,"offset":12156},"end":{"line":291,"column":126,"offset":12171}}},{"type":"text","value":")","position":{"start":{"line":291,"column":126,"offset":12171},"end":{"line":291,"column":128,"offset":12173}}}],"position":{"start":{"line":291,"column":5,"offset":12050},"end":{"line":291,"column":128,"offset":12173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context","position":{"start":{"line":292,"column":9,"offset":12183},"end":{"line":292,"column":149,"offset":12323}}}],"position":{"start":{"line":292,"column":5,"offset":12179},"end":{"line":292,"column":149,"offset":12323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"so you can't use an arrow function to define a method directly","position":{"start":{"line":293,"column":9,"offset":12333},"end":{"line":293,"column":71,"offset":12395}}}],"position":{"start":{"line":293,"column":9,"offset":12333},"end":{"line":293,"column":71,"offset":12395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":295,"column":9,"offset":12407},"end":{"line":295,"column":11,"offset":12409}}},{"type":"text","value":"`","position":{"start":{"line":295,"column":11,"offset":12409},"end":{"line":295,"column":13,"offset":12411}}},{"type":"text","value":"`","position":{"start":{"line":295,"column":13,"offset":12411},"end":{"line":295,"column":15,"offset":12413}}},{"type":"text","value":"javascript","position":{"start":{"line":295,"column":15,"offset":12413},"end":{"line":295,"column":25,"offset":12423}}}],"position":{"start":{"line":295,"column":9,"offset":12407},"end":{"line":295,"column":25,"offset":12423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let obj = {","position":{"start":{"line":297,"column":9,"offset":12435},"end":{"line":297,"column":20,"offset":12446}}}],"position":{"start":{"line":297,"column":9,"offset":12435},"end":{"line":297,"column":20,"offset":12446}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"name: \"my object\",","position":{"start":{"line":299,"column":9,"offset":12458},"end":{"line":299,"column":27,"offset":12476}}}],"position":{"start":{"line":299,"column":9,"offset":12458},"end":{"line":299,"column":27,"offset":12476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"unboundFunc: function ","position":{"start":{"line":301,"column":9,"offset":12488},"end":{"line":301,"column":31,"offset":12510}}},{"type":"text","value":"(","position":{"start":{"line":301,"column":31,"offset":12510},"end":{"line":301,"column":33,"offset":12512}}},{"type":"text","value":")","position":{"start":{"line":301,"column":33,"offset":12512},"end":{"line":301,"column":35,"offset":12514}}},{"type":"text","value":" {","position":{"start":{"line":301,"column":35,"offset":12514},"end":{"line":301,"column":37,"offset":12516}}}],"position":{"start":{"line":301,"column":9,"offset":12488},"end":{"line":301,"column":37,"offset":12516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"return this.name;","position":{"start":{"line":303,"column":9,"offset":12528},"end":{"line":303,"column":26,"offset":12545}}}],"position":{"start":{"line":303,"column":9,"offset":12528},"end":{"line":303,"column":26,"offset":12545}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// this function will be able to be called on different objects","position":{"start":{"line":305,"column":9,"offset":12557},"end":{"line":305,"column":72,"offset":12620}}}],"position":{"start":{"line":305,"column":9,"offset":12557},"end":{"line":305,"column":72,"offset":12620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":307,"column":9,"offset":12632},"end":{"line":307,"column":11,"offset":12634}}}],"position":{"start":{"line":307,"column":9,"offset":12632},"end":{"line":307,"column":11,"offset":12634}}},{"type":"text","value":"\n"}],"position":{"start":{"line":293,"column":5,"offset":12329},"end":{"line":307,"column":11,"offset":12634}}},{"type":"text","value":"\n"}],"position":{"start":{"line":290,"column":5,"offset":11964},"end":{"line":307,"column":11,"offset":12634}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":11874},"end":{"line":307,"column":11,"offset":12634}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":11874},"end":{"line":307,"column":11,"offset":12634}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":309,"column":1,"offset":12638},"end":{"line":309,"column":4,"offset":12641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"boundToGlobal: ","position":{"start":{"line":311,"column":1,"offset":12645},"end":{"line":311,"column":16,"offset":12660}}},{"type":"text","value":"(","position":{"start":{"line":311,"column":16,"offset":12660},"end":{"line":311,"column":18,"offset":12662}}},{"type":"text","value":")","position":{"start":{"line":311,"column":18,"offset":12662},"end":{"line":311,"column":20,"offset":12664}}},{"type":"text","value":" =","position":{"start":{"line":311,"column":20,"offset":12664},"end":{"line":311,"column":22,"offset":12666}}},{"type":"text","value":">","position":{"start":{"line":311,"column":22,"offset":12666},"end":{"line":311,"column":26,"offset":12670}}},{"type":"text","value":" { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },","position":{"start":{"line":311,"column":26,"offset":12670},"end":{"line":311,"column":212,"offset":12856}}}],"position":{"start":{"line":311,"column":1,"offset":12645},"end":{"line":311,"column":212,"offset":12856}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined\n"}],"position":{"start":{"line":313,"column":1,"offset":12860},"end":{"line":353,"column":4,"offset":16022}}}],"position":{"start":{"line":313,"column":1,"offset":12860},"end":{"line":353,"column":4,"offset":16022}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":355,"column":1,"offset":16026},"end":{"line":355,"column":2,"offset":16027}}}],"position":{"start":{"line":355,"column":1,"offset":16026},"end":{"line":355,"column":2,"offset":16027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n\n```javascript\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());\n"}],"position":{"start":{"line":357,"column":1,"offset":16031},"end":{"line":419,"column":5,"offset":19057}}}],"position":{"start":{"line":357,"column":1,"offset":16031},"end":{"line":419,"column":5,"offset":19057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a method that references ","position":{"start":{"line":421,"column":5,"offset":19065},"end":{"line":421,"column":37,"offset":19097}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":421,"column":37,"offset":19097},"end":{"line":421,"column":43,"offset":19103}}},{"type":"text","value":" on an object literal","position":{"start":{"line":421,"column":43,"offset":19103},"end":{"line":421,"column":64,"offset":19124}}}],"position":{"start":{"line":421,"column":5,"offset":19065},"end":{"line":421,"column":64,"offset":19124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"when we use ","position":{"start":{"line":422,"column":9,"offset":19134},"end":{"line":422,"column":21,"offset":19146}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":422,"column":21,"offset":19146},"end":{"line":422,"column":27,"offset":19152}}},{"type":"text","value":" in a method it refers to the object that the method is invoked on","position":{"start":{"line":422,"column":27,"offset":19152},"end":{"line":422,"column":93,"offset":19218}}}],"position":{"start":{"line":422,"column":9,"offset":19134},"end":{"line":422,"column":93,"offset":19218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"it will let you access other pieces of information from within that object, or even other methods","position":{"start":{"line":423,"column":13,"offset":19232},"end":{"line":423,"column":110,"offset":19329}}}],"position":{"start":{"line":423,"column":9,"offset":19228},"end":{"line":423,"column":110,"offset":19329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"method style invocation - ","position":{"start":{"line":424,"column":13,"offset":19343},"end":{"line":424,"column":39,"offset":19369}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object.method(args)"}],"position":{"start":{"line":424,"column":39,"offset":19369},"end":{"line":424,"column":60,"offset":19390}}},{"type":"text","value":" ","position":{"start":{"line":424,"column":60,"offset":19390},"end":{"line":424,"column":61,"offset":19391}}},{"type":"text","value":"(","position":{"start":{"line":424,"column":61,"offset":19391},"end":{"line":424,"column":63,"offset":19393}}},{"type":"text","value":"e.g. built in examples like ","position":{"start":{"line":424,"column":63,"offset":19393},"end":{"line":424,"column":91,"offset":19421}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#push"}],"position":{"start":{"line":424,"column":91,"offset":19421},"end":{"line":424,"column":103,"offset":19433}}},{"type":"text","value":", or ","position":{"start":{"line":424,"column":103,"offset":19433},"end":{"line":424,"column":108,"offset":19438}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"String#toUpperCase"}],"position":{"start":{"line":424,"column":108,"offset":19438},"end":{"line":424,"column":128,"offset":19458}}},{"type":"text","value":")","position":{"start":{"line":424,"column":128,"offset":19458},"end":{"line":424,"column":130,"offset":19460}}}],"position":{"start":{"line":424,"column":9,"offset":19339},"end":{"line":424,"column":130,"offset":19460}}},{"type":"text","value":"\n"}],"position":{"start":{"line":423,"column":9,"offset":19228},"end":{"line":424,"column":130,"offset":19460}}},{"type":"text","value":"\n"}],"position":{"start":{"line":422,"column":5,"offset":19130},"end":{"line":424,"column":130,"offset":19460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"context is set every time we invoke a function","position":{"start":{"line":425,"column":9,"offset":19470},"end":{"line":425,"column":55,"offset":19516}}}],"position":{"start":{"line":425,"column":5,"offset":19466},"end":{"line":425,"column":55,"offset":19516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"function style invocation sets the context to the global object no matter what","position":{"start":{"line":426,"column":9,"offset":19526},"end":{"line":426,"column":87,"offset":19604}}}],"position":{"start":{"line":426,"column":5,"offset":19522},"end":{"line":426,"column":87,"offset":19604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"being inside an object does not make the context that object! you still have to use method-style invocation","position":{"start":{"line":427,"column":9,"offset":19614},"end":{"line":427,"column":116,"offset":19721}}}],"position":{"start":{"line":427,"column":5,"offset":19610},"end":{"line":427,"column":116,"offset":19721}}},{"type":"text","value":"\n"}],"position":{"start":{"line":422,"column":5,"offset":19130},"end":{"line":427,"column":116,"offset":19721}}},{"type":"text","value":"\n"}],"position":{"start":{"line":421,"column":1,"offset":19061},"end":{"line":427,"column":116,"offset":19721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Utilize the built in ","position":{"start":{"line":428,"column":5,"offset":19727},"end":{"line":428,"column":26,"offset":19748}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function#bind"}],"position":{"start":{"line":428,"column":26,"offset":19748},"end":{"line":428,"column":41,"offset":19763}}},{"type":"text","value":" on a callback to maintain the context of this","position":{"start":{"line":428,"column":41,"offset":19763},"end":{"line":428,"column":87,"offset":19809}}}],"position":{"start":{"line":428,"column":5,"offset":19727},"end":{"line":428,"column":87,"offset":19809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function","position":{"start":{"line":430,"column":9,"offset":19821},"end":{"line":430,"column":133,"offset":19945}}}],"position":{"start":{"line":430,"column":5,"offset":19817},"end":{"line":430,"column":133,"offset":19945}}},{"type":"text","value":"\n"}],"position":{"start":{"line":430,"column":5,"offset":19817},"end":{"line":430,"column":133,"offset":19945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"\n"}],"position":{"start":{"line":432,"column":5,"offset":19953},"end":{"line":446,"column":8,"offset":20379}}}],"position":{"start":{"line":432,"column":5,"offset":19953},"end":{"line":446,"column":8,"offset":20379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":448,"column":5,"offset":20387},"end":{"line":448,"column":7,"offset":20389}}},{"type":"text","value":"`","position":{"start":{"line":448,"column":7,"offset":20389},"end":{"line":448,"column":9,"offset":20391}}}],"position":{"start":{"line":448,"column":5,"offset":20387},"end":{"line":448,"column":9,"offset":20391}}},{"type":"text","value":"\n"}],"position":{"start":{"line":428,"column":1,"offset":19723},"end":{"line":448,"column":9,"offset":20391}}},{"type":"text","value":"\n"}],"position":{"start":{"line":421,"column":1,"offset":19061},"end":{"line":448,"column":9,"offset":20391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":450,"column":1,"offset":20395},"end":{"line":450,"column":4,"offset":20398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":452,"column":1,"offset":20402},"end":{"line":452,"column":4,"offset":20405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n"}],"position":{"start":{"line":454,"column":1,"offset":20409},"end":{"line":481,"column":5,"offset":22394}}}],"position":{"start":{"line":454,"column":1,"offset":20409},"end":{"line":481,"column":5,"offset":22394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":483,"column":5,"offset":22402},"end":{"line":483,"column":60,"offset":22457}}}],"position":{"start":{"line":483,"column":5,"offset":22402},"end":{"line":483,"column":60,"offset":22457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":484,"column":9,"offset":22467},"end":{"line":484,"column":105,"offset":22563}}}],"position":{"start":{"line":484,"column":5,"offset":22463},"end":{"line":484,"column":105,"offset":22563}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":485,"column":9,"offset":22573},"end":{"line":485,"column":105,"offset":22669}}}],"position":{"start":{"line":485,"column":5,"offset":22569},"end":{"line":485,"column":105,"offset":22669}}},{"type":"text","value":"\n"}],"position":{"start":{"line":484,"column":5,"offset":22463},"end":{"line":485,"column":105,"offset":22669}}},{"type":"text","value":"\n"}],"position":{"start":{"line":483,"column":1,"offset":22398},"end":{"line":485,"column":105,"offset":22669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":486,"column":5,"offset":22675},"end":{"line":486,"column":55,"offset":22725}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":486,"column":55,"offset":22725},"end":{"line":486,"column":61,"offset":22731}}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":486,"column":61,"offset":22731},"end":{"line":486,"column":183,"offset":22853}}}],"position":{"start":{"line":486,"column":5,"offset":22675},"end":{"line":486,"column":183,"offset":22853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function\n"}],"position":{"start":{"line":488,"column":5,"offset":22861},"end":{"line":498,"column":8,"offset":23119}}}],"position":{"start":{"line":488,"column":5,"offset":22861},"end":{"line":498,"column":8,"offset":23119}}},{"type":"text","value":"\n"}],"position":{"start":{"line":486,"column":1,"offset":22671},"end":{"line":498,"column":8,"offset":23119}}},{"type":"text","value":"\n"}],"position":{"start":{"line":483,"column":1,"offset":22398},"end":{"line":498,"column":8,"offset":23119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":500,"column":1,"offset":23123},"end":{"line":500,"column":29,"offset":23151}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"use strict\";"}],"position":{"start":{"line":500,"column":29,"offset":23151},"end":{"line":500,"column":44,"offset":23166}}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":500,"column":44,"offset":23166},"end":{"line":500,"column":105,"offset":23227}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":500,"column":105,"offset":23227},"end":{"line":500,"column":111,"offset":23233}}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":500,"column":111,"offset":23233},"end":{"line":500,"column":148,"offset":23270}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":500,"column":148,"offset":23270},"end":{"line":500,"column":154,"offset":23276}}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":500,"column":154,"offset":23276},"end":{"line":500,"column":274,"offset":23396}}}],"position":{"start":{"line":500,"column":1,"offset":23123},"end":{"line":500,"column":274,"offset":23396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":502,"column":1,"offset":23400},"end":{"line":502,"column":4,"offset":23403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let sayMeow = cat.purrMore; console.log","position":{"start":{"line":504,"column":1,"offset":23407},"end":{"line":504,"column":40,"offset":23446}}},{"type":"text","value":"(","position":{"start":{"line":504,"column":40,"offset":23446},"end":{"line":504,"column":42,"offset":23448}}},{"type":"text","value":"sayMeow","position":{"start":{"line":504,"column":42,"offset":23448},"end":{"line":504,"column":49,"offset":23455}}},{"type":"text","value":"(","position":{"start":{"line":504,"column":49,"offset":23455},"end":{"line":504,"column":51,"offset":23457}}},{"type":"text","value":")","position":{"start":{"line":504,"column":51,"offset":23457},"end":{"line":504,"column":53,"offset":23459}}},{"type":"text","value":")","position":{"start":{"line":504,"column":53,"offset":23459},"end":{"line":504,"column":55,"offset":23461}}},{"type":"text","value":"; // TypeError: this.purr is not a function","position":{"start":{"line":504,"column":55,"offset":23461},"end":{"line":504,"column":98,"offset":23504}}}],"position":{"start":{"line":504,"column":1,"offset":23407},"end":{"line":504,"column":98,"offset":23504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// we can use the built in Function.bind to ensure our context, our ","position":{"start":{"line":506,"column":1,"offset":23508},"end":{"line":506,"column":69,"offset":23576}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":506,"column":69,"offset":23576},"end":{"line":506,"column":75,"offset":23582}}},{"type":"text","value":", // is the cat object let boundCat = sayMeow.bind","position":{"start":{"line":506,"column":75,"offset":23582},"end":{"line":506,"column":125,"offset":23632}}},{"type":"text","value":"(","position":{"start":{"line":506,"column":125,"offset":23632},"end":{"line":506,"column":127,"offset":23634}}},{"type":"text","value":"cat","position":{"start":{"line":506,"column":127,"offset":23634},"end":{"line":506,"column":130,"offset":23637}}},{"type":"text","value":")","position":{"start":{"line":506,"column":130,"offset":23637},"end":{"line":506,"column":132,"offset":23639}}},{"type":"text","value":";","position":{"start":{"line":506,"column":132,"offset":23639},"end":{"line":506,"column":133,"offset":23640}}}],"position":{"start":{"line":506,"column":1,"offset":23508},"end":{"line":506,"column":133,"offset":23640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"boundCat","position":{"start":{"line":508,"column":1,"offset":23644},"end":{"line":508,"column":9,"offset":23652}}},{"type":"text","value":"(","position":{"start":{"line":508,"column":9,"offset":23652},"end":{"line":508,"column":11,"offset":23654}}},{"type":"text","value":")","position":{"start":{"line":508,"column":11,"offset":23654},"end":{"line":508,"column":13,"offset":23656}}},{"type":"text","value":"; // prints \"meow\"","position":{"start":{"line":508,"column":13,"offset":23656},"end":{"line":508,"column":31,"offset":23674}}}],"position":{"start":{"line":508,"column":1,"offset":23644},"end":{"line":508,"column":31,"offset":23674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n"}],"position":{"start":{"line":510,"column":1,"offset":23678},"end":{"line":537,"column":5,"offset":25657}}}],"position":{"start":{"line":510,"column":1,"offset":23678},"end":{"line":537,"column":5,"offset":25657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":539,"column":5,"offset":25665},"end":{"line":539,"column":60,"offset":25720}}}],"position":{"start":{"line":539,"column":5,"offset":25665},"end":{"line":539,"column":60,"offset":25720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":540,"column":9,"offset":25730},"end":{"line":540,"column":105,"offset":25826}}}],"position":{"start":{"line":540,"column":5,"offset":25726},"end":{"line":540,"column":105,"offset":25826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":541,"column":9,"offset":25836},"end":{"line":541,"column":105,"offset":25932}}}],"position":{"start":{"line":541,"column":5,"offset":25832},"end":{"line":541,"column":105,"offset":25932}}},{"type":"text","value":"\n"}],"position":{"start":{"line":540,"column":5,"offset":25726},"end":{"line":541,"column":105,"offset":25932}}},{"type":"text","value":"\n"}],"position":{"start":{"line":539,"column":1,"offset":25661},"end":{"line":541,"column":105,"offset":25932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":542,"column":5,"offset":25938},"end":{"line":542,"column":55,"offset":25988}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":542,"column":55,"offset":25988},"end":{"line":542,"column":61,"offset":25994}}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":542,"column":61,"offset":25994},"end":{"line":542,"column":183,"offset":26116}}}],"position":{"start":{"line":542,"column":5,"offset":25938},"end":{"line":542,"column":183,"offset":26116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":544,"column":5,"offset":26124},"end":{"line":544,"column":7,"offset":26126}}},{"type":"text","value":"`","position":{"start":{"line":544,"column":7,"offset":26126},"end":{"line":544,"column":9,"offset":26128}}},{"type":"text","value":"`","position":{"start":{"line":544,"column":9,"offset":26128},"end":{"line":544,"column":11,"offset":26130}}},{"type":"text","value":"javascript","position":{"start":{"line":544,"column":11,"offset":26130},"end":{"line":544,"column":21,"offset":26140}}}],"position":{"start":{"line":544,"column":5,"offset":26124},"end":{"line":544,"column":21,"offset":26140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let cat = {","position":{"start":{"line":546,"column":5,"offset":26148},"end":{"line":546,"column":16,"offset":26159}}}],"position":{"start":{"line":546,"column":5,"offset":26148},"end":{"line":546,"column":16,"offset":26159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"purr: function ","position":{"start":{"line":548,"column":5,"offset":26167},"end":{"line":548,"column":20,"offset":26182}}},{"type":"text","value":"(","position":{"start":{"line":548,"column":20,"offset":26182},"end":{"line":548,"column":22,"offset":26184}}},{"type":"text","value":")","position":{"start":{"line":548,"column":22,"offset":26184},"end":{"line":548,"column":24,"offset":26186}}},{"type":"text","value":" {","position":{"start":{"line":548,"column":24,"offset":26186},"end":{"line":548,"column":26,"offset":26188}}}],"position":{"start":{"line":548,"column":5,"offset":26167},"end":{"line":548,"column":26,"offset":26188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":550,"column":5,"offset":26196},"end":{"line":550,"column":16,"offset":26207}}},{"type":"text","value":"(","position":{"start":{"line":550,"column":16,"offset":26207},"end":{"line":550,"column":18,"offset":26209}}},{"type":"text","value":"\"meow\"","position":{"start":{"line":550,"column":18,"offset":26209},"end":{"line":550,"column":24,"offset":26215}}},{"type":"text","value":")","position":{"start":{"line":550,"column":24,"offset":26215},"end":{"line":550,"column":26,"offset":26217}}},{"type":"text","value":";","position":{"start":{"line":550,"column":26,"offset":26217},"end":{"line":550,"column":27,"offset":26218}}}],"position":{"start":{"line":550,"column":5,"offset":26196},"end":{"line":550,"column":27,"offset":26218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":552,"column":5,"offset":26226},"end":{"line":552,"column":7,"offset":26228}}}],"position":{"start":{"line":552,"column":5,"offset":26226},"end":{"line":552,"column":7,"offset":26228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"purrMore: function ","position":{"start":{"line":554,"column":5,"offset":26236},"end":{"line":554,"column":24,"offset":26255}}},{"type":"text","value":"(","position":{"start":{"line":554,"column":24,"offset":26255},"end":{"line":554,"column":26,"offset":26257}}},{"type":"text","value":")","position":{"start":{"line":554,"column":26,"offset":26257},"end":{"line":554,"column":28,"offset":26259}}},{"type":"text","value":" {","position":{"start":{"line":554,"column":28,"offset":26259},"end":{"line":554,"column":30,"offset":26261}}}],"position":{"start":{"line":554,"column":5,"offset":26236},"end":{"line":554,"column":30,"offset":26261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"this.purr","position":{"start":{"line":556,"column":5,"offset":26269},"end":{"line":556,"column":14,"offset":26278}}},{"type":"text","value":"(","position":{"start":{"line":556,"column":14,"offset":26278},"end":{"line":556,"column":16,"offset":26280}}},{"type":"text","value":")","position":{"start":{"line":556,"column":16,"offset":26280},"end":{"line":556,"column":18,"offset":26282}}},{"type":"text","value":";","position":{"start":{"line":556,"column":18,"offset":26282},"end":{"line":556,"column":19,"offset":26283}}}],"position":{"start":{"line":556,"column":5,"offset":26269},"end":{"line":556,"column":19,"offset":26283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":558,"column":5,"offset":26291},"end":{"line":558,"column":7,"offset":26293}}}],"position":{"start":{"line":558,"column":5,"offset":26291},"end":{"line":558,"column":7,"offset":26293}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"};","position":{"start":{"line":560,"column":5,"offset":26301},"end":{"line":560,"column":7,"offset":26303}}}],"position":{"start":{"line":560,"column":5,"offset":26301},"end":{"line":560,"column":7,"offset":26303}}},{"type":"text","value":"\n"}],"position":{"start":{"line":542,"column":1,"offset":25934},"end":{"line":560,"column":7,"offset":26303}}},{"type":"text","value":"\n"}],"position":{"start":{"line":539,"column":1,"offset":25661},"end":{"line":560,"column":7,"offset":26303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"global.setTimeout","position":{"start":{"line":562,"column":1,"offset":26307},"end":{"line":562,"column":18,"offset":26324}}},{"type":"text","value":"(","position":{"start":{"line":562,"column":18,"offset":26324},"end":{"line":562,"column":20,"offset":26326}}},{"type":"text","value":"cat.purrMore, 5000","position":{"start":{"line":562,"column":20,"offset":26326},"end":{"line":562,"column":38,"offset":26344}}},{"type":"text","value":")","position":{"start":{"line":562,"column":38,"offset":26344},"end":{"line":562,"column":40,"offset":26346}}},{"type":"text","value":"; // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":562,"column":40,"offset":26346},"end":{"line":562,"column":100,"offset":26406}}}],"position":{"start":{"line":562,"column":1,"offset":26307},"end":{"line":562,"column":100,"offset":26406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":564,"column":1,"offset":26410},"end":{"line":564,"column":3,"offset":26412}}},{"type":"text","value":"`","position":{"start":{"line":564,"column":3,"offset":26412},"end":{"line":564,"column":5,"offset":26414}}},{"type":"text","value":"`","position":{"start":{"line":564,"column":5,"offset":26414},"end":{"line":564,"column":7,"offset":26416}}}],"position":{"start":{"line":564,"column":1,"offset":26410},"end":{"line":564,"column":7,"offset":26416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":566,"column":5,"offset":26424},"end":{"line":566,"column":33,"offset":26452}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"use strict\";"}],"position":{"start":{"line":566,"column":33,"offset":26452},"end":{"line":566,"column":48,"offset":26467}}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":566,"column":48,"offset":26467},"end":{"line":566,"column":109,"offset":26528}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":566,"column":109,"offset":26528},"end":{"line":566,"column":115,"offset":26534}}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":566,"column":115,"offset":26534},"end":{"line":566,"column":152,"offset":26571}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":566,"column":152,"offset":26571},"end":{"line":566,"column":158,"offset":26577}}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":566,"column":158,"offset":26577},"end":{"line":566,"column":278,"offset":26697}}}],"position":{"start":{"line":566,"column":1,"offset":26420},"end":{"line":566,"column":278,"offset":26697}}},{"type":"text","value":"\n"}],"position":{"start":{"line":566,"column":1,"offset":26420},"end":{"line":566,"column":278,"offset":26697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"POJOs","position":{"start":{"line":568,"column":5,"offset":26705},"end":{"line":568,"column":10,"offset":26710}}}],"position":{"start":{"line":568,"column":1,"offset":26701},"end":{"line":568,"column":10,"offset":26710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. Label variables as either Primitive vs. Reference","position":{"start":{"line":570,"column":6,"offset":26719},"end":{"line":570,"column":58,"offset":26771}}}],"position":{"start":{"line":570,"column":1,"offset":26714},"end":{"line":570,"column":58,"offset":26771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.","position":{"start":{"line":572,"column":1,"offset":26775},"end":{"line":572,"column":240,"offset":27014}}}],"position":{"start":{"line":572,"column":1,"offset":26775},"end":{"line":572,"column":240,"offset":27014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Boolean - Primitive","position":{"start":{"line":574,"column":5,"offset":27022},"end":{"line":574,"column":24,"offset":27041}}}],"position":{"start":{"line":574,"column":1,"offset":27018},"end":{"line":574,"column":24,"offset":27041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Null - Primitive","position":{"start":{"line":575,"column":5,"offset":27047},"end":{"line":575,"column":21,"offset":27063}}}],"position":{"start":{"line":575,"column":1,"offset":27043},"end":{"line":575,"column":21,"offset":27063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Undefined - Primitive","position":{"start":{"line":576,"column":5,"offset":27069},"end":{"line":576,"column":26,"offset":27090}}}],"position":{"start":{"line":576,"column":1,"offset":27065},"end":{"line":576,"column":26,"offset":27090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Number - Primitive","position":{"start":{"line":577,"column":5,"offset":27096},"end":{"line":577,"column":23,"offset":27114}}}],"position":{"start":{"line":577,"column":1,"offset":27092},"end":{"line":577,"column":23,"offset":27114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"String - Primitive","position":{"start":{"line":578,"column":5,"offset":27120},"end":{"line":578,"column":23,"offset":27138}}}],"position":{"start":{"line":578,"column":1,"offset":27116},"end":{"line":578,"column":23,"offset":27138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Array - Reference","position":{"start":{"line":579,"column":5,"offset":27144},"end":{"line":579,"column":22,"offset":27161}}}],"position":{"start":{"line":579,"column":1,"offset":27140},"end":{"line":579,"column":22,"offset":27161}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Object - Reference","position":{"start":{"line":580,"column":5,"offset":27167},"end":{"line":580,"column":23,"offset":27185}}}],"position":{"start":{"line":580,"column":1,"offset":27163},"end":{"line":580,"column":23,"offset":27185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Function - Reference","position":{"start":{"line":581,"column":5,"offset":27191},"end":{"line":581,"column":25,"offset":27211}}}],"position":{"start":{"line":581,"column":1,"offset":27187},"end":{"line":581,"column":25,"offset":27211}}},{"type":"text","value":"\n"}],"position":{"start":{"line":574,"column":1,"offset":27018},"end":{"line":581,"column":25,"offset":27211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"2. Identify when to use . vs ","position":{"start":{"line":583,"column":6,"offset":27220},"end":{"line":583,"column":35,"offset":27249}}},{"type":"text","value":"[","position":{"start":{"line":583,"column":35,"offset":27249},"end":{"line":583,"column":37,"offset":27251}}},{"type":"text","value":"]","position":{"start":{"line":583,"column":37,"offset":27251},"end":{"line":583,"column":39,"offset":27253}}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":583,"column":39,"offset":27253},"end":{"line":583,"column":74,"offset":27288}}}],"position":{"start":{"line":583,"column":1,"offset":27215},"end":{"line":583,"column":74,"offset":27288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);\n"}],"position":{"start":{"line":585,"column":1,"offset":27292},"end":{"line":595,"column":4,"offset":27650}}}],"position":{"start":{"line":585,"column":1,"offset":27292},"end":{"line":595,"column":4,"offset":27650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"3. Write an object literal with a variable key using interpolation","position":{"start":{"line":597,"column":6,"offset":27659},"end":{"line":597,"column":72,"offset":27725}}}],"position":{"start":{"line":597,"column":1,"offset":27654},"end":{"line":597,"column":72,"offset":27725}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);\n"}],"position":{"start":{"line":599,"column":1,"offset":27729},"end":{"line":606,"column":4,"offset":27924}}}],"position":{"start":{"line":599,"column":1,"offset":27729},"end":{"line":606,"column":4,"offset":27924}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"4. Use the obj","position":{"start":{"line":608,"column":6,"offset":27933},"end":{"line":608,"column":20,"offset":27947}}},{"type":"text","value":"[","position":{"start":{"line":608,"column":20,"offset":27947},"end":{"line":608,"column":22,"offset":27949}}},{"type":"text","value":"key","position":{"start":{"line":608,"column":22,"offset":27949},"end":{"line":608,"column":25,"offset":27952}}},{"type":"text","value":"]","position":{"start":{"line":608,"column":25,"offset":27952},"end":{"line":608,"column":27,"offset":27954}}},{"type":"text","value":" !== undefined pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":608,"column":27,"offset":27954},"end":{"line":608,"column":118,"offset":28045}}}],"position":{"start":{"line":608,"column":1,"offset":27928},"end":{"line":608,"column":118,"offset":28045}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false\n"}],"position":{"start":{"line":610,"column":1,"offset":28049},"end":{"line":620,"column":4,"offset":28350}}}],"position":{"start":{"line":610,"column":1,"offset":28049},"end":{"line":620,"column":4,"offset":28350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"5. Utilize Object.keys and Object.values in a function","position":{"start":{"line":622,"column":6,"offset":28359},"end":{"line":622,"column":60,"offset":28413}}}],"position":{"start":{"line":622,"column":1,"offset":28354},"end":{"line":622,"column":60,"offset":28413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));\n"}],"position":{"start":{"line":624,"column":1,"offset":28417},"end":{"line":635,"column":4,"offset":28697}}}],"position":{"start":{"line":624,"column":1,"offset":28417},"end":{"line":635,"column":4,"offset":28697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"6. Iterate through an object using a for in loop","position":{"start":{"line":637,"column":6,"offset":28706},"end":{"line":637,"column":54,"offset":28754}}}],"position":{"start":{"line":637,"column":1,"offset":28701},"end":{"line":637,"column":54,"offset":28754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));\n"}],"position":{"start":{"line":639,"column":1,"offset":28758},"end":{"line":647,"column":4,"offset":28935}}}],"position":{"start":{"line":639,"column":1,"offset":28758},"end":{"line":647,"column":4,"offset":28935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments","position":{"start":{"line":649,"column":6,"offset":28944},"end":{"line":649,"column":98,"offset":29036}}}],"position":{"start":{"line":649,"column":1,"offset":28939},"end":{"line":649,"column":98,"offset":29036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0\n"}],"position":{"start":{"line":651,"column":1,"offset":29040},"end":{"line":665,"column":4,"offset":29367}}}],"position":{"start":{"line":651,"column":1,"offset":29040},"end":{"line":665,"column":4,"offset":29367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"8. Use ...spread syntax for Object literals and Array literals","position":{"start":{"line":667,"column":6,"offset":29376},"end":{"line":667,"column":68,"offset":29438}}}],"position":{"start":{"line":667,"column":1,"offset":29371},"end":{"line":667,"column":68,"offset":29438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);\n"}],"position":{"start":{"line":669,"column":1,"offset":29442},"end":{"line":682,"column":4,"offset":29742}}}],"position":{"start":{"line":669,"column":1,"offset":29442},"end":{"line":682,"column":4,"offset":29742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"9. Destructure an array to reference specific elements","position":{"start":{"line":684,"column":6,"offset":29751},"end":{"line":684,"column":60,"offset":29805}}}],"position":{"start":{"line":684,"column":1,"offset":29746},"end":{"line":684,"column":60,"offset":29805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);\n"}],"position":{"start":{"line":686,"column":1,"offset":29809},"end":{"line":691,"column":4,"offset":29906}}}],"position":{"start":{"line":686,"column":1,"offset":29809},"end":{"line":691,"column":4,"offset":29906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"10. Destructure an object to reference specific values","position":{"start":{"line":693,"column":6,"offset":29915},"end":{"line":693,"column":60,"offset":29969}}}],"position":{"start":{"line":693,"column":1,"offset":29910},"end":{"line":693,"column":60,"offset":29969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);\n"}],"position":{"start":{"line":695,"column":1,"offset":29973},"end":{"line":714,"column":4,"offset":30333}}}],"position":{"start":{"line":695,"column":1,"offset":29973},"end":{"line":714,"column":4,"offset":30333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":716,"column":6,"offset":30342},"end":{"line":716,"column":139,"offset":30475}}}],"position":{"start":{"line":716,"column":1,"offset":30337},"end":{"line":716,"column":139,"offset":30475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));\n"}],"position":{"start":{"line":718,"column":1,"offset":30479},"end":{"line":732,"column":4,"offset":30855}}}],"position":{"start":{"line":718,"column":1,"offset":30479},"end":{"line":732,"column":4,"offset":30855}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":734,"column":1,"offset":30859},"end":{"line":734,"column":4,"offset":30862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":736,"column":5,"offset":30870},"end":{"line":736,"column":23,"offset":30888}}}],"position":{"start":{"line":736,"column":1,"offset":30866},"end":{"line":736,"column":23,"offset":30888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. Identify the difference between const, let, and var declarations","position":{"start":{"line":738,"column":6,"offset":30897},"end":{"line":738,"column":73,"offset":30964}}}],"position":{"start":{"line":738,"column":1,"offset":30892},"end":{"line":738,"column":73,"offset":30964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"2. Explain the difference between const, let, and var declarations","position":{"start":{"line":740,"column":6,"offset":30973},"end":{"line":740,"column":72,"offset":31039}}}],"position":{"start":{"line":740,"column":1,"offset":30968},"end":{"line":740,"column":72,"offset":31039}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"var a = 'a';\n"}],"position":{"start":{"line":742,"column":1,"offset":31043},"end":{"line":744,"column":4,"offset":31075}}}],"position":{"start":{"line":742,"column":1,"offset":31043},"end":{"line":744,"column":4,"offset":31075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":746,"column":5,"offset":31083},"end":{"line":746,"column":10,"offset":31088}}},{"type":"text","value":" is the historical keyword used for variable declaration.","position":{"start":{"line":746,"column":10,"offset":31088},"end":{"line":746,"column":67,"offset":31145}}}],"position":{"start":{"line":746,"column":1,"offset":31079},"end":{"line":746,"column":67,"offset":31145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":747,"column":5,"offset":31151},"end":{"line":747,"column":10,"offset":31156}}},{"type":"text","value":" declares variables in function scope, or global scope if not inside a function.","position":{"start":{"line":747,"column":10,"offset":31156},"end":{"line":747,"column":90,"offset":31236}}}],"position":{"start":{"line":747,"column":1,"offset":31147},"end":{"line":747,"column":90,"offset":31236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We consider ","position":{"start":{"line":748,"column":5,"offset":31242},"end":{"line":748,"column":17,"offset":31254}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":748,"column":17,"offset":31254},"end":{"line":748,"column":22,"offset":31259}}},{"type":"text","value":" to be ","position":{"start":{"line":748,"column":22,"offset":31259},"end":{"line":748,"column":29,"offset":31266}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"deprecated","position":{"start":{"line":748,"column":30,"offset":31267},"end":{"line":748,"column":40,"offset":31277}}}],"position":{"start":{"line":748,"column":29,"offset":31266},"end":{"line":748,"column":41,"offset":31278}}},{"type":"text","value":" and it is never used in this course.","position":{"start":{"line":748,"column":41,"offset":31278},"end":{"line":748,"column":78,"offset":31315}}}],"position":{"start":{"line":748,"column":1,"offset":31238},"end":{"line":748,"column":78,"offset":31315}}},{"type":"text","value":"\n"}],"position":{"start":{"line":746,"column":1,"offset":31079},"end":{"line":748,"column":78,"offset":31315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let b = 'b';\n"}],"position":{"start":{"line":750,"column":1,"offset":31319},"end":{"line":752,"column":4,"offset":31351}}}],"position":{"start":{"line":750,"column":1,"offset":31319},"end":{"line":752,"column":4,"offset":31351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":754,"column":5,"offset":31359},"end":{"line":754,"column":10,"offset":31364}}},{"type":"text","value":" is the keyword we use most often for variable declaration.","position":{"start":{"line":754,"column":10,"offset":31364},"end":{"line":754,"column":69,"offset":31423}}}],"position":{"start":{"line":754,"column":1,"offset":31355},"end":{"line":754,"column":69,"offset":31423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":755,"column":5,"offset":31429},"end":{"line":755,"column":10,"offset":31434}}},{"type":"text","value":" declares variables in block scope.","position":{"start":{"line":755,"column":10,"offset":31434},"end":{"line":755,"column":45,"offset":31469}}}],"position":{"start":{"line":755,"column":1,"offset":31425},"end":{"line":755,"column":45,"offset":31469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"variables declared with ","position":{"start":{"line":756,"column":5,"offset":31475},"end":{"line":756,"column":29,"offset":31499}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":756,"column":29,"offset":31499},"end":{"line":756,"column":34,"offset":31504}}},{"type":"text","value":" are re-assignable.","position":{"start":{"line":756,"column":34,"offset":31504},"end":{"line":756,"column":53,"offset":31523}}}],"position":{"start":{"line":756,"column":1,"offset":31471},"end":{"line":756,"column":53,"offset":31523}}},{"type":"text","value":"\n"}],"position":{"start":{"line":754,"column":1,"offset":31355},"end":{"line":756,"column":53,"offset":31523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const c = 'c';\n"}],"position":{"start":{"line":758,"column":1,"offset":31527},"end":{"line":760,"column":4,"offset":31561}}}],"position":{"start":{"line":758,"column":1,"offset":31527},"end":{"line":760,"column":4,"offset":31561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":762,"column":5,"offset":31569},"end":{"line":762,"column":12,"offset":31576}}},{"type":"text","value":" is a specialized form of ","position":{"start":{"line":762,"column":12,"offset":31576},"end":{"line":762,"column":38,"offset":31602}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":762,"column":38,"offset":31602},"end":{"line":762,"column":43,"offset":31607}}},{"type":"text","value":" that can only be used to ","position":{"start":{"line":762,"column":43,"offset":31607},"end":{"line":762,"column":69,"offset":31633}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"initialize","position":{"start":{"line":762,"column":71,"offset":31635},"end":{"line":762,"column":81,"offset":31645}}}],"position":{"start":{"line":762,"column":69,"offset":31633},"end":{"line":762,"column":83,"offset":31647}}},{"type":"text","value":" a variable.","position":{"start":{"line":762,"column":83,"offset":31647},"end":{"line":762,"column":95,"offset":31659}}}],"position":{"start":{"line":762,"column":1,"offset":31565},"end":{"line":762,"column":95,"offset":31659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Except when it is declared, you cannot assign to a ","position":{"start":{"line":763,"column":5,"offset":31665},"end":{"line":763,"column":56,"offset":31716}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":763,"column":56,"offset":31716},"end":{"line":763,"column":63,"offset":31723}}},{"type":"text","value":" variable.","position":{"start":{"line":763,"column":63,"offset":31723},"end":{"line":763,"column":73,"offset":31733}}}],"position":{"start":{"line":763,"column":1,"offset":31661},"end":{"line":763,"column":73,"offset":31733}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":764,"column":5,"offset":31739},"end":{"line":764,"column":12,"offset":31746}}},{"type":"text","value":" scopes variables the same way that ","position":{"start":{"line":764,"column":12,"offset":31746},"end":{"line":764,"column":48,"offset":31782}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":764,"column":48,"offset":31782},"end":{"line":764,"column":53,"offset":31787}}},{"type":"text","value":" does.","position":{"start":{"line":764,"column":53,"offset":31787},"end":{"line":764,"column":59,"offset":31793}}}],"position":{"start":{"line":764,"column":1,"offset":31735},"end":{"line":764,"column":59,"offset":31793}}},{"type":"text","value":"\n"}],"position":{"start":{"line":762,"column":1,"offset":31565},"end":{"line":764,"column":59,"offset":31793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":766,"column":6,"offset":31802},"end":{"line":766,"column":116,"offset":31912}}}],"position":{"start":{"line":766,"column":1,"offset":31797},"end":{"line":766,"column":116,"offset":31912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":768,"column":1,"offset":31916},"end":{"line":768,"column":15,"offset":31930}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"run"}],"position":{"start":{"line":768,"column":15,"offset":31930},"end":{"line":768,"column":20,"offset":31935}}},{"type":"text","value":" function, inside which ","position":{"start":{"line":768,"column":20,"offset":31935},"end":{"line":768,"column":44,"offset":31959}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo"}],"position":{"start":{"line":768,"column":44,"offset":31959},"end":{"line":768,"column":49,"offset":31964}}},{"type":"text","value":" and ","position":{"start":{"line":768,"column":49,"offset":31964},"end":{"line":768,"column":54,"offset":31969}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"bar"}],"position":{"start":{"line":768,"column":54,"offset":31969},"end":{"line":768,"column":59,"offset":31974}}},{"type":"text","value":" have ","position":{"start":{"line":768,"column":59,"offset":31974},"end":{"line":768,"column":65,"offset":31980}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function scope"}],"position":{"start":{"line":768,"column":65,"offset":31980},"end":{"line":768,"column":81,"offset":31996}}},{"type":"text","value":". ","position":{"start":{"line":768,"column":81,"offset":31996},"end":{"line":768,"column":83,"offset":31998}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":768,"column":83,"offset":31998},"end":{"line":768,"column":86,"offset":32001}}},{"type":"text","value":" and ","position":{"start":{"line":768,"column":86,"offset":32001},"end":{"line":768,"column":91,"offset":32006}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"baz"}],"position":{"start":{"line":768,"column":91,"offset":32006},"end":{"line":768,"column":96,"offset":32011}}},{"type":"text","value":" are scoped to the block expression.","position":{"start":{"line":768,"column":96,"offset":32011},"end":{"line":768,"column":132,"offset":32047}}}],"position":{"start":{"line":768,"column":1,"offset":31916},"end":{"line":768,"column":132,"offset":32047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();\n"}],"position":{"start":{"line":770,"column":1,"offset":32051},"end":{"line":788,"column":4,"offset":32359}}}],"position":{"start":{"line":770,"column":1,"offset":32051},"end":{"line":788,"column":4,"offset":32359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice that referencing ","position":{"start":{"line":790,"column":1,"offset":32363},"end":{"line":790,"column":25,"offset":32387}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"baz"}],"position":{"start":{"line":790,"column":25,"offset":32387},"end":{"line":790,"column":30,"offset":32392}}},{"type":"text","value":" from outside it's block results in JavaScript throwing a ReferenceError.","position":{"start":{"line":790,"column":30,"offset":32392},"end":{"line":790,"column":103,"offset":32465}}}],"position":{"start":{"line":790,"column":1,"offset":32363},"end":{"line":790,"column":103,"offset":32465}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":792,"column":1,"offset":32469},"end":{"line":792,"column":15,"offset":32483}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"run"}],"position":{"start":{"line":792,"column":15,"offset":32483},"end":{"line":792,"column":20,"offset":32488}}},{"type":"text","value":" function, inside of which ","position":{"start":{"line":792,"column":20,"offset":32488},"end":{"line":792,"column":47,"offset":32515}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo"}],"position":{"start":{"line":792,"column":47,"offset":32515},"end":{"line":792,"column":52,"offset":32520}}},{"type":"text","value":" has ","position":{"start":{"line":792,"column":52,"offset":32520},"end":{"line":792,"column":57,"offset":32525}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function scope"}],"position":{"start":{"line":792,"column":57,"offset":32525},"end":{"line":792,"column":73,"offset":32541}}},{"type":"text","value":".","position":{"start":{"line":792,"column":73,"offset":32541},"end":{"line":792,"column":74,"offset":32542}}}],"position":{"start":{"line":792,"column":1,"offset":32469},"end":{"line":792,"column":74,"offset":32542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();\n"}],"position":{"start":{"line":794,"column":1,"offset":32546},"end":{"line":802,"column":4,"offset":32683}}}],"position":{"start":{"line":794,"column":1,"offset":32546},"end":{"line":802,"column":4,"offset":32683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":804,"column":1,"offset":32687},"end":{"line":804,"column":15,"offset":32701}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"func1"}],"position":{"start":{"line":804,"column":15,"offset":32701},"end":{"line":804,"column":22,"offset":32708}}},{"type":"text","value":" function and it's nested scopes.","position":{"start":{"line":804,"column":22,"offset":32708},"end":{"line":804,"column":55,"offset":32741}}}],"position":{"start":{"line":804,"column":1,"offset":32687},"end":{"line":804,"column":55,"offset":32741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}\n"}],"position":{"start":{"line":806,"column":1,"offset":32745},"end":{"line":821,"column":4,"offset":33023}}}],"position":{"start":{"line":806,"column":1,"offset":32745},"end":{"line":821,"column":4,"offset":33023}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"6. Implement a closure and explain how the closure effects scope","position":{"start":{"line":823,"column":6,"offset":33032},"end":{"line":823,"column":70,"offset":33096}}}],"position":{"start":{"line":823,"column":1,"offset":33027},"end":{"line":823,"column":70,"offset":33096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;\n"}],"position":{"start":{"line":825,"column":1,"offset":33100},"end":{"line":835,"column":4,"offset":33294}}}],"position":{"start":{"line":825,"column":1,"offset":33100},"end":{"line":835,"column":4,"offset":33294}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"4. Define an arrow function","position":{"start":{"line":837,"column":6,"offset":33303},"end":{"line":837,"column":33,"offset":33330}}}],"position":{"start":{"line":837,"column":1,"offset":33298},"end":{"line":837,"column":33,"offset":33330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const returnValue = (val) => val;\n"}],"position":{"start":{"line":839,"column":1,"offset":33334},"end":{"line":841,"column":4,"offset":33387}}}],"position":{"start":{"line":839,"column":1,"offset":33334},"end":{"line":841,"column":4,"offset":33387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This simple construct will create a function that accepts ","position":{"start":{"line":843,"column":1,"offset":33391},"end":{"line":843,"column":59,"offset":33449}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"val"}],"position":{"start":{"line":843,"column":59,"offset":33449},"end":{"line":843,"column":64,"offset":33454}}},{"type":"text","value":" as a parameter, and returns ","position":{"start":{"line":843,"column":64,"offset":33454},"end":{"line":843,"column":93,"offset":33483}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"val"}],"position":{"start":{"line":843,"column":93,"offset":33483},"end":{"line":843,"column":98,"offset":33488}}},{"type":"text","value":" immediately. We do not need to type ","position":{"start":{"line":843,"column":98,"offset":33488},"end":{"line":843,"column":135,"offset":33525}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return val"}],"position":{"start":{"line":843,"column":135,"offset":33525},"end":{"line":843,"column":147,"offset":33537}}},{"type":"text","value":", because this is a single-line function.","position":{"start":{"line":843,"column":147,"offset":33537},"end":{"line":843,"column":188,"offset":33578}}}],"position":{"start":{"line":843,"column":1,"offset":33391},"end":{"line":843,"column":188,"offset":33578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identically, we could write","position":{"start":{"line":845,"column":1,"offset":33582},"end":{"line":845,"column":28,"offset":33609}}}],"position":{"start":{"line":845,"column":1,"offset":33582},"end":{"line":845,"column":28,"offset":33609}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const returnValue = (val) => {\n    return val;\n};\n"}],"position":{"start":{"line":847,"column":1,"offset":33613},"end":{"line":851,"column":4,"offset":33684}}}],"position":{"start":{"line":847,"column":1,"offset":33613},"end":{"line":851,"column":4,"offset":33684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"5. Given an arrow function, deduce the value of ","position":{"start":{"line":853,"column":6,"offset":33693},"end":{"line":853,"column":54,"offset":33741}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":853,"column":54,"offset":33741},"end":{"line":853,"column":60,"offset":33747}}},{"type":"text","value":" without executing the code","position":{"start":{"line":853,"column":60,"offset":33747},"end":{"line":853,"column":87,"offset":33774}}}],"position":{"start":{"line":853,"column":1,"offset":33688},"end":{"line":853,"column":87,"offset":33774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);\n"}],"position":{"start":{"line":855,"column":1,"offset":33778},"end":{"line":865,"column":4,"offset":33951}}}],"position":{"start":{"line":855,"column":1,"offset":33778},"end":{"line":865,"column":4,"offset":33951}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we use a ","position":{"start":{"line":867,"column":1,"offset":33955},"end":{"line":867,"column":13,"offset":33967}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"function declaration","position":{"start":{"line":867,"column":14,"offset":33968},"end":{"line":867,"column":34,"offset":33988}}}],"position":{"start":{"line":867,"column":13,"offset":33967},"end":{"line":867,"column":35,"offset":33989}}},{"type":"text","value":" style function, the ","position":{"start":{"line":867,"column":35,"offset":33989},"end":{"line":867,"column":56,"offset":34010}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":867,"column":56,"offset":34010},"end":{"line":867,"column":62,"offset":34016}}},{"type":"text","value":" variable is set to the ","position":{"start":{"line":867,"column":62,"offset":34016},"end":{"line":867,"column":86,"offset":34040}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global"}],"position":{"start":{"line":867,"column":86,"offset":34040},"end":{"line":867,"column":94,"offset":34048}}},{"type":"text","value":" object ","position":{"start":{"line":867,"column":94,"offset":34048},"end":{"line":867,"column":102,"offset":34056}}},{"type":"text","value":"(","position":{"start":{"line":867,"column":102,"offset":34056},"end":{"line":867,"column":104,"offset":34058}}},{"type":"text","value":"i.e. ","position":{"start":{"line":867,"column":104,"offset":34058},"end":{"line":867,"column":109,"offset":34063}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object [global]"}],"position":{"start":{"line":867,"column":109,"offset":34063},"end":{"line":867,"column":126,"offset":34080}}},{"type":"text","value":" in Node.JS and ","position":{"start":{"line":867,"column":126,"offset":34080},"end":{"line":867,"column":142,"offset":34096}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Window"}],"position":{"start":{"line":867,"column":142,"offset":34096},"end":{"line":867,"column":150,"offset":34104}}},{"type":"text","value":" in your browser","position":{"start":{"line":867,"column":150,"offset":34104},"end":{"line":867,"column":166,"offset":34120}}},{"type":"text","value":")","position":{"start":{"line":867,"column":166,"offset":34120},"end":{"line":867,"column":168,"offset":34122}}},{"type":"text","value":".","position":{"start":{"line":867,"column":168,"offset":34122},"end":{"line":867,"column":169,"offset":34123}}}],"position":{"start":{"line":867,"column":1,"offset":33955},"end":{"line":867,"column":169,"offset":34123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);\n"}],"position":{"start":{"line":869,"column":1,"offset":34127},"end":{"line":875,"column":4,"offset":34266}}}],"position":{"start":{"line":869,"column":1,"offset":34127},"end":{"line":875,"column":4,"offset":34266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this example, we use a ","position":{"start":{"line":877,"column":1,"offset":34270},"end":{"line":877,"column":27,"offset":34296}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"fat arrow","position":{"start":{"line":877,"column":28,"offset":34297},"end":{"line":877,"column":37,"offset":34306}}}],"position":{"start":{"line":877,"column":27,"offset":34296},"end":{"line":877,"column":38,"offset":34307}}},{"type":"text","value":" style function. Note that when we declare a funciton like this ","position":{"start":{"line":877,"column":38,"offset":34307},"end":{"line":877,"column":102,"offset":34371}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":877,"column":102,"offset":34371},"end":{"line":877,"column":108,"offset":34377}}},{"type":"text","value":" becomes","position":{"start":{"line":877,"column":108,"offset":34377},"end":{"line":877,"column":116,"offset":34385}}}],"position":{"start":{"line":877,"column":1,"offset":34270},"end":{"line":877,"column":116,"offset":34385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"7. Define a method that references this on an object literal","position":{"start":{"line":879,"column":6,"offset":34394},"end":{"line":879,"column":66,"offset":34454}}}],"position":{"start":{"line":879,"column":1,"offset":34389},"end":{"line":879,"column":66,"offset":34454}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());\n"}],"position":{"start":{"line":881,"column":1,"offset":34458},"end":{"line":892,"column":4,"offset":34713}}}],"position":{"start":{"line":881,"column":1,"offset":34458},"end":{"line":892,"column":4,"offset":34713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"8. Utilize the built in Function","position":{"start":{"line":894,"column":6,"offset":34722},"end":{"line":894,"column":38,"offset":34754}}},{"type":"text","value":"#","position":{"start":{"line":894,"column":38,"offset":34754},"end":{"line":894,"column":40,"offset":34756}}},{"type":"text","value":"bind on a callback to maintain the context of ","position":{"start":{"line":894,"column":40,"offset":34756},"end":{"line":894,"column":86,"offset":34802}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":894,"column":86,"offset":34802},"end":{"line":894,"column":92,"offset":34808}}}],"position":{"start":{"line":894,"column":1,"offset":34717},"end":{"line":894,"column":92,"offset":34808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms\n"}],"position":{"start":{"line":896,"column":1,"offset":34812},"end":{"line":909,"column":4,"offset":35162}}}],"position":{"start":{"line":896,"column":1,"offset":34812},"end":{"line":909,"column":4,"offset":35162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"9. Given a code snippet, identify what ","position":{"start":{"line":911,"column":6,"offset":35171},"end":{"line":911,"column":45,"offset":35210}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":911,"column":45,"offset":35210},"end":{"line":911,"column":51,"offset":35216}}},{"type":"text","value":" refers to","position":{"start":{"line":911,"column":51,"offset":35216},"end":{"line":911,"column":61,"offset":35226}}}],"position":{"start":{"line":911,"column":1,"offset":35166},"end":{"line":911,"column":61,"offset":35226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');\n"}],"position":{"start":{"line":913,"column":1,"offset":35230},"end":{"line":931,"column":4,"offset":35664}}}],"position":{"start":{"line":913,"column":1,"offset":35230},"end":{"line":931,"column":4,"offset":35664}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":932,"column":1,"offset":35666}}}}