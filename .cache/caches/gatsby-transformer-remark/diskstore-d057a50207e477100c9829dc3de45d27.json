{"expireTime":9007200882761074000,"key":"transformer-remark-markdown-ast-615e42e705506e5d1430e97efaad29b1--","val":{"type":"root","children":[{"type":"html","value":"<div id=\"search\"></div>","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":24,"offset":25},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"description: Review","position":{"start":{"line":4,"column":4,"offset":32},"end":{"line":4,"column":23,"offset":51},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":29},"end":{"line":4,"column":23,"offset":51},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Review-Of-Previous-Concepts","position":{"start":{"line":6,"column":3,"offset":57},"end":{"line":6,"column":30,"offset":84},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":55},"end":{"line":6,"column":30,"offset":84},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":8,"column":5,"offset":92},"end":{"line":8,"column":23,"offset":110},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":88},"end":{"line":8,"column":23,"offset":110},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running JS Locally Concepts","position":{"start":{"line":10,"column":5,"offset":118},"end":{"line":10,"column":32,"offset":145},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":114},"end":{"line":10,"column":32,"offset":145},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Match the commands ","position":{"start":{"line":12,"column":5,"offset":153},"end":{"line":12,"column":24,"offset":172},"indent":[]}},{"type":"inlineCode","value":"ls","position":{"start":{"line":12,"column":24,"offset":172},"end":{"line":12,"column":28,"offset":176},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":12,"column":28,"offset":176},"end":{"line":12,"column":30,"offset":178},"indent":[]}},{"type":"inlineCode","value":"cd","position":{"start":{"line":12,"column":30,"offset":178},"end":{"line":12,"column":34,"offset":182},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":12,"column":34,"offset":182},"end":{"line":12,"column":36,"offset":184},"indent":[]}},{"type":"inlineCode","value":"pwd","position":{"start":{"line":12,"column":36,"offset":184},"end":{"line":12,"column":41,"offset":189},"indent":[]}},{"type":"text","value":" to their descriptions","position":{"start":{"line":12,"column":41,"offset":189},"end":{"line":12,"column":63,"offset":211},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":153},"end":{"line":12,"column":63,"offset":211},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ls","position":{"start":{"line":13,"column":9,"offset":221},"end":{"line":13,"column":13,"offset":225},"indent":[]}},{"type":"text","value":" lists contents of current directory","position":{"start":{"line":13,"column":13,"offset":225},"end":{"line":13,"column":49,"offset":261},"indent":[]}}],"position":{"start":{"line":13,"column":9,"offset":221},"end":{"line":13,"column":49,"offset":261},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":217},"end":{"line":13,"column":49,"offset":261},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd","position":{"start":{"line":14,"column":9,"offset":271},"end":{"line":14,"column":13,"offset":275},"indent":[]}},{"type":"text","value":" changes current directory","position":{"start":{"line":14,"column":13,"offset":275},"end":{"line":14,"column":39,"offset":301},"indent":[]}}],"position":{"start":{"line":14,"column":9,"offset":271},"end":{"line":14,"column":39,"offset":301},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd ..","position":{"start":{"line":15,"column":13,"offset":315},"end":{"line":15,"column":20,"offset":322},"indent":[]}},{"type":"text","value":" takes you up one level","position":{"start":{"line":15,"column":20,"offset":322},"end":{"line":15,"column":43,"offset":345},"indent":[]}}],"position":{"start":{"line":15,"column":13,"offset":315},"end":{"line":15,"column":43,"offset":345},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":311},"end":{"line":15,"column":43,"offset":345},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd","position":{"start":{"line":16,"column":13,"offset":359},"end":{"line":16,"column":17,"offset":363},"indent":[]}},{"type":"text","value":" alone takes you back home","position":{"start":{"line":16,"column":17,"offset":363},"end":{"line":16,"column":43,"offset":389},"indent":[]}}],"position":{"start":{"line":16,"column":13,"offset":359},"end":{"line":16,"column":43,"offset":389},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":355},"end":{"line":16,"column":43,"offset":389},"indent":[]}}],"position":{"start":{"line":15,"column":9,"offset":311},"end":{"line":16,"column":43,"offset":389},"indent":[9]}}],"position":{"start":{"line":14,"column":5,"offset":267},"end":{"line":16,"column":43,"offset":389},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"pwd","position":{"start":{"line":17,"column":9,"offset":399},"end":{"line":17,"column":14,"offset":404},"indent":[]}},{"type":"text","value":" returns current directory","position":{"start":{"line":17,"column":14,"offset":404},"end":{"line":17,"column":40,"offset":430},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":399},"end":{"line":17,"column":40,"offset":430},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":395},"end":{"line":17,"column":40,"offset":430},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":217},"end":{"line":17,"column":40,"offset":430},"indent":[5,5,5,5]}}],"position":{"start":{"line":12,"column":1,"offset":149},"end":{"line":17,"column":40,"offset":430},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given a folder structure diagram, a list of 'cd ","position":{"start":{"line":18,"column":5,"offset":436},"end":{"line":18,"column":53,"offset":484},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":18,"column":53,"offset":484},"end":{"line":18,"column":55,"offset":486},"indent":[]}},{"type":"text","value":"path","position":{"start":{"line":18,"column":55,"offset":486},"end":{"line":18,"column":59,"offset":490},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":18,"column":59,"offset":490},"end":{"line":18,"column":61,"offset":492},"indent":[]}},{"type":"text","value":"' commands and target files, match the paths to the target files.","position":{"start":{"line":18,"column":61,"offset":492},"end":{"line":18,"column":126,"offset":557},"indent":[]}}],"position":{"start":{"line":18,"column":5,"offset":436},"end":{"line":18,"column":126,"offset":557},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":432},"end":{"line":18,"column":126,"offset":557},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use VSCode to create a folder. Within the folder create a .js file containing ","position":{"start":{"line":19,"column":5,"offset":563},"end":{"line":19,"column":83,"offset":641},"indent":[]}},{"type":"inlineCode","value":"console.log('hello new world');","position":{"start":{"line":19,"column":83,"offset":641},"end":{"line":19,"column":116,"offset":674},"indent":[]}},{"type":"text","value":" and save it.","position":{"start":{"line":19,"column":116,"offset":674},"end":{"line":19,"column":129,"offset":687},"indent":[]}}],"position":{"start":{"line":19,"column":5,"offset":563},"end":{"line":19,"column":129,"offset":687},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":559},"end":{"line":19,"column":129,"offset":687},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use node to execute a JavaScript file in the terminal","position":{"start":{"line":20,"column":5,"offset":693},"end":{"line":20,"column":58,"offset":746},"indent":[]}}],"position":{"start":{"line":20,"column":5,"offset":693},"end":{"line":20,"column":58,"offset":746},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":689},"end":{"line":20,"column":58,"offset":746},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":149},"end":{"line":20,"column":58,"offset":746},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Plain Old JS Object Lesson Concepts","position":{"start":{"line":22,"column":5,"offset":754},"end":{"line":22,"column":40,"offset":789},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":750},"end":{"line":22,"column":40,"offset":789},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Label variables as either Primitive vs. Reference","position":{"start":{"line":24,"column":5,"offset":797},"end":{"line":24,"column":54,"offset":846},"indent":[]}}],"position":{"start":{"line":24,"column":5,"offset":797},"end":{"line":24,"column":54,"offset":846},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitives: strings, booleans, numbers, null and undefined","position":{"start":{"line":25,"column":9,"offset":856},"end":{"line":25,"column":67,"offset":914},"indent":[]}}],"position":{"start":{"line":25,"column":9,"offset":856},"end":{"line":25,"column":67,"offset":914},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitives are immutable","position":{"start":{"line":26,"column":13,"offset":928},"end":{"line":26,"column":37,"offset":952},"indent":[]}}],"position":{"start":{"line":26,"column":13,"offset":928},"end":{"line":26,"column":37,"offset":952},"indent":[]}}],"position":{"start":{"line":26,"column":9,"offset":924},"end":{"line":26,"column":37,"offset":952},"indent":[]}}],"position":{"start":{"line":26,"column":9,"offset":924},"end":{"line":26,"column":37,"offset":952},"indent":[]}}],"position":{"start":{"line":25,"column":5,"offset":852},"end":{"line":26,"column":37,"offset":952},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"refereces: objects ","position":{"start":{"line":27,"column":9,"offset":962},"end":{"line":27,"column":28,"offset":981},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":27,"column":28,"offset":981},"end":{"line":27,"column":30,"offset":983},"indent":[]}},{"type":"text","value":"including arrays","position":{"start":{"line":27,"column":30,"offset":983},"end":{"line":27,"column":46,"offset":999},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":27,"column":46,"offset":999},"end":{"line":27,"column":48,"offset":1001},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":962},"end":{"line":27,"column":48,"offset":1001},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"references are mutable","position":{"start":{"line":28,"column":13,"offset":1015},"end":{"line":28,"column":35,"offset":1037},"indent":[]}}],"position":{"start":{"line":28,"column":13,"offset":1015},"end":{"line":28,"column":35,"offset":1037},"indent":[]}}],"position":{"start":{"line":28,"column":9,"offset":1011},"end":{"line":28,"column":35,"offset":1037},"indent":[]}}],"position":{"start":{"line":28,"column":9,"offset":1011},"end":{"line":28,"column":35,"offset":1037},"indent":[]}}],"position":{"start":{"line":27,"column":5,"offset":958},"end":{"line":28,"column":35,"offset":1037},"indent":[5]}}],"position":{"start":{"line":25,"column":5,"offset":852},"end":{"line":28,"column":35,"offset":1037},"indent":[5,5,5]}}],"position":{"start":{"line":24,"column":1,"offset":793},"end":{"line":28,"column":35,"offset":1037},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Identify when to use ","position":{"start":{"line":29,"column":5,"offset":1043},"end":{"line":29,"column":26,"offset":1064},"indent":[]}},{"type":"inlineCode","value":".","position":{"start":{"line":29,"column":26,"offset":1064},"end":{"line":29,"column":29,"offset":1067},"indent":[]}},{"type":"text","value":" vs ","position":{"start":{"line":29,"column":29,"offset":1067},"end":{"line":29,"column":33,"offset":1071},"indent":[]}},{"type":"inlineCode","value":"[]","position":{"start":{"line":29,"column":33,"offset":1071},"end":{"line":29,"column":37,"offset":1075},"indent":[]}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":29,"column":37,"offset":1075},"end":{"line":29,"column":72,"offset":1110},"indent":[]}}],"position":{"start":{"line":29,"column":5,"offset":1043},"end":{"line":29,"column":72,"offset":1110},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"dot syntax ","position":{"start":{"line":30,"column":9,"offset":1120},"end":{"line":30,"column":20,"offset":1131},"indent":[]}},{"type":"inlineCode","value":"object.key","position":{"start":{"line":30,"column":20,"offset":1131},"end":{"line":30,"column":32,"offset":1143},"indent":[]}}],"position":{"start":{"line":30,"column":9,"offset":1120},"end":{"line":30,"column":32,"offset":1143},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"easier to read","position":{"start":{"line":31,"column":13,"offset":1157},"end":{"line":31,"column":27,"offset":1171},"indent":[]}}],"position":{"start":{"line":31,"column":13,"offset":1157},"end":{"line":31,"column":27,"offset":1171},"indent":[]}}],"position":{"start":{"line":31,"column":9,"offset":1153},"end":{"line":31,"column":27,"offset":1171},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"easier to write","position":{"start":{"line":32,"column":13,"offset":1185},"end":{"line":32,"column":28,"offset":1200},"indent":[]}}],"position":{"start":{"line":32,"column":13,"offset":1185},"end":{"line":32,"column":28,"offset":1200},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1181},"end":{"line":32,"column":28,"offset":1200},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cannot use variables as keys","position":{"start":{"line":33,"column":13,"offset":1214},"end":{"line":33,"column":41,"offset":1242},"indent":[]}}],"position":{"start":{"line":33,"column":13,"offset":1214},"end":{"line":33,"column":41,"offset":1242},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":1210},"end":{"line":33,"column":41,"offset":1242},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"keys cannot begin with a number","position":{"start":{"line":34,"column":13,"offset":1256},"end":{"line":34,"column":44,"offset":1287},"indent":[]}}],"position":{"start":{"line":34,"column":13,"offset":1256},"end":{"line":34,"column":44,"offset":1287},"indent":[]}}],"position":{"start":{"line":34,"column":9,"offset":1252},"end":{"line":34,"column":44,"offset":1287},"indent":[]}}],"position":{"start":{"line":31,"column":9,"offset":1153},"end":{"line":34,"column":44,"offset":1287},"indent":[9,9,9]}}],"position":{"start":{"line":30,"column":5,"offset":1116},"end":{"line":34,"column":44,"offset":1287},"indent":[5,5,5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"bracket notation ","position":{"start":{"line":35,"column":9,"offset":1297},"end":{"line":35,"column":26,"offset":1314},"indent":[]}},{"type":"inlineCode","value":"object[\"key]","position":{"start":{"line":35,"column":26,"offset":1314},"end":{"line":35,"column":40,"offset":1328},"indent":[]}}],"position":{"start":{"line":35,"column":9,"offset":1297},"end":{"line":35,"column":40,"offset":1328},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"allows variables as keys","position":{"start":{"line":36,"column":13,"offset":1342},"end":{"line":36,"column":37,"offset":1366},"indent":[]}}],"position":{"start":{"line":36,"column":13,"offset":1342},"end":{"line":36,"column":37,"offset":1366},"indent":[]}}],"position":{"start":{"line":36,"column":9,"offset":1338},"end":{"line":36,"column":37,"offset":1366},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strings that start with numbers can be use as keys","position":{"start":{"line":37,"column":13,"offset":1380},"end":{"line":37,"column":63,"offset":1430},"indent":[]}}],"position":{"start":{"line":37,"column":13,"offset":1380},"end":{"line":37,"column":63,"offset":1430},"indent":[]}}],"position":{"start":{"line":37,"column":9,"offset":1376},"end":{"line":37,"column":63,"offset":1430},"indent":[]}}],"position":{"start":{"line":36,"column":9,"offset":1338},"end":{"line":37,"column":63,"offset":1430},"indent":[9]}}],"position":{"start":{"line":35,"column":5,"offset":1293},"end":{"line":37,"column":63,"offset":1430},"indent":[5,5]}}],"position":{"start":{"line":30,"column":5,"offset":1116},"end":{"line":37,"column":63,"offset":1430},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":29,"column":1,"offset":1039},"end":{"line":37,"column":63,"offset":1430},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write an object literal with a variable key using interpolation","position":{"start":{"line":38,"column":5,"offset":1436},"end":{"line":38,"column":68,"offset":1499},"indent":[]}}],"position":{"start":{"line":38,"column":5,"offset":1436},"end":{"line":38,"column":68,"offset":1499},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"put it in brackets to access the value of the variable, rather than just make the value that string","position":{"start":{"line":40,"column":9,"offset":1511},"end":{"line":40,"column":108,"offset":1610},"indent":[]}}],"position":{"start":{"line":40,"column":9,"offset":1511},"end":{"line":40,"column":108,"offset":1610},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };","position":{"start":{"line":42,"column":9,"offset":1622},"end":{"line":45,"column":12,"offset":1725},"indent":[9,9,9]}}],"position":{"start":{"line":40,"column":5,"offset":1507},"end":{"line":45,"column":12,"offset":1725},"indent":[1,5,5,5,5]}}],"position":{"start":{"line":40,"column":5,"offset":1507},"end":{"line":45,"column":12,"offset":1725},"indent":[1,5,5,5,5]}}],"position":{"start":{"line":38,"column":1,"offset":1432},"end":{"line":46,"column":1,"offset":1727},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":47,"column":5,"offset":1733},"end":{"line":47,"column":13,"offset":1741},"indent":[]}},{"type":"inlineCode","value":"obj[key] !== undefined","position":{"start":{"line":47,"column":13,"offset":1741},"end":{"line":47,"column":37,"offset":1765},"indent":[]}},{"type":"text","value":" pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":47,"column":37,"offset":1765},"end":{"line":47,"column":114,"offset":1842},"indent":[]}}],"position":{"start":{"line":47,"column":5,"offset":1733},"end":{"line":47,"column":114,"offset":1842},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"can also use ","position":{"start":{"line":48,"column":9,"offset":1852},"end":{"line":48,"column":22,"offset":1865},"indent":[]}},{"type":"inlineCode","value":"(key in object)","position":{"start":{"line":48,"column":22,"offset":1865},"end":{"line":48,"column":39,"offset":1882},"indent":[]}},{"type":"text","value":" syntax interchangeably ","position":{"start":{"line":48,"column":39,"offset":1882},"end":{"line":48,"column":63,"offset":1906},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":48,"column":63,"offset":1906},"end":{"line":48,"column":65,"offset":1908},"indent":[]}},{"type":"text","value":"returns a boolean","position":{"start":{"line":48,"column":65,"offset":1908},"end":{"line":48,"column":82,"offset":1925},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":48,"column":82,"offset":1925},"end":{"line":48,"column":84,"offset":1927},"indent":[]}}],"position":{"start":{"line":48,"column":9,"offset":1852},"end":{"line":48,"column":84,"offset":1927},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":1848},"end":{"line":48,"column":84,"offset":1927},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":1848},"end":{"line":48,"column":84,"offset":1927},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1729},"end":{"line":48,"column":84,"offset":1927},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Utilize Object.keys and Object.values in a function","position":{"start":{"line":49,"column":5,"offset":1933},"end":{"line":49,"column":56,"offset":1984},"indent":[]}}],"position":{"start":{"line":49,"column":5,"offset":1933},"end":{"line":49,"column":56,"offset":1984},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.keys(obj)","position":{"start":{"line":50,"column":9,"offset":1994},"end":{"line":50,"column":27,"offset":2012},"indent":[]}},{"type":"text","value":" returns an array of all the keys in ","position":{"start":{"line":50,"column":27,"offset":2012},"end":{"line":50,"column":64,"offset":2049},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":50,"column":64,"offset":2049},"end":{"line":50,"column":69,"offset":2054},"indent":[]}}],"position":{"start":{"line":50,"column":9,"offset":1994},"end":{"line":50,"column":69,"offset":2054},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":1990},"end":{"line":50,"column":69,"offset":2054},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.values(obj)","position":{"start":{"line":51,"column":9,"offset":2064},"end":{"line":51,"column":29,"offset":2084},"indent":[]}},{"type":"text","value":" returns an array of the values in ","position":{"start":{"line":51,"column":29,"offset":2084},"end":{"line":51,"column":64,"offset":2119},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":51,"column":64,"offset":2119},"end":{"line":51,"column":69,"offset":2124},"indent":[]}}],"position":{"start":{"line":51,"column":9,"offset":2064},"end":{"line":51,"column":69,"offset":2124},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":2060},"end":{"line":51,"column":69,"offset":2124},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":1990},"end":{"line":51,"column":69,"offset":2124},"indent":[5]}}],"position":{"start":{"line":49,"column":1,"offset":1929},"end":{"line":51,"column":69,"offset":2124},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Iterate through an object using a ","position":{"start":{"line":52,"column":5,"offset":2130},"end":{"line":52,"column":39,"offset":2164},"indent":[]}},{"type":"inlineCode","value":"for in","position":{"start":{"line":52,"column":39,"offset":2164},"end":{"line":52,"column":47,"offset":2172},"indent":[]}},{"type":"text","value":" loop","position":{"start":{"line":52,"column":47,"offset":2172},"end":{"line":52,"column":52,"offset":2177},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":2130},"end":{"line":52,"column":52,"offset":2177},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};","position":{"start":{"line":54,"column":5,"offset":2185},"end":{"line":61,"column":8,"offset":2366},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":52,"column":1,"offset":2126},"end":{"line":62,"column":1,"offset":2368},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a function that utilizes ","position":{"start":{"line":63,"column":5,"offset":2374},"end":{"line":63,"column":37,"offset":2406},"indent":[]}},{"type":"inlineCode","value":"...rest","position":{"start":{"line":63,"column":37,"offset":2406},"end":{"line":63,"column":46,"offset":2415},"indent":[]}},{"type":"text","value":" syntax to accept an arbitrary number of arguments","position":{"start":{"line":63,"column":46,"offset":2415},"end":{"line":63,"column":96,"offset":2465},"indent":[]}}],"position":{"start":{"line":63,"column":5,"offset":2374},"end":{"line":63,"column":96,"offset":2465},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"...rest","position":{"start":{"line":65,"column":9,"offset":2477},"end":{"line":65,"column":18,"offset":2486},"indent":[]}},{"type":"text","value":" syntax will store all additional arguments in an array","position":{"start":{"line":65,"column":18,"offset":2486},"end":{"line":65,"column":73,"offset":2541},"indent":[]}}],"position":{"start":{"line":65,"column":9,"offset":2477},"end":{"line":65,"column":73,"offset":2541},"indent":[]}}],"position":{"start":{"line":65,"column":5,"offset":2473},"end":{"line":65,"column":73,"offset":2541},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"array will be empty if there are no additional arguments","position":{"start":{"line":66,"column":9,"offset":2551},"end":{"line":66,"column":65,"offset":2607},"indent":[]}}],"position":{"start":{"line":66,"column":9,"offset":2551},"end":{"line":66,"column":65,"offset":2607},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};","position":{"start":{"line":68,"column":9,"offset":2619},"end":{"line":76,"column":12,"offset":2918},"indent":[9,9,9,9,9,9,9,9]}}],"position":{"start":{"line":66,"column":5,"offset":2547},"end":{"line":76,"column":12,"offset":2918},"indent":[1,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":65,"column":5,"offset":2473},"end":{"line":76,"column":12,"offset":2918},"indent":[5,1,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":63,"column":1,"offset":2370},"end":{"line":76,"column":12,"offset":2918},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":24,"column":1,"offset":793},"end":{"line":76,"column":12,"offset":2918},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":78,"column":1,"offset":2922},"end":{"line":78,"column":4,"offset":2925},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":80,"column":5,"offset":2933},"end":{"line":80,"column":9,"offset":2937},"indent":[]}},{"type":"inlineCode","value":"...spread","position":{"start":{"line":80,"column":9,"offset":2937},"end":{"line":80,"column":20,"offset":2948},"indent":[]}},{"type":"text","value":" syntax for Object literals and Array literals","position":{"start":{"line":80,"column":20,"offset":2948},"end":{"line":80,"column":66,"offset":2994},"indent":[]}}],"position":{"start":{"line":80,"column":5,"offset":2933},"end":{"line":80,"column":66,"offset":2994},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]","position":{"start":{"line":82,"column":5,"offset":3002},"end":{"line":87,"column":8,"offset":3263},"indent":[5,5,5,5,5]}}],"position":{"start":{"line":80,"column":1,"offset":2929},"end":{"line":88,"column":1,"offset":3265},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Destructure an array to reference specific elements","position":{"start":{"line":89,"column":5,"offset":3271},"end":{"line":89,"column":56,"offset":3322},"indent":[]}}],"position":{"start":{"line":89,"column":5,"offset":3271},"end":{"line":89,"column":56,"offset":3322},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":91,"column":5,"offset":3330},"end":{"line":91,"column":7,"offset":3332},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":91,"column":7,"offset":3332},"end":{"line":91,"column":9,"offset":3334},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":91,"column":9,"offset":3334},"end":{"line":91,"column":11,"offset":3336},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":91,"column":11,"offset":3336},"end":{"line":91,"column":21,"offset":3346},"indent":[]}}],"position":{"start":{"line":91,"column":5,"offset":3330},"end":{"line":91,"column":21,"offset":3346},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let array = ","position":{"start":{"line":93,"column":5,"offset":3354},"end":{"line":93,"column":17,"offset":3366},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":93,"column":17,"offset":3366},"end":{"line":93,"column":19,"offset":3368},"indent":[]}},{"type":"text","value":"35,9","position":{"start":{"line":93,"column":19,"offset":3368},"end":{"line":93,"column":23,"offset":3372},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":93,"column":23,"offset":3372},"end":{"line":93,"column":25,"offset":3374},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":93,"column":25,"offset":3374},"end":{"line":93,"column":26,"offset":3375},"indent":[]}}],"position":{"start":{"line":93,"column":5,"offset":3354},"end":{"line":93,"column":26,"offset":3375},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let ","position":{"start":{"line":95,"column":5,"offset":3383},"end":{"line":95,"column":9,"offset":3387},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":95,"column":9,"offset":3387},"end":{"line":95,"column":11,"offset":3389},"indent":[]}},{"type":"text","value":"firstEl, secondEl","position":{"start":{"line":95,"column":11,"offset":3389},"end":{"line":95,"column":28,"offset":3406},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":95,"column":28,"offset":3406},"end":{"line":95,"column":30,"offset":3408},"indent":[]}},{"type":"text","value":" = array;","position":{"start":{"line":95,"column":30,"offset":3408},"end":{"line":95,"column":39,"offset":3417},"indent":[]}}],"position":{"start":{"line":95,"column":5,"offset":3383},"end":{"line":95,"column":39,"offset":3417},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":97,"column":5,"offset":3425},"end":{"line":97,"column":16,"offset":3436},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":97,"column":16,"offset":3436},"end":{"line":97,"column":18,"offset":3438},"indent":[]}},{"type":"text","value":"firstEl","position":{"start":{"line":97,"column":18,"offset":3438},"end":{"line":97,"column":25,"offset":3445},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":97,"column":25,"offset":3445},"end":{"line":97,"column":27,"offset":3447},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":97,"column":27,"offset":3447},"end":{"line":97,"column":33,"offset":3453},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":97,"column":33,"offset":3453},"end":{"line":97,"column":37,"offset":3457},"indent":[]}},{"type":"text","value":" 35","position":{"start":{"line":97,"column":37,"offset":3457},"end":{"line":97,"column":40,"offset":3460},"indent":[]}}],"position":{"start":{"line":97,"column":5,"offset":3425},"end":{"line":97,"column":40,"offset":3460},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":99,"column":5,"offset":3468},"end":{"line":99,"column":16,"offset":3479},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":99,"column":16,"offset":3479},"end":{"line":99,"column":18,"offset":3481},"indent":[]}},{"type":"text","value":"secondEl","position":{"start":{"line":99,"column":18,"offset":3481},"end":{"line":99,"column":26,"offset":3489},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":99,"column":26,"offset":3489},"end":{"line":99,"column":28,"offset":3491},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":99,"column":28,"offset":3491},"end":{"line":99,"column":34,"offset":3497},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":99,"column":34,"offset":3497},"end":{"line":99,"column":38,"offset":3501},"indent":[]}},{"type":"text","value":" 9","position":{"start":{"line":99,"column":38,"offset":3501},"end":{"line":99,"column":40,"offset":3503},"indent":[]}}],"position":{"start":{"line":99,"column":5,"offset":3468},"end":{"line":99,"column":40,"offset":3503},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3267},"end":{"line":99,"column":40,"offset":3503},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":80,"column":1,"offset":2929},"end":{"line":99,"column":40,"offset":3503},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// can also destructure using ... syntax let array = ","position":{"start":{"line":101,"column":1,"offset":3507},"end":{"line":101,"column":54,"offset":3560},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":101,"column":54,"offset":3560},"end":{"line":101,"column":56,"offset":3562},"indent":[]}},{"type":"text","value":"35,9,14","position":{"start":{"line":101,"column":56,"offset":3562},"end":{"line":101,"column":63,"offset":3569},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":101,"column":63,"offset":3569},"end":{"line":101,"column":65,"offset":3571},"indent":[]}},{"type":"text","value":"; let ","position":{"start":{"line":101,"column":65,"offset":3571},"end":{"line":101,"column":71,"offset":3577},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":101,"column":71,"offset":3577},"end":{"line":101,"column":73,"offset":3579},"indent":[]}},{"type":"text","value":"head, ...tail","position":{"start":{"line":101,"column":73,"offset":3579},"end":{"line":101,"column":86,"offset":3592},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":101,"column":86,"offset":3592},"end":{"line":101,"column":88,"offset":3594},"indent":[]}},{"type":"text","value":" = array; console.log","position":{"start":{"line":101,"column":88,"offset":3594},"end":{"line":101,"column":109,"offset":3615},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":101,"column":109,"offset":3615},"end":{"line":101,"column":111,"offset":3617},"indent":[]}},{"type":"text","value":"head","position":{"start":{"line":101,"column":111,"offset":3617},"end":{"line":101,"column":115,"offset":3621},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":101,"column":115,"offset":3621},"end":{"line":101,"column":117,"offset":3623},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":117,"offset":3623},"end":{"line":101,"column":123,"offset":3629},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":101,"column":123,"offset":3629},"end":{"line":101,"column":127,"offset":3633},"indent":[]}},{"type":"text","value":" 35 console.log","position":{"start":{"line":101,"column":127,"offset":3633},"end":{"line":101,"column":142,"offset":3648},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":101,"column":142,"offset":3648},"end":{"line":101,"column":144,"offset":3650},"indent":[]}},{"type":"text","value":"tail","position":{"start":{"line":101,"column":144,"offset":3650},"end":{"line":101,"column":148,"offset":3654},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":101,"column":148,"offset":3654},"end":{"line":101,"column":150,"offset":3656},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":150,"offset":3656},"end":{"line":101,"column":156,"offset":3662},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":101,"column":156,"offset":3662},"end":{"line":101,"column":160,"offset":3666},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":101,"column":160,"offset":3666},"end":{"line":101,"column":161,"offset":3667},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":101,"column":161,"offset":3667},"end":{"line":101,"column":163,"offset":3669},"indent":[]}},{"type":"text","value":"9, 14","position":{"start":{"line":101,"column":163,"offset":3669},"end":{"line":101,"column":168,"offset":3674},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":101,"column":168,"offset":3674},"end":{"line":101,"column":170,"offset":3676},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3507},"end":{"line":101,"column":170,"offset":3676},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```javascript\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash","position":{"start":{"line":103,"column":1,"offset":3680},"end":{"line":137,"column":5,"offset":4761},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function that accepts a array as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":139,"column":5,"offset":4769},"end":{"line":139,"column":133,"offset":4897},"indent":[]}}],"position":{"start":{"line":139,"column":5,"offset":4769},"end":{"line":139,"column":133,"offset":4897},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}","position":{"start":{"line":141,"column":5,"offset":4905},"end":{"line":152,"column":8,"offset":5243},"indent":[5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":139,"column":1,"offset":4765},"end":{"line":152,"column":8,"offset":5243},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":139,"column":1,"offset":4765},"end":{"line":152,"column":8,"offset":5243},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Callbacks Lesson Concepts","position":{"start":{"line":154,"column":5,"offset":5251},"end":{"line":154,"column":30,"offset":5276},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5247},"end":{"line":154,"column":30,"offset":5276},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.","position":{"start":{"line":156,"column":5,"offset":5284},"end":{"line":156,"column":109,"offset":5388},"indent":[]}}],"position":{"start":{"line":156,"column":5,"offset":5284},"end":{"line":156,"column":109,"offset":5388},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"they can be stored in variables, passed as arguments to other functions, and serve as return value for a function","position":{"start":{"line":157,"column":9,"offset":5398},"end":{"line":157,"column":122,"offset":5511},"indent":[]}}],"position":{"start":{"line":157,"column":9,"offset":5398},"end":{"line":157,"column":122,"offset":5511},"indent":[]}}],"position":{"start":{"line":157,"column":5,"offset":5394},"end":{"line":157,"column":122,"offset":5511},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"supports same basic operations as other types ","position":{"start":{"line":158,"column":9,"offset":5521},"end":{"line":158,"column":55,"offset":5567},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":158,"column":55,"offset":5567},"end":{"line":158,"column":57,"offset":5569},"indent":[]}},{"type":"text","value":"strings, bools, numbers","position":{"start":{"line":158,"column":57,"offset":5569},"end":{"line":158,"column":80,"offset":5592},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":158,"column":80,"offset":5592},"end":{"line":158,"column":82,"offset":5594},"indent":[]}}],"position":{"start":{"line":158,"column":9,"offset":5521},"end":{"line":158,"column":82,"offset":5594},"indent":[]}}],"position":{"start":{"line":158,"column":5,"offset":5517},"end":{"line":158,"column":82,"offset":5594},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"higher-order functions take functions as arguments or return functions as values","position":{"start":{"line":159,"column":9,"offset":5604},"end":{"line":159,"column":89,"offset":5684},"indent":[]}}],"position":{"start":{"line":159,"column":9,"offset":5604},"end":{"line":159,"column":89,"offset":5684},"indent":[]}}],"position":{"start":{"line":159,"column":5,"offset":5600},"end":{"line":159,"column":89,"offset":5684},"indent":[]}}],"position":{"start":{"line":157,"column":5,"offset":5394},"end":{"line":159,"column":89,"offset":5684},"indent":[5,5]}}],"position":{"start":{"line":156,"column":1,"offset":5280},"end":{"line":159,"column":89,"offset":5684},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given a code snippet containing an anonymous callback, a named callback, and multiple ","position":{"start":{"line":160,"column":5,"offset":5690},"end":{"line":160,"column":91,"offset":5776},"indent":[]}},{"type":"inlineCode","value":"console.log","position":{"start":{"line":160,"column":91,"offset":5776},"end":{"line":160,"column":104,"offset":5789},"indent":[]}},{"type":"text","value":"s, predict what will be printed","position":{"start":{"line":160,"column":104,"offset":5789},"end":{"line":160,"column":135,"offset":5820},"indent":[]}}],"position":{"start":{"line":160,"column":5,"offset":5690},"end":{"line":160,"column":135,"offset":5820},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"what is this referring to?","position":{"start":{"line":161,"column":9,"offset":5830},"end":{"line":161,"column":35,"offset":5856},"indent":[]}}],"position":{"start":{"line":161,"column":9,"offset":5830},"end":{"line":161,"column":35,"offset":5856},"indent":[]}}],"position":{"start":{"line":161,"column":5,"offset":5826},"end":{"line":161,"column":35,"offset":5856},"indent":[]}}],"position":{"start":{"line":161,"column":5,"offset":5826},"end":{"line":161,"column":35,"offset":5856},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":5686},"end":{"line":161,"column":35,"offset":5856},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.","position":{"start":{"line":162,"column":5,"offset":5862},"end":{"line":162,"column":133,"offset":5990},"indent":[]}}],"position":{"start":{"line":162,"column":5,"offset":5862},"end":{"line":162,"column":133,"offset":5990},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5858},"end":{"line":162,"column":133,"offset":5990},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":5280},"end":{"line":162,"column":133,"offset":5990},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};","position":{"start":{"line":164,"column":1,"offset":5994},"end":{"line":178,"column":4,"offset":6356},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// shorter version let greaterCB = function","position":{"start":{"line":180,"column":1,"offset":6360},"end":{"line":180,"column":44,"offset":6403},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":180,"column":44,"offset":6403},"end":{"line":180,"column":46,"offset":6405},"indent":[]}},{"type":"text","value":"val, callback1, callback2","position":{"start":{"line":180,"column":46,"offset":6405},"end":{"line":180,"column":71,"offset":6430},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":180,"column":71,"offset":6430},"end":{"line":180,"column":73,"offset":6432},"indent":[]}},{"type":"text","value":" { return Math.max","position":{"start":{"line":180,"column":73,"offset":6432},"end":{"line":180,"column":91,"offset":6450},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":180,"column":91,"offset":6450},"end":{"line":180,"column":93,"offset":6452},"indent":[]}},{"type":"text","value":"callback1","position":{"start":{"line":180,"column":93,"offset":6452},"end":{"line":180,"column":102,"offset":6461},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":180,"column":102,"offset":6461},"end":{"line":180,"column":104,"offset":6463},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":180,"column":104,"offset":6463},"end":{"line":180,"column":107,"offset":6466},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":180,"column":107,"offset":6466},"end":{"line":180,"column":109,"offset":6468},"indent":[]}},{"type":"text","value":", callback2","position":{"start":{"line":180,"column":109,"offset":6468},"end":{"line":180,"column":120,"offset":6479},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":180,"column":120,"offset":6479},"end":{"line":180,"column":122,"offset":6481},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":180,"column":122,"offset":6481},"end":{"line":180,"column":125,"offset":6484},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":180,"column":125,"offset":6484},"end":{"line":180,"column":127,"offset":6486},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":180,"column":127,"offset":6486},"end":{"line":180,"column":129,"offset":6488},"indent":[]}},{"type":"text","value":"; } // even shorter, cause why not let greaterCB = ","position":{"start":{"line":180,"column":129,"offset":6488},"end":{"line":180,"column":180,"offset":6539},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":180,"column":180,"offset":6539},"end":{"line":180,"column":182,"offset":6541},"indent":[]}},{"type":"text","value":"val, cb1, cb2","position":{"start":{"line":180,"column":182,"offset":6541},"end":{"line":180,"column":195,"offset":6554},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":180,"column":195,"offset":6554},"end":{"line":180,"column":197,"offset":6556},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":180,"column":197,"offset":6556},"end":{"line":180,"column":199,"offset":6558},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":180,"column":199,"offset":6558},"end":{"line":180,"column":203,"offset":6562},"indent":[]}},{"type":"text","value":" Math.max","position":{"start":{"line":180,"column":203,"offset":6562},"end":{"line":180,"column":212,"offset":6571},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":180,"column":212,"offset":6571},"end":{"line":180,"column":214,"offset":6573},"indent":[]}},{"type":"text","value":"cb1","position":{"start":{"line":180,"column":214,"offset":6573},"end":{"line":180,"column":217,"offset":6576},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":180,"column":217,"offset":6576},"end":{"line":180,"column":219,"offset":6578},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":180,"column":219,"offset":6578},"end":{"line":180,"column":222,"offset":6581},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":180,"column":222,"offset":6581},"end":{"line":180,"column":224,"offset":6583},"indent":[]}},{"type":"text","value":", cb2","position":{"start":{"line":180,"column":224,"offset":6583},"end":{"line":180,"column":229,"offset":6588},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":180,"column":229,"offset":6588},"end":{"line":180,"column":231,"offset":6590},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":180,"column":231,"offset":6590},"end":{"line":180,"column":234,"offset":6593},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":180,"column":234,"offset":6593},"end":{"line":180,"column":236,"offset":6595},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":180,"column":236,"offset":6595},"end":{"line":180,"column":238,"offset":6597},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":180,"column":238,"offset":6597},"end":{"line":180,"column":239,"offset":6598},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":6360},"end":{"line":180,"column":239,"offset":6598},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```javascript\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i < array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];","position":{"start":{"line":182,"column":1,"offset":6602},"end":{"line":203,"column":5,"offset":7292},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":205,"column":5,"offset":7300},"end":{"line":205,"column":127,"offset":7422},"indent":[]}},{"type":"inlineCode","value":"Array#filter","position":{"start":{"line":205,"column":127,"offset":7422},"end":{"line":205,"column":141,"offset":7436},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":205,"column":141,"offset":7436},"end":{"line":205,"column":142,"offset":7437},"indent":[]}}],"position":{"start":{"line":205,"column":5,"offset":7300},"end":{"line":205,"column":142,"offset":7437},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i < array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};","position":{"start":{"line":207,"column":5,"offset":7445},"end":{"line":216,"column":8,"offset":7719},"indent":[5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":205,"column":1,"offset":7296},"end":{"line":217,"column":1,"offset":7721},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":218,"column":5,"offset":7727},"end":{"line":218,"column":126,"offset":7848},"indent":[]}},{"type":"inlineCode","value":"Array#every","position":{"start":{"line":218,"column":126,"offset":7848},"end":{"line":218,"column":139,"offset":7861},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":218,"column":139,"offset":7861},"end":{"line":218,"column":140,"offset":7862},"indent":[]}}],"position":{"start":{"line":218,"column":5,"offset":7727},"end":{"line":218,"column":140,"offset":7862},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let myEvery = function (array, callback) {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":220,"column":5,"offset":7870},"end":{"line":238,"column":8,"offset":8381},"indent":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":218,"column":1,"offset":7723},"end":{"line":238,"column":8,"offset":8381},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":205,"column":1,"offset":7296},"end":{"line":238,"column":8,"offset":8381},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Scope Lesson Concepts","position":{"start":{"line":240,"column":5,"offset":8389},"end":{"line":240,"column":26,"offset":8410},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":8385},"end":{"line":240,"column":26,"offset":8410},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Identify the difference between ","position":{"start":{"line":242,"column":5,"offset":8418},"end":{"line":242,"column":37,"offset":8450},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":242,"column":37,"offset":8450},"end":{"line":242,"column":44,"offset":8457},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":242,"column":44,"offset":8457},"end":{"line":242,"column":46,"offset":8459},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":242,"column":46,"offset":8459},"end":{"line":242,"column":51,"offset":8464},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":242,"column":51,"offset":8464},"end":{"line":242,"column":57,"offset":8470},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":242,"column":57,"offset":8470},"end":{"line":242,"column":62,"offset":8475},"indent":[]}},{"type":"text","value":" declarations","position":{"start":{"line":242,"column":62,"offset":8475},"end":{"line":242,"column":75,"offset":8488},"indent":[]}}],"position":{"start":{"line":242,"column":5,"offset":8418},"end":{"line":242,"column":75,"offset":8488},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":243,"column":9,"offset":8498},"end":{"line":243,"column":16,"offset":8505},"indent":[]}},{"type":"text","value":" - cannot reassign variable, scoped to block","position":{"start":{"line":243,"column":16,"offset":8505},"end":{"line":243,"column":60,"offset":8549},"indent":[]}}],"position":{"start":{"line":243,"column":9,"offset":8498},"end":{"line":243,"column":60,"offset":8549},"indent":[]}}],"position":{"start":{"line":243,"column":5,"offset":8494},"end":{"line":243,"column":60,"offset":8549},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":244,"column":9,"offset":8559},"end":{"line":244,"column":14,"offset":8564},"indent":[]}},{"type":"text","value":" - can reassign variable, scoped to block","position":{"start":{"line":244,"column":14,"offset":8564},"end":{"line":244,"column":55,"offset":8605},"indent":[]}}],"position":{"start":{"line":244,"column":9,"offset":8559},"end":{"line":244,"column":55,"offset":8605},"indent":[]}}],"position":{"start":{"line":244,"column":5,"offset":8555},"end":{"line":244,"column":55,"offset":8605},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":245,"column":9,"offset":8615},"end":{"line":245,"column":14,"offset":8620},"indent":[]}},{"type":"text","value":" - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!","position":{"start":{"line":245,"column":14,"offset":8620},"end":{"line":245,"column":125,"offset":8731},"indent":[]}}],"position":{"start":{"line":245,"column":9,"offset":8615},"end":{"line":245,"column":125,"offset":8731},"indent":[]}}],"position":{"start":{"line":245,"column":5,"offset":8611},"end":{"line":245,"column":125,"offset":8731},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"a variable will always evaluate to the value it contains regardless of how it was declared","position":{"start":{"line":246,"column":9,"offset":8741},"end":{"line":246,"column":99,"offset":8831},"indent":[]}}],"position":{"start":{"line":246,"column":9,"offset":8741},"end":{"line":246,"column":99,"offset":8831},"indent":[]}}],"position":{"start":{"line":246,"column":5,"offset":8737},"end":{"line":246,"column":99,"offset":8831},"indent":[]}}],"position":{"start":{"line":243,"column":5,"offset":8494},"end":{"line":246,"column":99,"offset":8831},"indent":[5,5,5]}}],"position":{"start":{"line":242,"column":1,"offset":8414},"end":{"line":246,"column":99,"offset":8831},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Explain the difference between ","position":{"start":{"line":247,"column":5,"offset":8837},"end":{"line":247,"column":36,"offset":8868},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":247,"column":36,"offset":8868},"end":{"line":247,"column":43,"offset":8875},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":247,"column":43,"offset":8875},"end":{"line":247,"column":45,"offset":8877},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":247,"column":45,"offset":8877},"end":{"line":247,"column":50,"offset":8882},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":247,"column":50,"offset":8882},"end":{"line":247,"column":56,"offset":8888},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":247,"column":56,"offset":8888},"end":{"line":247,"column":61,"offset":8893},"indent":[]}},{"type":"text","value":" declarations","position":{"start":{"line":247,"column":61,"offset":8893},"end":{"line":247,"column":74,"offset":8906},"indent":[]}}],"position":{"start":{"line":247,"column":5,"offset":8837},"end":{"line":247,"column":74,"offset":8906},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":248,"column":9,"offset":8916},"end":{"line":248,"column":14,"offset":8921},"indent":[]}},{"type":"text","value":" is function scoped—so if you declare it anywhere in a function, the declaration ","position":{"start":{"line":248,"column":14,"offset":8921},"end":{"line":248,"column":95,"offset":9002},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":248,"column":95,"offset":9002},"end":{"line":248,"column":97,"offset":9004},"indent":[]}},{"type":"text","value":"but not assignment","position":{"start":{"line":248,"column":97,"offset":9004},"end":{"line":248,"column":115,"offset":9022},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":248,"column":115,"offset":9022},"end":{"line":248,"column":117,"offset":9024},"indent":[]}},{"type":"text","value":" is \"hoisted\"","position":{"start":{"line":248,"column":117,"offset":9024},"end":{"line":248,"column":130,"offset":9037},"indent":[]}}],"position":{"start":{"line":248,"column":9,"offset":8916},"end":{"line":248,"column":130,"offset":9037},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so it will exist in memory as \"undefined\" which is bad and unpredictable","position":{"start":{"line":249,"column":13,"offset":9051},"end":{"line":249,"column":85,"offset":9123},"indent":[]}}],"position":{"start":{"line":249,"column":13,"offset":9051},"end":{"line":249,"column":85,"offset":9123},"indent":[]}}],"position":{"start":{"line":249,"column":9,"offset":9047},"end":{"line":249,"column":85,"offset":9123},"indent":[]}}],"position":{"start":{"line":249,"column":9,"offset":9047},"end":{"line":249,"column":85,"offset":9123},"indent":[]}}],"position":{"start":{"line":248,"column":5,"offset":8912},"end":{"line":249,"column":85,"offset":9123},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":250,"column":9,"offset":9133},"end":{"line":250,"column":14,"offset":9138},"indent":[]}},{"type":"text","value":" will also allow you to redeclare a variable, while ","position":{"start":{"line":250,"column":14,"offset":9138},"end":{"line":250,"column":66,"offset":9190},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":250,"column":66,"offset":9190},"end":{"line":250,"column":71,"offset":9195},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":250,"column":71,"offset":9195},"end":{"line":250,"column":75,"offset":9199},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":250,"column":75,"offset":9199},"end":{"line":250,"column":82,"offset":9206},"indent":[]}},{"type":"text","value":" will raise a syntax error. you shouldn't be able to do that!","position":{"start":{"line":250,"column":82,"offset":9206},"end":{"line":250,"column":143,"offset":9267},"indent":[]}}],"position":{"start":{"line":250,"column":9,"offset":9133},"end":{"line":250,"column":143,"offset":9267},"indent":[]}}],"position":{"start":{"line":250,"column":5,"offset":9129},"end":{"line":250,"column":143,"offset":9267},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":251,"column":9,"offset":9277},"end":{"line":251,"column":16,"offset":9284},"indent":[]}},{"type":"text","value":" won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object","position":{"start":{"line":251,"column":16,"offset":9284},"end":{"line":251,"column":155,"offset":9423},"indent":[]}}],"position":{"start":{"line":251,"column":9,"offset":9277},"end":{"line":251,"column":155,"offset":9423},"indent":[]}}],"position":{"start":{"line":251,"column":5,"offset":9273},"end":{"line":251,"column":155,"offset":9423},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"block-scoped variables allow new variables with the same name in new scopes","position":{"start":{"line":252,"column":9,"offset":9433},"end":{"line":252,"column":84,"offset":9508},"indent":[]}}],"position":{"start":{"line":252,"column":9,"offset":9433},"end":{"line":252,"column":84,"offset":9508},"indent":[]}}],"position":{"start":{"line":252,"column":5,"offset":9429},"end":{"line":252,"column":84,"offset":9508},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of ","position":{"start":{"line":253,"column":9,"offset":9518},"end":{"line":253,"column":123,"offset":9632},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":253,"column":123,"offset":9632},"end":{"line":253,"column":134,"offset":9643},"indent":[]}},{"type":"text","value":" like ","position":{"start":{"line":253,"column":134,"offset":9643},"end":{"line":253,"column":140,"offset":9649},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":253,"column":140,"offset":9649},"end":{"line":253,"column":145,"offset":9654},"indent":[]}},{"type":"text","value":" does, so it throws a specific reference error if you try to access the value before it has been declared","position":{"start":{"line":253,"column":145,"offset":9654},"end":{"line":253,"column":250,"offset":9759},"indent":[]}}],"position":{"start":{"line":253,"column":9,"offset":9518},"end":{"line":253,"column":250,"offset":9759},"indent":[]}}],"position":{"start":{"line":253,"column":5,"offset":9514},"end":{"line":253,"column":250,"offset":9759},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you do not use ","position":{"start":{"line":254,"column":9,"offset":9769},"end":{"line":254,"column":27,"offset":9787},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":254,"column":27,"offset":9787},"end":{"line":254,"column":32,"offset":9792},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":32,"offset":9792},"end":{"line":254,"column":36,"offset":9796},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":254,"column":36,"offset":9796},"end":{"line":254,"column":41,"offset":9801},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":41,"offset":9801},"end":{"line":254,"column":45,"offset":9805},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":254,"column":45,"offset":9805},"end":{"line":254,"column":52,"offset":9812},"indent":[]}},{"type":"text","value":" when initializing, it will be declared as global—THIS IS BAD","position":{"start":{"line":254,"column":52,"offset":9812},"end":{"line":254,"column":113,"offset":9873},"indent":[]}}],"position":{"start":{"line":254,"column":9,"offset":9769},"end":{"line":254,"column":113,"offset":9873},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you assign a value without a declaration, it exists in the global scope ","position":{"start":{"line":255,"column":13,"offset":9887},"end":{"line":255,"column":88,"offset":9962},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":255,"column":88,"offset":9962},"end":{"line":255,"column":90,"offset":9964},"indent":[]}},{"type":"text","value":"so then it would be accessible by all outer scopes, so bad","position":{"start":{"line":255,"column":90,"offset":9964},"end":{"line":255,"column":148,"offset":10022},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":255,"column":148,"offset":10022},"end":{"line":255,"column":150,"offset":10024},"indent":[]}},{"type":"text","value":". however, there's no hoisting, so it doesn't exist in the scope until after the line is run","position":{"start":{"line":255,"column":150,"offset":10024},"end":{"line":255,"column":242,"offset":10116},"indent":[]}}],"position":{"start":{"line":255,"column":13,"offset":9887},"end":{"line":255,"column":242,"offset":10116},"indent":[]}}],"position":{"start":{"line":255,"column":9,"offset":9883},"end":{"line":255,"column":242,"offset":10116},"indent":[]}}],"position":{"start":{"line":255,"column":9,"offset":9883},"end":{"line":255,"column":242,"offset":10116},"indent":[]}}],"position":{"start":{"line":254,"column":5,"offset":9765},"end":{"line":255,"column":242,"offset":10116},"indent":[5]}}],"position":{"start":{"line":248,"column":5,"offset":8912},"end":{"line":255,"column":242,"offset":10116},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":247,"column":1,"offset":8833},"end":{"line":255,"column":242,"offset":10116},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":256,"column":5,"offset":10122},"end":{"line":256,"column":112,"offset":10229},"indent":[]}}],"position":{"start":{"line":256,"column":5,"offset":10122},"end":{"line":256,"column":112,"offset":10229},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"scope of a program means the set of variables that are available for use within the program","position":{"start":{"line":257,"column":9,"offset":10239},"end":{"line":257,"column":100,"offset":10330},"indent":[]}}],"position":{"start":{"line":257,"column":9,"offset":10239},"end":{"line":257,"column":100,"offset":10330},"indent":[]}}],"position":{"start":{"line":257,"column":5,"offset":10235},"end":{"line":257,"column":100,"offset":10330},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"global scope is represented by the ","position":{"start":{"line":258,"column":9,"offset":10340},"end":{"line":258,"column":44,"offset":10375},"indent":[]}},{"type":"inlineCode","value":"window","position":{"start":{"line":258,"column":44,"offset":10375},"end":{"line":258,"column":52,"offset":10383},"indent":[]}},{"type":"text","value":" object in the browser and the ","position":{"start":{"line":258,"column":52,"offset":10383},"end":{"line":258,"column":83,"offset":10414},"indent":[]}},{"type":"inlineCode","value":"global","position":{"start":{"line":258,"column":83,"offset":10414},"end":{"line":258,"column":91,"offset":10422},"indent":[]}},{"type":"text","value":" object in Node.js","position":{"start":{"line":258,"column":91,"offset":10422},"end":{"line":258,"column":109,"offset":10440},"indent":[]}}],"position":{"start":{"line":258,"column":9,"offset":10340},"end":{"line":258,"column":109,"offset":10440},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"global variables are available everywhere, and so increase the risk of name collisions","position":{"start":{"line":259,"column":13,"offset":10454},"end":{"line":259,"column":99,"offset":10540},"indent":[]}}],"position":{"start":{"line":259,"column":13,"offset":10454},"end":{"line":259,"column":99,"offset":10540},"indent":[]}}],"position":{"start":{"line":259,"column":9,"offset":10450},"end":{"line":259,"column":99,"offset":10540},"indent":[]}}],"position":{"start":{"line":259,"column":9,"offset":10450},"end":{"line":259,"column":99,"offset":10540},"indent":[]}}],"position":{"start":{"line":258,"column":5,"offset":10336},"end":{"line":259,"column":99,"offset":10540},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"local scope is the set of variables available for use within the function","position":{"start":{"line":260,"column":9,"offset":10550},"end":{"line":260,"column":82,"offset":10623},"indent":[]}}],"position":{"start":{"line":260,"column":9,"offset":10550},"end":{"line":260,"column":82,"offset":10623},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we enter a function, we enter a new scope","position":{"start":{"line":261,"column":13,"offset":10637},"end":{"line":261,"column":59,"offset":10683},"indent":[]}}],"position":{"start":{"line":261,"column":13,"offset":10637},"end":{"line":261,"column":59,"offset":10683},"indent":[]}}],"position":{"start":{"line":261,"column":9,"offset":10633},"end":{"line":261,"column":59,"offset":10683},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined ","position":{"start":{"line":262,"column":13,"offset":10697},"end":{"line":262,"column":159,"offset":10843},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":262,"column":159,"offset":10843},"end":{"line":262,"column":161,"offset":10845},"indent":[]}},{"type":"text","value":"hmm about that last one","position":{"start":{"line":262,"column":161,"offset":10845},"end":{"line":262,"column":184,"offset":10868},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":262,"column":184,"offset":10868},"end":{"line":262,"column":186,"offset":10870},"indent":[]}}],"position":{"start":{"line":262,"column":13,"offset":10697},"end":{"line":262,"column":186,"offset":10870},"indent":[]}}],"position":{"start":{"line":262,"column":9,"offset":10693},"end":{"line":262,"column":186,"offset":10870},"indent":[]}}],"position":{"start":{"line":261,"column":9,"offset":10633},"end":{"line":262,"column":186,"offset":10870},"indent":[9]}}],"position":{"start":{"line":260,"column":5,"offset":10546},"end":{"line":262,"column":186,"offset":10870},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"for blocks ","position":{"start":{"line":263,"column":9,"offset":10880},"end":{"line":263,"column":20,"offset":10891},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":263,"column":20,"offset":10891},"end":{"line":263,"column":22,"offset":10893},"indent":[]}},{"type":"text","value":"denoted by curly braces ","position":{"start":{"line":263,"column":22,"offset":10893},"end":{"line":263,"column":46,"offset":10917},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":263,"column":46,"offset":10917},"end":{"line":263,"column":50,"offset":10921},"indent":[]}},{"type":"text","value":", as in conditionals or ","position":{"start":{"line":263,"column":50,"offset":10921},"end":{"line":263,"column":74,"offset":10945},"indent":[]}},{"type":"inlineCode","value":"for","position":{"start":{"line":263,"column":74,"offset":10945},"end":{"line":263,"column":79,"offset":10950},"indent":[]}},{"type":"text","value":" loops","position":{"start":{"line":263,"column":79,"offset":10950},"end":{"line":263,"column":85,"offset":10956},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":263,"column":85,"offset":10956},"end":{"line":263,"column":87,"offset":10958},"indent":[]}},{"type":"text","value":", variables can be block scoped","position":{"start":{"line":263,"column":87,"offset":10958},"end":{"line":263,"column":118,"offset":10989},"indent":[]}}],"position":{"start":{"line":263,"column":9,"offset":10880},"end":{"line":263,"column":118,"offset":10989},"indent":[]}}],"position":{"start":{"line":263,"column":5,"offset":10876},"end":{"line":263,"column":118,"offset":10989},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"inner scope does not have access to variables in the outer scope","position":{"start":{"line":264,"column":9,"offset":10999},"end":{"line":264,"column":73,"offset":11063},"indent":[]}}],"position":{"start":{"line":264,"column":9,"offset":10999},"end":{"line":264,"column":73,"offset":11063},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found","position":{"start":{"line":265,"column":13,"offset":11077},"end":{"line":265,"column":155,"offset":11219},"indent":[]}}],"position":{"start":{"line":265,"column":13,"offset":11077},"end":{"line":265,"column":155,"offset":11219},"indent":[]}}],"position":{"start":{"line":265,"column":9,"offset":11073},"end":{"line":265,"column":155,"offset":11219},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so an inner scope can access outer scope variables","position":{"start":{"line":266,"column":13,"offset":11233},"end":{"line":266,"column":63,"offset":11283},"indent":[]}}],"position":{"start":{"line":266,"column":13,"offset":11233},"end":{"line":266,"column":63,"offset":11283},"indent":[]}}],"position":{"start":{"line":266,"column":9,"offset":11229},"end":{"line":266,"column":63,"offset":11283},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"but an outer scope can never access inner scope variables","position":{"start":{"line":267,"column":13,"offset":11297},"end":{"line":267,"column":70,"offset":11354},"indent":[]}}],"position":{"start":{"line":267,"column":13,"offset":11297},"end":{"line":267,"column":70,"offset":11354},"indent":[]}}],"position":{"start":{"line":267,"column":9,"offset":11293},"end":{"line":267,"column":70,"offset":11354},"indent":[]}}],"position":{"start":{"line":265,"column":9,"offset":11073},"end":{"line":267,"column":70,"offset":11354},"indent":[9,9]}}],"position":{"start":{"line":264,"column":5,"offset":10995},"end":{"line":267,"column":70,"offset":11354},"indent":[5,5,5]}}],"position":{"start":{"line":257,"column":5,"offset":10235},"end":{"line":267,"column":70,"offset":11354},"indent":[5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":256,"column":1,"offset":10118},"end":{"line":267,"column":70,"offset":11354},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define an arrow function","position":{"start":{"line":268,"column":5,"offset":11360},"end":{"line":268,"column":29,"offset":11384},"indent":[]}}],"position":{"start":{"line":268,"column":5,"offset":11360},"end":{"line":268,"column":29,"offset":11384},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":270,"column":5,"offset":11392},"end":{"line":270,"column":7,"offset":11394},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":270,"column":7,"offset":11394},"end":{"line":270,"column":9,"offset":11396},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":270,"column":9,"offset":11396},"end":{"line":270,"column":11,"offset":11398},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":270,"column":11,"offset":11398},"end":{"line":270,"column":21,"offset":11408},"indent":[]}}],"position":{"start":{"line":270,"column":5,"offset":11392},"end":{"line":270,"column":21,"offset":11408},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let arrowFunction = ","position":{"start":{"line":272,"column":5,"offset":11416},"end":{"line":272,"column":25,"offset":11436},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":272,"column":25,"offset":11436},"end":{"line":272,"column":27,"offset":11438},"indent":[]}},{"type":"text","value":"param1, param2","position":{"start":{"line":272,"column":27,"offset":11438},"end":{"line":272,"column":41,"offset":11452},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":272,"column":41,"offset":11452},"end":{"line":272,"column":43,"offset":11454},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":272,"column":43,"offset":11454},"end":{"line":272,"column":45,"offset":11456},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":272,"column":45,"offset":11456},"end":{"line":272,"column":49,"offset":11460},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":272,"column":49,"offset":11460},"end":{"line":272,"column":51,"offset":11462},"indent":[]}}],"position":{"start":{"line":272,"column":5,"offset":11416},"end":{"line":272,"column":51,"offset":11462},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let sum = param1 + param2;","position":{"start":{"line":274,"column":5,"offset":11470},"end":{"line":274,"column":31,"offset":11496},"indent":[]}}],"position":{"start":{"line":274,"column":5,"offset":11470},"end":{"line":274,"column":31,"offset":11496},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"return sum;","position":{"start":{"line":276,"column":5,"offset":11504},"end":{"line":276,"column":16,"offset":11515},"indent":[]}}],"position":{"start":{"line":276,"column":5,"offset":11504},"end":{"line":276,"column":16,"offset":11515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":278,"column":5,"offset":11523},"end":{"line":278,"column":6,"offset":11524},"indent":[]}}],"position":{"start":{"line":278,"column":5,"offset":11523},"end":{"line":278,"column":6,"offset":11524},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":11356},"end":{"line":278,"column":6,"offset":11524},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":242,"column":1,"offset":8414},"end":{"line":278,"column":6,"offset":11524},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// with 1 param you can remove parens around parameters let arrowFunction = param =","position":{"start":{"line":280,"column":1,"offset":11528},"end":{"line":280,"column":84,"offset":11611},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":280,"column":84,"offset":11611},"end":{"line":280,"column":88,"offset":11615},"indent":[]}},{"type":"text","value":" { param += 1; return param; }","position":{"start":{"line":280,"column":88,"offset":11615},"end":{"line":280,"column":118,"offset":11645},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":11528},"end":{"line":280,"column":118,"offset":11645},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// if your return statement is one line, you can use implied return let arrowFunction = param =","position":{"start":{"line":282,"column":1,"offset":11649},"end":{"line":282,"column":96,"offset":11744},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":282,"column":96,"offset":11744},"end":{"line":282,"column":100,"offset":11748},"indent":[]}},{"type":"text","value":" param + 1;","position":{"start":{"line":282,"column":100,"offset":11748},"end":{"line":282,"column":111,"offset":11759},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":11649},"end":{"line":282,"column":111,"offset":11759},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// you don't have to assign to variable, can be anonymous // if you never need to use it again param =","position":{"start":{"line":284,"column":1,"offset":11763},"end":{"line":284,"column":103,"offset":11865},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":284,"column":103,"offset":11865},"end":{"line":284,"column":107,"offset":11869},"indent":[]}},{"type":"text","value":" param + 1;","position":{"start":{"line":284,"column":107,"offset":11869},"end":{"line":284,"column":118,"offset":11880},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":11763},"end":{"line":284,"column":118,"offset":11880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":286,"column":1,"offset":11884},"end":{"line":286,"column":3,"offset":11886},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":286,"column":3,"offset":11886},"end":{"line":286,"column":5,"offset":11888},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":286,"column":5,"offset":11888},"end":{"line":286,"column":7,"offset":11890},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":11884},"end":{"line":286,"column":7,"offset":11890},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given an arrow function, deduce the value of ","position":{"start":{"line":288,"column":5,"offset":11898},"end":{"line":288,"column":50,"offset":11943},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":288,"column":50,"offset":11943},"end":{"line":288,"column":56,"offset":11949},"indent":[]}},{"type":"text","value":" without executing the code","position":{"start":{"line":288,"column":56,"offset":11949},"end":{"line":288,"column":83,"offset":11976},"indent":[]}}],"position":{"start":{"line":288,"column":5,"offset":11898},"end":{"line":288,"column":83,"offset":11976},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"arrow functions are automatically bound to the context they were declared in","position":{"start":{"line":290,"column":9,"offset":11988},"end":{"line":290,"column":85,"offset":12064},"indent":[]}}],"position":{"start":{"line":290,"column":9,"offset":11988},"end":{"line":290,"column":85,"offset":12064},"indent":[]}}],"position":{"start":{"line":290,"column":5,"offset":11984},"end":{"line":290,"column":85,"offset":12064},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"unlike regular function which use the context they are invoked in ","position":{"start":{"line":291,"column":9,"offset":12074},"end":{"line":291,"column":75,"offset":12140},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":291,"column":75,"offset":12140},"end":{"line":291,"column":77,"offset":12142},"indent":[]}},{"type":"text","value":"unless they have been bound using ","position":{"start":{"line":291,"column":77,"offset":12142},"end":{"line":291,"column":111,"offset":12176},"indent":[]}},{"type":"inlineCode","value":"Function#bind","position":{"start":{"line":291,"column":111,"offset":12176},"end":{"line":291,"column":126,"offset":12191},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":291,"column":126,"offset":12191},"end":{"line":291,"column":128,"offset":12193},"indent":[]}}],"position":{"start":{"line":291,"column":9,"offset":12074},"end":{"line":291,"column":128,"offset":12193},"indent":[]}}],"position":{"start":{"line":291,"column":5,"offset":12070},"end":{"line":291,"column":128,"offset":12193},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context","position":{"start":{"line":292,"column":9,"offset":12203},"end":{"line":292,"column":149,"offset":12343},"indent":[]}}],"position":{"start":{"line":292,"column":9,"offset":12203},"end":{"line":292,"column":149,"offset":12343},"indent":[]}}],"position":{"start":{"line":292,"column":5,"offset":12199},"end":{"line":292,"column":149,"offset":12343},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so you can't use an arrow function to define a method directly","position":{"start":{"line":293,"column":9,"offset":12353},"end":{"line":293,"column":71,"offset":12415},"indent":[]}}],"position":{"start":{"line":293,"column":9,"offset":12353},"end":{"line":293,"column":71,"offset":12415},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":295,"column":9,"offset":12427},"end":{"line":295,"column":11,"offset":12429},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":295,"column":11,"offset":12429},"end":{"line":295,"column":13,"offset":12431},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":295,"column":13,"offset":12431},"end":{"line":295,"column":15,"offset":12433},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":295,"column":15,"offset":12433},"end":{"line":295,"column":25,"offset":12443},"indent":[]}}],"position":{"start":{"line":295,"column":9,"offset":12427},"end":{"line":295,"column":25,"offset":12443},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let obj = {","position":{"start":{"line":297,"column":9,"offset":12455},"end":{"line":297,"column":20,"offset":12466},"indent":[]}}],"position":{"start":{"line":297,"column":9,"offset":12455},"end":{"line":297,"column":20,"offset":12466},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"name: \"my object\",","position":{"start":{"line":299,"column":9,"offset":12478},"end":{"line":299,"column":27,"offset":12496},"indent":[]}}],"position":{"start":{"line":299,"column":9,"offset":12478},"end":{"line":299,"column":27,"offset":12496},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"unboundFunc: function ","position":{"start":{"line":301,"column":9,"offset":12508},"end":{"line":301,"column":31,"offset":12530},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":301,"column":31,"offset":12530},"end":{"line":301,"column":33,"offset":12532},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":301,"column":33,"offset":12532},"end":{"line":301,"column":35,"offset":12534},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":301,"column":35,"offset":12534},"end":{"line":301,"column":37,"offset":12536},"indent":[]}}],"position":{"start":{"line":301,"column":9,"offset":12508},"end":{"line":301,"column":37,"offset":12536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"return this.name;","position":{"start":{"line":303,"column":9,"offset":12548},"end":{"line":303,"column":26,"offset":12565},"indent":[]}}],"position":{"start":{"line":303,"column":9,"offset":12548},"end":{"line":303,"column":26,"offset":12565},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// this function will be able to be called on different objects","position":{"start":{"line":305,"column":9,"offset":12577},"end":{"line":305,"column":72,"offset":12640},"indent":[]}}],"position":{"start":{"line":305,"column":9,"offset":12577},"end":{"line":305,"column":72,"offset":12640},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":307,"column":9,"offset":12652},"end":{"line":307,"column":11,"offset":12654},"indent":[]}}],"position":{"start":{"line":307,"column":9,"offset":12652},"end":{"line":307,"column":11,"offset":12654},"indent":[]}}],"position":{"start":{"line":293,"column":5,"offset":12349},"end":{"line":307,"column":11,"offset":12654},"indent":[1,5,1,5,1,5,1,5,1,5,1,5,1,5]}}],"position":{"start":{"line":290,"column":5,"offset":11984},"end":{"line":307,"column":11,"offset":12654},"indent":[5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5]}}],"position":{"start":{"line":288,"column":1,"offset":11894},"end":{"line":307,"column":11,"offset":12654},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":288,"column":1,"offset":11894},"end":{"line":307,"column":11,"offset":12654},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":309,"column":1,"offset":12658},"end":{"line":309,"column":4,"offset":12661},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"boundToGlobal: ","position":{"start":{"line":311,"column":1,"offset":12665},"end":{"line":311,"column":16,"offset":12680},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":311,"column":16,"offset":12680},"end":{"line":311,"column":18,"offset":12682},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":311,"column":18,"offset":12682},"end":{"line":311,"column":20,"offset":12684},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":311,"column":20,"offset":12684},"end":{"line":311,"column":22,"offset":12686},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":311,"column":22,"offset":12686},"end":{"line":311,"column":26,"offset":12690},"indent":[]}},{"type":"text","value":" { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },","position":{"start":{"line":311,"column":26,"offset":12690},"end":{"line":311,"column":212,"offset":12876},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":12665},"end":{"line":311,"column":212,"offset":12876},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined","position":{"start":{"line":313,"column":1,"offset":12880},"end":{"line":353,"column":4,"offset":16042},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":355,"column":1,"offset":16046},"end":{"line":355,"column":2,"offset":16047},"indent":[]}}],"position":{"start":{"line":355,"column":1,"offset":16046},"end":{"line":355,"column":2,"offset":16047},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n\n```javascript\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());","position":{"start":{"line":357,"column":1,"offset":16051},"end":{"line":419,"column":5,"offset":19077},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a method that references ","position":{"start":{"line":421,"column":5,"offset":19085},"end":{"line":421,"column":37,"offset":19117},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":421,"column":37,"offset":19117},"end":{"line":421,"column":43,"offset":19123},"indent":[]}},{"type":"text","value":" on an object literal","position":{"start":{"line":421,"column":43,"offset":19123},"end":{"line":421,"column":64,"offset":19144},"indent":[]}}],"position":{"start":{"line":421,"column":5,"offset":19085},"end":{"line":421,"column":64,"offset":19144},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we use ","position":{"start":{"line":422,"column":9,"offset":19154},"end":{"line":422,"column":21,"offset":19166},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":422,"column":21,"offset":19166},"end":{"line":422,"column":27,"offset":19172},"indent":[]}},{"type":"text","value":" in a method it refers to the object that the method is invoked on","position":{"start":{"line":422,"column":27,"offset":19172},"end":{"line":422,"column":93,"offset":19238},"indent":[]}}],"position":{"start":{"line":422,"column":9,"offset":19154},"end":{"line":422,"column":93,"offset":19238},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"it will let you access other pieces of information from within that object, or even other methods","position":{"start":{"line":423,"column":13,"offset":19252},"end":{"line":423,"column":110,"offset":19349},"indent":[]}}],"position":{"start":{"line":423,"column":13,"offset":19252},"end":{"line":423,"column":110,"offset":19349},"indent":[]}}],"position":{"start":{"line":423,"column":9,"offset":19248},"end":{"line":423,"column":110,"offset":19349},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"method style invocation - ","position":{"start":{"line":424,"column":13,"offset":19363},"end":{"line":424,"column":39,"offset":19389},"indent":[]}},{"type":"inlineCode","value":"object.method(args)","position":{"start":{"line":424,"column":39,"offset":19389},"end":{"line":424,"column":60,"offset":19410},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":424,"column":60,"offset":19410},"end":{"line":424,"column":61,"offset":19411},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":424,"column":61,"offset":19411},"end":{"line":424,"column":63,"offset":19413},"indent":[]}},{"type":"text","value":"e.g. built in examples like ","position":{"start":{"line":424,"column":63,"offset":19413},"end":{"line":424,"column":91,"offset":19441},"indent":[]}},{"type":"inlineCode","value":"Array#push","position":{"start":{"line":424,"column":91,"offset":19441},"end":{"line":424,"column":103,"offset":19453},"indent":[]}},{"type":"text","value":", or ","position":{"start":{"line":424,"column":103,"offset":19453},"end":{"line":424,"column":108,"offset":19458},"indent":[]}},{"type":"inlineCode","value":"String#toUpperCase","position":{"start":{"line":424,"column":108,"offset":19458},"end":{"line":424,"column":128,"offset":19478},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":424,"column":128,"offset":19478},"end":{"line":424,"column":130,"offset":19480},"indent":[]}}],"position":{"start":{"line":424,"column":13,"offset":19363},"end":{"line":424,"column":130,"offset":19480},"indent":[]}}],"position":{"start":{"line":424,"column":9,"offset":19359},"end":{"line":424,"column":130,"offset":19480},"indent":[]}}],"position":{"start":{"line":423,"column":9,"offset":19248},"end":{"line":424,"column":130,"offset":19480},"indent":[9]}}],"position":{"start":{"line":422,"column":5,"offset":19150},"end":{"line":424,"column":130,"offset":19480},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"context is set every time we invoke a function","position":{"start":{"line":425,"column":9,"offset":19490},"end":{"line":425,"column":55,"offset":19536},"indent":[]}}],"position":{"start":{"line":425,"column":9,"offset":19490},"end":{"line":425,"column":55,"offset":19536},"indent":[]}}],"position":{"start":{"line":425,"column":5,"offset":19486},"end":{"line":425,"column":55,"offset":19536},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"function style invocation sets the context to the global object no matter what","position":{"start":{"line":426,"column":9,"offset":19546},"end":{"line":426,"column":87,"offset":19624},"indent":[]}}],"position":{"start":{"line":426,"column":9,"offset":19546},"end":{"line":426,"column":87,"offset":19624},"indent":[]}}],"position":{"start":{"line":426,"column":5,"offset":19542},"end":{"line":426,"column":87,"offset":19624},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"being inside an object does not make the context that object! you still have to use method-style invocation","position":{"start":{"line":427,"column":9,"offset":19634},"end":{"line":427,"column":116,"offset":19741},"indent":[]}}],"position":{"start":{"line":427,"column":9,"offset":19634},"end":{"line":427,"column":116,"offset":19741},"indent":[]}}],"position":{"start":{"line":427,"column":5,"offset":19630},"end":{"line":427,"column":116,"offset":19741},"indent":[]}}],"position":{"start":{"line":422,"column":5,"offset":19150},"end":{"line":427,"column":116,"offset":19741},"indent":[5,5,5,5,5]}}],"position":{"start":{"line":421,"column":1,"offset":19081},"end":{"line":427,"column":116,"offset":19741},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Utilize the built in ","position":{"start":{"line":428,"column":5,"offset":19747},"end":{"line":428,"column":26,"offset":19768},"indent":[]}},{"type":"inlineCode","value":"Function#bind","position":{"start":{"line":428,"column":26,"offset":19768},"end":{"line":428,"column":41,"offset":19783},"indent":[]}},{"type":"text","value":" on a callback to maintain the context of this","position":{"start":{"line":428,"column":41,"offset":19783},"end":{"line":428,"column":87,"offset":19829},"indent":[]}}],"position":{"start":{"line":428,"column":5,"offset":19747},"end":{"line":428,"column":87,"offset":19829},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function","position":{"start":{"line":430,"column":9,"offset":19841},"end":{"line":430,"column":133,"offset":19965},"indent":[]}}],"position":{"start":{"line":430,"column":9,"offset":19841},"end":{"line":430,"column":133,"offset":19965},"indent":[]}}],"position":{"start":{"line":430,"column":5,"offset":19837},"end":{"line":430,"column":133,"offset":19965},"indent":[]}}],"position":{"start":{"line":430,"column":5,"offset":19837},"end":{"line":430,"column":133,"offset":19965},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"","position":{"start":{"line":432,"column":5,"offset":19973},"end":{"line":446,"column":8,"offset":20399},"indent":[5,5,5,5,5,5,5,5,5,1,1,5,5,5]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":448,"column":5,"offset":20407},"end":{"line":448,"column":7,"offset":20409},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":448,"column":7,"offset":20409},"end":{"line":448,"column":9,"offset":20411},"indent":[]}}],"position":{"start":{"line":448,"column":5,"offset":20407},"end":{"line":448,"column":9,"offset":20411},"indent":[]}}],"position":{"start":{"line":428,"column":1,"offset":19743},"end":{"line":448,"column":9,"offset":20411},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":421,"column":1,"offset":19081},"end":{"line":448,"column":9,"offset":20411},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":450,"column":1,"offset":20415},"end":{"line":450,"column":4,"offset":20418},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":452,"column":1,"offset":20422},"end":{"line":452,"column":4,"offset":20425},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}","position":{"start":{"line":454,"column":1,"offset":20429},"end":{"line":481,"column":5,"offset":22414},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":483,"column":5,"offset":22422},"end":{"line":483,"column":60,"offset":22477},"indent":[]}}],"position":{"start":{"line":483,"column":5,"offset":22422},"end":{"line":483,"column":60,"offset":22477},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":484,"column":9,"offset":22487},"end":{"line":484,"column":105,"offset":22583},"indent":[]}}],"position":{"start":{"line":484,"column":9,"offset":22487},"end":{"line":484,"column":105,"offset":22583},"indent":[]}}],"position":{"start":{"line":484,"column":5,"offset":22483},"end":{"line":484,"column":105,"offset":22583},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":485,"column":9,"offset":22593},"end":{"line":485,"column":105,"offset":22689},"indent":[]}}],"position":{"start":{"line":485,"column":9,"offset":22593},"end":{"line":485,"column":105,"offset":22689},"indent":[]}}],"position":{"start":{"line":485,"column":5,"offset":22589},"end":{"line":485,"column":105,"offset":22689},"indent":[]}}],"position":{"start":{"line":484,"column":5,"offset":22483},"end":{"line":485,"column":105,"offset":22689},"indent":[5]}}],"position":{"start":{"line":483,"column":1,"offset":22418},"end":{"line":485,"column":105,"offset":22689},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":486,"column":5,"offset":22695},"end":{"line":486,"column":55,"offset":22745},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":486,"column":55,"offset":22745},"end":{"line":486,"column":61,"offset":22751},"indent":[]}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":486,"column":61,"offset":22751},"end":{"line":486,"column":183,"offset":22873},"indent":[]}}],"position":{"start":{"line":486,"column":5,"offset":22695},"end":{"line":486,"column":183,"offset":22873},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":488,"column":5,"offset":22881},"end":{"line":498,"column":8,"offset":23139},"indent":[5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":486,"column":1,"offset":22691},"end":{"line":498,"column":8,"offset":23139},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":483,"column":1,"offset":22418},"end":{"line":498,"column":8,"offset":23139},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":500,"column":1,"offset":23143},"end":{"line":500,"column":29,"offset":23171},"indent":[]}},{"type":"inlineCode","value":"\"use strict\";","position":{"start":{"line":500,"column":29,"offset":23171},"end":{"line":500,"column":44,"offset":23186},"indent":[]}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":500,"column":44,"offset":23186},"end":{"line":500,"column":105,"offset":23247},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":500,"column":105,"offset":23247},"end":{"line":500,"column":111,"offset":23253},"indent":[]}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":500,"column":111,"offset":23253},"end":{"line":500,"column":148,"offset":23290},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":500,"column":148,"offset":23290},"end":{"line":500,"column":154,"offset":23296},"indent":[]}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":500,"column":154,"offset":23296},"end":{"line":500,"column":274,"offset":23416},"indent":[]}}],"position":{"start":{"line":500,"column":1,"offset":23143},"end":{"line":500,"column":274,"offset":23416},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":502,"column":1,"offset":23420},"end":{"line":502,"column":4,"offset":23423},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let sayMeow = cat.purrMore; console.log","position":{"start":{"line":504,"column":1,"offset":23427},"end":{"line":504,"column":40,"offset":23466},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":504,"column":40,"offset":23466},"end":{"line":504,"column":42,"offset":23468},"indent":[]}},{"type":"text","value":"sayMeow","position":{"start":{"line":504,"column":42,"offset":23468},"end":{"line":504,"column":49,"offset":23475},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":504,"column":49,"offset":23475},"end":{"line":504,"column":51,"offset":23477},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":504,"column":51,"offset":23477},"end":{"line":504,"column":53,"offset":23479},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":504,"column":53,"offset":23479},"end":{"line":504,"column":55,"offset":23481},"indent":[]}},{"type":"text","value":"; // TypeError: this.purr is not a function","position":{"start":{"line":504,"column":55,"offset":23481},"end":{"line":504,"column":98,"offset":23524},"indent":[]}}],"position":{"start":{"line":504,"column":1,"offset":23427},"end":{"line":504,"column":98,"offset":23524},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// we can use the built in Function.bind to ensure our context, our ","position":{"start":{"line":506,"column":1,"offset":23528},"end":{"line":506,"column":69,"offset":23596},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":506,"column":69,"offset":23596},"end":{"line":506,"column":75,"offset":23602},"indent":[]}},{"type":"text","value":", // is the cat object let boundCat = sayMeow.bind","position":{"start":{"line":506,"column":75,"offset":23602},"end":{"line":506,"column":125,"offset":23652},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":506,"column":125,"offset":23652},"end":{"line":506,"column":127,"offset":23654},"indent":[]}},{"type":"text","value":"cat","position":{"start":{"line":506,"column":127,"offset":23654},"end":{"line":506,"column":130,"offset":23657},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":506,"column":130,"offset":23657},"end":{"line":506,"column":132,"offset":23659},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":506,"column":132,"offset":23659},"end":{"line":506,"column":133,"offset":23660},"indent":[]}}],"position":{"start":{"line":506,"column":1,"offset":23528},"end":{"line":506,"column":133,"offset":23660},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"boundCat","position":{"start":{"line":508,"column":1,"offset":23664},"end":{"line":508,"column":9,"offset":23672},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":508,"column":9,"offset":23672},"end":{"line":508,"column":11,"offset":23674},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":508,"column":11,"offset":23674},"end":{"line":508,"column":13,"offset":23676},"indent":[]}},{"type":"text","value":"; // prints \"meow\"","position":{"start":{"line":508,"column":13,"offset":23676},"end":{"line":508,"column":31,"offset":23694},"indent":[]}}],"position":{"start":{"line":508,"column":1,"offset":23664},"end":{"line":508,"column":31,"offset":23694},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}","position":{"start":{"line":510,"column":1,"offset":23698},"end":{"line":537,"column":5,"offset":25677},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":539,"column":5,"offset":25685},"end":{"line":539,"column":60,"offset":25740},"indent":[]}}],"position":{"start":{"line":539,"column":5,"offset":25685},"end":{"line":539,"column":60,"offset":25740},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":540,"column":9,"offset":25750},"end":{"line":540,"column":105,"offset":25846},"indent":[]}}],"position":{"start":{"line":540,"column":9,"offset":25750},"end":{"line":540,"column":105,"offset":25846},"indent":[]}}],"position":{"start":{"line":540,"column":5,"offset":25746},"end":{"line":540,"column":105,"offset":25846},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":541,"column":9,"offset":25856},"end":{"line":541,"column":105,"offset":25952},"indent":[]}}],"position":{"start":{"line":541,"column":9,"offset":25856},"end":{"line":541,"column":105,"offset":25952},"indent":[]}}],"position":{"start":{"line":541,"column":5,"offset":25852},"end":{"line":541,"column":105,"offset":25952},"indent":[]}}],"position":{"start":{"line":540,"column":5,"offset":25746},"end":{"line":541,"column":105,"offset":25952},"indent":[5]}}],"position":{"start":{"line":539,"column":1,"offset":25681},"end":{"line":541,"column":105,"offset":25952},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":542,"column":5,"offset":25958},"end":{"line":542,"column":55,"offset":26008},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":542,"column":55,"offset":26008},"end":{"line":542,"column":61,"offset":26014},"indent":[]}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":542,"column":61,"offset":26014},"end":{"line":542,"column":183,"offset":26136},"indent":[]}}],"position":{"start":{"line":542,"column":5,"offset":25958},"end":{"line":542,"column":183,"offset":26136},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":544,"column":5,"offset":26144},"end":{"line":544,"column":7,"offset":26146},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":544,"column":7,"offset":26146},"end":{"line":544,"column":9,"offset":26148},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":544,"column":9,"offset":26148},"end":{"line":544,"column":11,"offset":26150},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":544,"column":11,"offset":26150},"end":{"line":544,"column":21,"offset":26160},"indent":[]}}],"position":{"start":{"line":544,"column":5,"offset":26144},"end":{"line":544,"column":21,"offset":26160},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let cat = {","position":{"start":{"line":546,"column":5,"offset":26168},"end":{"line":546,"column":16,"offset":26179},"indent":[]}}],"position":{"start":{"line":546,"column":5,"offset":26168},"end":{"line":546,"column":16,"offset":26179},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"purr: function ","position":{"start":{"line":548,"column":5,"offset":26187},"end":{"line":548,"column":20,"offset":26202},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":548,"column":20,"offset":26202},"end":{"line":548,"column":22,"offset":26204},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":548,"column":22,"offset":26204},"end":{"line":548,"column":24,"offset":26206},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":548,"column":24,"offset":26206},"end":{"line":548,"column":26,"offset":26208},"indent":[]}}],"position":{"start":{"line":548,"column":5,"offset":26187},"end":{"line":548,"column":26,"offset":26208},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":550,"column":5,"offset":26216},"end":{"line":550,"column":16,"offset":26227},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":550,"column":16,"offset":26227},"end":{"line":550,"column":18,"offset":26229},"indent":[]}},{"type":"text","value":"\"meow\"","position":{"start":{"line":550,"column":18,"offset":26229},"end":{"line":550,"column":24,"offset":26235},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":550,"column":24,"offset":26235},"end":{"line":550,"column":26,"offset":26237},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":550,"column":26,"offset":26237},"end":{"line":550,"column":27,"offset":26238},"indent":[]}}],"position":{"start":{"line":550,"column":5,"offset":26216},"end":{"line":550,"column":27,"offset":26238},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":552,"column":5,"offset":26246},"end":{"line":552,"column":7,"offset":26248},"indent":[]}}],"position":{"start":{"line":552,"column":5,"offset":26246},"end":{"line":552,"column":7,"offset":26248},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"purrMore: function ","position":{"start":{"line":554,"column":5,"offset":26256},"end":{"line":554,"column":24,"offset":26275},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":554,"column":24,"offset":26275},"end":{"line":554,"column":26,"offset":26277},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":554,"column":26,"offset":26277},"end":{"line":554,"column":28,"offset":26279},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":554,"column":28,"offset":26279},"end":{"line":554,"column":30,"offset":26281},"indent":[]}}],"position":{"start":{"line":554,"column":5,"offset":26256},"end":{"line":554,"column":30,"offset":26281},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"this.purr","position":{"start":{"line":556,"column":5,"offset":26289},"end":{"line":556,"column":14,"offset":26298},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":556,"column":14,"offset":26298},"end":{"line":556,"column":16,"offset":26300},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":556,"column":16,"offset":26300},"end":{"line":556,"column":18,"offset":26302},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":556,"column":18,"offset":26302},"end":{"line":556,"column":19,"offset":26303},"indent":[]}}],"position":{"start":{"line":556,"column":5,"offset":26289},"end":{"line":556,"column":19,"offset":26303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":558,"column":5,"offset":26311},"end":{"line":558,"column":7,"offset":26313},"indent":[]}}],"position":{"start":{"line":558,"column":5,"offset":26311},"end":{"line":558,"column":7,"offset":26313},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"};","position":{"start":{"line":560,"column":5,"offset":26321},"end":{"line":560,"column":7,"offset":26323},"indent":[]}}],"position":{"start":{"line":560,"column":5,"offset":26321},"end":{"line":560,"column":7,"offset":26323},"indent":[]}}],"position":{"start":{"line":542,"column":1,"offset":25954},"end":{"line":560,"column":7,"offset":26323},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":539,"column":1,"offset":25681},"end":{"line":560,"column":7,"offset":26323},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"global.setTimeout","position":{"start":{"line":562,"column":1,"offset":26327},"end":{"line":562,"column":18,"offset":26344},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":562,"column":18,"offset":26344},"end":{"line":562,"column":20,"offset":26346},"indent":[]}},{"type":"text","value":"cat.purrMore, 5000","position":{"start":{"line":562,"column":20,"offset":26346},"end":{"line":562,"column":38,"offset":26364},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":562,"column":38,"offset":26364},"end":{"line":562,"column":40,"offset":26366},"indent":[]}},{"type":"text","value":"; // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":562,"column":40,"offset":26366},"end":{"line":562,"column":100,"offset":26426},"indent":[]}}],"position":{"start":{"line":562,"column":1,"offset":26327},"end":{"line":562,"column":100,"offset":26426},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":564,"column":1,"offset":26430},"end":{"line":564,"column":3,"offset":26432},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":564,"column":3,"offset":26432},"end":{"line":564,"column":5,"offset":26434},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":564,"column":5,"offset":26434},"end":{"line":564,"column":7,"offset":26436},"indent":[]}}],"position":{"start":{"line":564,"column":1,"offset":26430},"end":{"line":564,"column":7,"offset":26436},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":566,"column":5,"offset":26444},"end":{"line":566,"column":33,"offset":26472},"indent":[]}},{"type":"inlineCode","value":"\"use strict\";","position":{"start":{"line":566,"column":33,"offset":26472},"end":{"line":566,"column":48,"offset":26487},"indent":[]}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":566,"column":48,"offset":26487},"end":{"line":566,"column":109,"offset":26548},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":566,"column":109,"offset":26548},"end":{"line":566,"column":115,"offset":26554},"indent":[]}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":566,"column":115,"offset":26554},"end":{"line":566,"column":152,"offset":26591},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":566,"column":152,"offset":26591},"end":{"line":566,"column":158,"offset":26597},"indent":[]}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":566,"column":158,"offset":26597},"end":{"line":566,"column":278,"offset":26717},"indent":[]}}],"position":{"start":{"line":566,"column":5,"offset":26444},"end":{"line":566,"column":278,"offset":26717},"indent":[]}}],"position":{"start":{"line":566,"column":1,"offset":26440},"end":{"line":566,"column":278,"offset":26717},"indent":[]}}],"position":{"start":{"line":566,"column":1,"offset":26440},"end":{"line":566,"column":278,"offset":26717},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"POJOs","position":{"start":{"line":568,"column":5,"offset":26725},"end":{"line":568,"column":10,"offset":26730},"indent":[]}}],"position":{"start":{"line":568,"column":1,"offset":26721},"end":{"line":568,"column":10,"offset":26730},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. Label variables as either Primitive vs. Reference","position":{"start":{"line":570,"column":6,"offset":26739},"end":{"line":570,"column":58,"offset":26791},"indent":[]}}],"position":{"start":{"line":570,"column":1,"offset":26734},"end":{"line":570,"column":58,"offset":26791},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.","position":{"start":{"line":572,"column":1,"offset":26795},"end":{"line":572,"column":240,"offset":27034},"indent":[]}}],"position":{"start":{"line":572,"column":1,"offset":26795},"end":{"line":572,"column":240,"offset":27034},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Boolean - Primitive","position":{"start":{"line":574,"column":5,"offset":27042},"end":{"line":574,"column":24,"offset":27061},"indent":[]}}],"position":{"start":{"line":574,"column":5,"offset":27042},"end":{"line":574,"column":24,"offset":27061},"indent":[]}}],"position":{"start":{"line":574,"column":1,"offset":27038},"end":{"line":574,"column":24,"offset":27061},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Null - Primitive","position":{"start":{"line":575,"column":5,"offset":27067},"end":{"line":575,"column":21,"offset":27083},"indent":[]}}],"position":{"start":{"line":575,"column":5,"offset":27067},"end":{"line":575,"column":21,"offset":27083},"indent":[]}}],"position":{"start":{"line":575,"column":1,"offset":27063},"end":{"line":575,"column":21,"offset":27083},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Undefined - Primitive","position":{"start":{"line":576,"column":5,"offset":27089},"end":{"line":576,"column":26,"offset":27110},"indent":[]}}],"position":{"start":{"line":576,"column":5,"offset":27089},"end":{"line":576,"column":26,"offset":27110},"indent":[]}}],"position":{"start":{"line":576,"column":1,"offset":27085},"end":{"line":576,"column":26,"offset":27110},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Number - Primitive","position":{"start":{"line":577,"column":5,"offset":27116},"end":{"line":577,"column":23,"offset":27134},"indent":[]}}],"position":{"start":{"line":577,"column":5,"offset":27116},"end":{"line":577,"column":23,"offset":27134},"indent":[]}}],"position":{"start":{"line":577,"column":1,"offset":27112},"end":{"line":577,"column":23,"offset":27134},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"String - Primitive","position":{"start":{"line":578,"column":5,"offset":27140},"end":{"line":578,"column":23,"offset":27158},"indent":[]}}],"position":{"start":{"line":578,"column":5,"offset":27140},"end":{"line":578,"column":23,"offset":27158},"indent":[]}}],"position":{"start":{"line":578,"column":1,"offset":27136},"end":{"line":578,"column":23,"offset":27158},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Array - Reference","position":{"start":{"line":579,"column":5,"offset":27164},"end":{"line":579,"column":22,"offset":27181},"indent":[]}}],"position":{"start":{"line":579,"column":5,"offset":27164},"end":{"line":579,"column":22,"offset":27181},"indent":[]}}],"position":{"start":{"line":579,"column":1,"offset":27160},"end":{"line":579,"column":22,"offset":27181},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Object - Reference","position":{"start":{"line":580,"column":5,"offset":27187},"end":{"line":580,"column":23,"offset":27205},"indent":[]}}],"position":{"start":{"line":580,"column":5,"offset":27187},"end":{"line":580,"column":23,"offset":27205},"indent":[]}}],"position":{"start":{"line":580,"column":1,"offset":27183},"end":{"line":580,"column":23,"offset":27205},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function - Reference","position":{"start":{"line":581,"column":5,"offset":27211},"end":{"line":581,"column":25,"offset":27231},"indent":[]}}],"position":{"start":{"line":581,"column":5,"offset":27211},"end":{"line":581,"column":25,"offset":27231},"indent":[]}}],"position":{"start":{"line":581,"column":1,"offset":27207},"end":{"line":581,"column":25,"offset":27231},"indent":[]}}],"position":{"start":{"line":574,"column":1,"offset":27038},"end":{"line":581,"column":25,"offset":27231},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2. Identify when to use . vs ","position":{"start":{"line":583,"column":6,"offset":27240},"end":{"line":583,"column":35,"offset":27269},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":583,"column":35,"offset":27269},"end":{"line":583,"column":37,"offset":27271},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":583,"column":37,"offset":27271},"end":{"line":583,"column":39,"offset":27273},"indent":[]}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":583,"column":39,"offset":27273},"end":{"line":583,"column":74,"offset":27308},"indent":[]}}],"position":{"start":{"line":583,"column":1,"offset":27235},"end":{"line":583,"column":74,"offset":27308},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);","position":{"start":{"line":585,"column":1,"offset":27312},"end":{"line":595,"column":4,"offset":27670},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3. Write an object literal with a variable key using interpolation","position":{"start":{"line":597,"column":6,"offset":27679},"end":{"line":597,"column":72,"offset":27745},"indent":[]}}],"position":{"start":{"line":597,"column":1,"offset":27674},"end":{"line":597,"column":72,"offset":27745},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);","position":{"start":{"line":599,"column":1,"offset":27749},"end":{"line":606,"column":4,"offset":27944},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4. Use the obj","position":{"start":{"line":608,"column":6,"offset":27953},"end":{"line":608,"column":20,"offset":27967},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":608,"column":20,"offset":27967},"end":{"line":608,"column":22,"offset":27969},"indent":[]}},{"type":"text","value":"key","position":{"start":{"line":608,"column":22,"offset":27969},"end":{"line":608,"column":25,"offset":27972},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":608,"column":25,"offset":27972},"end":{"line":608,"column":27,"offset":27974},"indent":[]}},{"type":"text","value":" !== undefined pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":608,"column":27,"offset":27974},"end":{"line":608,"column":118,"offset":28065},"indent":[]}}],"position":{"start":{"line":608,"column":1,"offset":27948},"end":{"line":608,"column":118,"offset":28065},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false","position":{"start":{"line":610,"column":1,"offset":28069},"end":{"line":620,"column":4,"offset":28370},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"5. Utilize Object.keys and Object.values in a function","position":{"start":{"line":622,"column":6,"offset":28379},"end":{"line":622,"column":60,"offset":28433},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":28374},"end":{"line":622,"column":60,"offset":28433},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));","position":{"start":{"line":624,"column":1,"offset":28437},"end":{"line":635,"column":4,"offset":28717},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"6. Iterate through an object using a for in loop","position":{"start":{"line":637,"column":6,"offset":28726},"end":{"line":637,"column":54,"offset":28774},"indent":[]}}],"position":{"start":{"line":637,"column":1,"offset":28721},"end":{"line":637,"column":54,"offset":28774},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));","position":{"start":{"line":639,"column":1,"offset":28778},"end":{"line":647,"column":4,"offset":28955},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments","position":{"start":{"line":649,"column":6,"offset":28964},"end":{"line":649,"column":98,"offset":29056},"indent":[]}}],"position":{"start":{"line":649,"column":1,"offset":28959},"end":{"line":649,"column":98,"offset":29056},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0","position":{"start":{"line":651,"column":1,"offset":29060},"end":{"line":665,"column":4,"offset":29387},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"8. Use ...spread syntax for Object literals and Array literals","position":{"start":{"line":667,"column":6,"offset":29396},"end":{"line":667,"column":68,"offset":29458},"indent":[]}}],"position":{"start":{"line":667,"column":1,"offset":29391},"end":{"line":667,"column":68,"offset":29458},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);","position":{"start":{"line":669,"column":1,"offset":29462},"end":{"line":682,"column":4,"offset":29762},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"9. Destructure an array to reference specific elements","position":{"start":{"line":684,"column":6,"offset":29771},"end":{"line":684,"column":60,"offset":29825},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":29766},"end":{"line":684,"column":60,"offset":29825},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);","position":{"start":{"line":686,"column":1,"offset":29829},"end":{"line":691,"column":4,"offset":29926},"indent":[1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"10. Destructure an object to reference specific values","position":{"start":{"line":693,"column":6,"offset":29935},"end":{"line":693,"column":60,"offset":29989},"indent":[]}}],"position":{"start":{"line":693,"column":1,"offset":29930},"end":{"line":693,"column":60,"offset":29989},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"let me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);","position":{"start":{"line":695,"column":1,"offset":29993},"end":{"line":714,"column":4,"offset":30353},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":716,"column":6,"offset":30362},"end":{"line":716,"column":139,"offset":30495},"indent":[]}}],"position":{"start":{"line":716,"column":1,"offset":30357},"end":{"line":716,"column":139,"offset":30495},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));","position":{"start":{"line":718,"column":1,"offset":30499},"end":{"line":732,"column":4,"offset":30875},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":734,"column":1,"offset":30879},"end":{"line":734,"column":4,"offset":30882},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":736,"column":5,"offset":30890},"end":{"line":736,"column":23,"offset":30908},"indent":[]}}],"position":{"start":{"line":736,"column":1,"offset":30886},"end":{"line":736,"column":23,"offset":30908},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. Identify the difference between const, let, and var declarations","position":{"start":{"line":738,"column":6,"offset":30917},"end":{"line":738,"column":73,"offset":30984},"indent":[]}}],"position":{"start":{"line":738,"column":1,"offset":30912},"end":{"line":738,"column":73,"offset":30984},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2. Explain the difference between const, let, and var declarations","position":{"start":{"line":740,"column":6,"offset":30993},"end":{"line":740,"column":72,"offset":31059},"indent":[]}}],"position":{"start":{"line":740,"column":1,"offset":30988},"end":{"line":740,"column":72,"offset":31059},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"var a = 'a';","position":{"start":{"line":742,"column":1,"offset":31063},"end":{"line":744,"column":4,"offset":31095},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":746,"column":5,"offset":31103},"end":{"line":746,"column":10,"offset":31108},"indent":[]}},{"type":"text","value":" is the historical keyword used for variable declaration.","position":{"start":{"line":746,"column":10,"offset":31108},"end":{"line":746,"column":67,"offset":31165},"indent":[]}}],"position":{"start":{"line":746,"column":5,"offset":31103},"end":{"line":746,"column":67,"offset":31165},"indent":[]}}],"position":{"start":{"line":746,"column":1,"offset":31099},"end":{"line":746,"column":67,"offset":31165},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":747,"column":5,"offset":31171},"end":{"line":747,"column":10,"offset":31176},"indent":[]}},{"type":"text","value":" declares variables in function scope, or global scope if not inside a function.","position":{"start":{"line":747,"column":10,"offset":31176},"end":{"line":747,"column":90,"offset":31256},"indent":[]}}],"position":{"start":{"line":747,"column":5,"offset":31171},"end":{"line":747,"column":90,"offset":31256},"indent":[]}}],"position":{"start":{"line":747,"column":1,"offset":31167},"end":{"line":747,"column":90,"offset":31256},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We consider ","position":{"start":{"line":748,"column":5,"offset":31262},"end":{"line":748,"column":17,"offset":31274},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":748,"column":17,"offset":31274},"end":{"line":748,"column":22,"offset":31279},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":748,"column":22,"offset":31279},"end":{"line":748,"column":29,"offset":31286},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"deprecated","position":{"start":{"line":748,"column":30,"offset":31287},"end":{"line":748,"column":40,"offset":31297},"indent":[]}}],"position":{"start":{"line":748,"column":29,"offset":31286},"end":{"line":748,"column":41,"offset":31298},"indent":[]}},{"type":"text","value":" and it is never used in this course.","position":{"start":{"line":748,"column":41,"offset":31298},"end":{"line":748,"column":78,"offset":31335},"indent":[]}}],"position":{"start":{"line":748,"column":5,"offset":31262},"end":{"line":748,"column":78,"offset":31335},"indent":[]}}],"position":{"start":{"line":748,"column":1,"offset":31258},"end":{"line":748,"column":78,"offset":31335},"indent":[]}}],"position":{"start":{"line":746,"column":1,"offset":31099},"end":{"line":748,"column":78,"offset":31335},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"let b = 'b';","position":{"start":{"line":750,"column":1,"offset":31339},"end":{"line":752,"column":4,"offset":31371},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":754,"column":5,"offset":31379},"end":{"line":754,"column":10,"offset":31384},"indent":[]}},{"type":"text","value":" is the keyword we use most often for variable declaration.","position":{"start":{"line":754,"column":10,"offset":31384},"end":{"line":754,"column":69,"offset":31443},"indent":[]}}],"position":{"start":{"line":754,"column":5,"offset":31379},"end":{"line":754,"column":69,"offset":31443},"indent":[]}}],"position":{"start":{"line":754,"column":1,"offset":31375},"end":{"line":754,"column":69,"offset":31443},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":755,"column":5,"offset":31449},"end":{"line":755,"column":10,"offset":31454},"indent":[]}},{"type":"text","value":" declares variables in block scope.","position":{"start":{"line":755,"column":10,"offset":31454},"end":{"line":755,"column":45,"offset":31489},"indent":[]}}],"position":{"start":{"line":755,"column":5,"offset":31449},"end":{"line":755,"column":45,"offset":31489},"indent":[]}}],"position":{"start":{"line":755,"column":1,"offset":31445},"end":{"line":755,"column":45,"offset":31489},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"variables declared with ","position":{"start":{"line":756,"column":5,"offset":31495},"end":{"line":756,"column":29,"offset":31519},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":756,"column":29,"offset":31519},"end":{"line":756,"column":34,"offset":31524},"indent":[]}},{"type":"text","value":" are re-assignable.","position":{"start":{"line":756,"column":34,"offset":31524},"end":{"line":756,"column":53,"offset":31543},"indent":[]}}],"position":{"start":{"line":756,"column":5,"offset":31495},"end":{"line":756,"column":53,"offset":31543},"indent":[]}}],"position":{"start":{"line":756,"column":1,"offset":31491},"end":{"line":756,"column":53,"offset":31543},"indent":[]}}],"position":{"start":{"line":754,"column":1,"offset":31375},"end":{"line":756,"column":53,"offset":31543},"indent":[1,1]}},{"type":"code","lang":"javascript","meta":null,"value":"const c = 'c';","position":{"start":{"line":758,"column":1,"offset":31547},"end":{"line":760,"column":4,"offset":31581},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":762,"column":5,"offset":31589},"end":{"line":762,"column":12,"offset":31596},"indent":[]}},{"type":"text","value":" is a specialized form of ","position":{"start":{"line":762,"column":12,"offset":31596},"end":{"line":762,"column":38,"offset":31622},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":762,"column":38,"offset":31622},"end":{"line":762,"column":43,"offset":31627},"indent":[]}},{"type":"text","value":" that can only be used to ","position":{"start":{"line":762,"column":43,"offset":31627},"end":{"line":762,"column":69,"offset":31653},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"initialize","position":{"start":{"line":762,"column":71,"offset":31655},"end":{"line":762,"column":81,"offset":31665},"indent":[]}}],"position":{"start":{"line":762,"column":69,"offset":31653},"end":{"line":762,"column":83,"offset":31667},"indent":[]}},{"type":"text","value":" a variable.","position":{"start":{"line":762,"column":83,"offset":31667},"end":{"line":762,"column":95,"offset":31679},"indent":[]}}],"position":{"start":{"line":762,"column":5,"offset":31589},"end":{"line":762,"column":95,"offset":31679},"indent":[]}}],"position":{"start":{"line":762,"column":1,"offset":31585},"end":{"line":762,"column":95,"offset":31679},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Except when it is declared, you cannot assign to a ","position":{"start":{"line":763,"column":5,"offset":31685},"end":{"line":763,"column":56,"offset":31736},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":763,"column":56,"offset":31736},"end":{"line":763,"column":63,"offset":31743},"indent":[]}},{"type":"text","value":" variable.","position":{"start":{"line":763,"column":63,"offset":31743},"end":{"line":763,"column":73,"offset":31753},"indent":[]}}],"position":{"start":{"line":763,"column":5,"offset":31685},"end":{"line":763,"column":73,"offset":31753},"indent":[]}}],"position":{"start":{"line":763,"column":1,"offset":31681},"end":{"line":763,"column":73,"offset":31753},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":764,"column":5,"offset":31759},"end":{"line":764,"column":12,"offset":31766},"indent":[]}},{"type":"text","value":" scopes variables the same way that ","position":{"start":{"line":764,"column":12,"offset":31766},"end":{"line":764,"column":48,"offset":31802},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":764,"column":48,"offset":31802},"end":{"line":764,"column":53,"offset":31807},"indent":[]}},{"type":"text","value":" does.","position":{"start":{"line":764,"column":53,"offset":31807},"end":{"line":764,"column":59,"offset":31813},"indent":[]}}],"position":{"start":{"line":764,"column":5,"offset":31759},"end":{"line":764,"column":59,"offset":31813},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":31755},"end":{"line":764,"column":59,"offset":31813},"indent":[]}}],"position":{"start":{"line":762,"column":1,"offset":31585},"end":{"line":764,"column":59,"offset":31813},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":766,"column":6,"offset":31822},"end":{"line":766,"column":116,"offset":31932},"indent":[]}}],"position":{"start":{"line":766,"column":1,"offset":31817},"end":{"line":766,"column":116,"offset":31932},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":768,"column":1,"offset":31936},"end":{"line":768,"column":15,"offset":31950},"indent":[]}},{"type":"inlineCode","value":"run","position":{"start":{"line":768,"column":15,"offset":31950},"end":{"line":768,"column":20,"offset":31955},"indent":[]}},{"type":"text","value":" function, inside which ","position":{"start":{"line":768,"column":20,"offset":31955},"end":{"line":768,"column":44,"offset":31979},"indent":[]}},{"type":"inlineCode","value":"foo","position":{"start":{"line":768,"column":44,"offset":31979},"end":{"line":768,"column":49,"offset":31984},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":768,"column":49,"offset":31984},"end":{"line":768,"column":54,"offset":31989},"indent":[]}},{"type":"inlineCode","value":"bar","position":{"start":{"line":768,"column":54,"offset":31989},"end":{"line":768,"column":59,"offset":31994},"indent":[]}},{"type":"text","value":" have ","position":{"start":{"line":768,"column":59,"offset":31994},"end":{"line":768,"column":65,"offset":32000},"indent":[]}},{"type":"inlineCode","value":"function scope","position":{"start":{"line":768,"column":65,"offset":32000},"end":{"line":768,"column":81,"offset":32016},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":768,"column":81,"offset":32016},"end":{"line":768,"column":83,"offset":32018},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":768,"column":83,"offset":32018},"end":{"line":768,"column":86,"offset":32021},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":768,"column":86,"offset":32021},"end":{"line":768,"column":91,"offset":32026},"indent":[]}},{"type":"inlineCode","value":"baz","position":{"start":{"line":768,"column":91,"offset":32026},"end":{"line":768,"column":96,"offset":32031},"indent":[]}},{"type":"text","value":" are scoped to the block expression.","position":{"start":{"line":768,"column":96,"offset":32031},"end":{"line":768,"column":132,"offset":32067},"indent":[]}}],"position":{"start":{"line":768,"column":1,"offset":31936},"end":{"line":768,"column":132,"offset":32067},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();","position":{"start":{"line":770,"column":1,"offset":32071},"end":{"line":788,"column":4,"offset":32379},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice that referencing ","position":{"start":{"line":790,"column":1,"offset":32383},"end":{"line":790,"column":25,"offset":32407},"indent":[]}},{"type":"inlineCode","value":"baz","position":{"start":{"line":790,"column":25,"offset":32407},"end":{"line":790,"column":30,"offset":32412},"indent":[]}},{"type":"text","value":" from outside it's block results in JavaScript throwing a ReferenceError.","position":{"start":{"line":790,"column":30,"offset":32412},"end":{"line":790,"column":103,"offset":32485},"indent":[]}}],"position":{"start":{"line":790,"column":1,"offset":32383},"end":{"line":790,"column":103,"offset":32485},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":792,"column":1,"offset":32489},"end":{"line":792,"column":15,"offset":32503},"indent":[]}},{"type":"inlineCode","value":"run","position":{"start":{"line":792,"column":15,"offset":32503},"end":{"line":792,"column":20,"offset":32508},"indent":[]}},{"type":"text","value":" function, inside of which ","position":{"start":{"line":792,"column":20,"offset":32508},"end":{"line":792,"column":47,"offset":32535},"indent":[]}},{"type":"inlineCode","value":"foo","position":{"start":{"line":792,"column":47,"offset":32535},"end":{"line":792,"column":52,"offset":32540},"indent":[]}},{"type":"text","value":" has ","position":{"start":{"line":792,"column":52,"offset":32540},"end":{"line":792,"column":57,"offset":32545},"indent":[]}},{"type":"inlineCode","value":"function scope","position":{"start":{"line":792,"column":57,"offset":32545},"end":{"line":792,"column":73,"offset":32561},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":792,"column":73,"offset":32561},"end":{"line":792,"column":74,"offset":32562},"indent":[]}}],"position":{"start":{"line":792,"column":1,"offset":32489},"end":{"line":792,"column":74,"offset":32562},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();","position":{"start":{"line":794,"column":1,"offset":32566},"end":{"line":802,"column":4,"offset":32703},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":804,"column":1,"offset":32707},"end":{"line":804,"column":15,"offset":32721},"indent":[]}},{"type":"inlineCode","value":"func1","position":{"start":{"line":804,"column":15,"offset":32721},"end":{"line":804,"column":22,"offset":32728},"indent":[]}},{"type":"text","value":" function and it's nested scopes.","position":{"start":{"line":804,"column":22,"offset":32728},"end":{"line":804,"column":55,"offset":32761},"indent":[]}}],"position":{"start":{"line":804,"column":1,"offset":32707},"end":{"line":804,"column":55,"offset":32761},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}","position":{"start":{"line":806,"column":1,"offset":32765},"end":{"line":821,"column":4,"offset":33043},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"6. Implement a closure and explain how the closure effects scope","position":{"start":{"line":823,"column":6,"offset":33052},"end":{"line":823,"column":70,"offset":33116},"indent":[]}}],"position":{"start":{"line":823,"column":1,"offset":33047},"end":{"line":823,"column":70,"offset":33116},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;","position":{"start":{"line":825,"column":1,"offset":33120},"end":{"line":835,"column":4,"offset":33314},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4. Define an arrow function","position":{"start":{"line":837,"column":6,"offset":33323},"end":{"line":837,"column":33,"offset":33350},"indent":[]}}],"position":{"start":{"line":837,"column":1,"offset":33318},"end":{"line":837,"column":33,"offset":33350},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const returnValue = (val) => val;","position":{"start":{"line":839,"column":1,"offset":33354},"end":{"line":841,"column":4,"offset":33407},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This simple construct will create a function that accepts ","position":{"start":{"line":843,"column":1,"offset":33411},"end":{"line":843,"column":59,"offset":33469},"indent":[]}},{"type":"inlineCode","value":"val","position":{"start":{"line":843,"column":59,"offset":33469},"end":{"line":843,"column":64,"offset":33474},"indent":[]}},{"type":"text","value":" as a parameter, and returns ","position":{"start":{"line":843,"column":64,"offset":33474},"end":{"line":843,"column":93,"offset":33503},"indent":[]}},{"type":"inlineCode","value":"val","position":{"start":{"line":843,"column":93,"offset":33503},"end":{"line":843,"column":98,"offset":33508},"indent":[]}},{"type":"text","value":" immediately. We do not need to type ","position":{"start":{"line":843,"column":98,"offset":33508},"end":{"line":843,"column":135,"offset":33545},"indent":[]}},{"type":"inlineCode","value":"return val","position":{"start":{"line":843,"column":135,"offset":33545},"end":{"line":843,"column":147,"offset":33557},"indent":[]}},{"type":"text","value":", because this is a single-line function.","position":{"start":{"line":843,"column":147,"offset":33557},"end":{"line":843,"column":188,"offset":33598},"indent":[]}}],"position":{"start":{"line":843,"column":1,"offset":33411},"end":{"line":843,"column":188,"offset":33598},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Identically, we could write","position":{"start":{"line":845,"column":1,"offset":33602},"end":{"line":845,"column":28,"offset":33629},"indent":[]}}],"position":{"start":{"line":845,"column":1,"offset":33602},"end":{"line":845,"column":28,"offset":33629},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const returnValue = (val) => {\n    return val;\n};","position":{"start":{"line":847,"column":1,"offset":33633},"end":{"line":851,"column":4,"offset":33704},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"5. Given an arrow function, deduce the value of ","position":{"start":{"line":853,"column":6,"offset":33713},"end":{"line":853,"column":54,"offset":33761},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":853,"column":54,"offset":33761},"end":{"line":853,"column":60,"offset":33767},"indent":[]}},{"type":"text","value":" without executing the code","position":{"start":{"line":853,"column":60,"offset":33767},"end":{"line":853,"column":87,"offset":33794},"indent":[]}}],"position":{"start":{"line":853,"column":1,"offset":33708},"end":{"line":853,"column":87,"offset":33794},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);","position":{"start":{"line":855,"column":1,"offset":33798},"end":{"line":865,"column":4,"offset":33971},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we use a ","position":{"start":{"line":867,"column":1,"offset":33975},"end":{"line":867,"column":13,"offset":33987},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function declaration","position":{"start":{"line":867,"column":14,"offset":33988},"end":{"line":867,"column":34,"offset":34008},"indent":[]}}],"position":{"start":{"line":867,"column":13,"offset":33987},"end":{"line":867,"column":35,"offset":34009},"indent":[]}},{"type":"text","value":" style function, the ","position":{"start":{"line":867,"column":35,"offset":34009},"end":{"line":867,"column":56,"offset":34030},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":867,"column":56,"offset":34030},"end":{"line":867,"column":62,"offset":34036},"indent":[]}},{"type":"text","value":" variable is set to the ","position":{"start":{"line":867,"column":62,"offset":34036},"end":{"line":867,"column":86,"offset":34060},"indent":[]}},{"type":"inlineCode","value":"global","position":{"start":{"line":867,"column":86,"offset":34060},"end":{"line":867,"column":94,"offset":34068},"indent":[]}},{"type":"text","value":" object ","position":{"start":{"line":867,"column":94,"offset":34068},"end":{"line":867,"column":102,"offset":34076},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":867,"column":102,"offset":34076},"end":{"line":867,"column":104,"offset":34078},"indent":[]}},{"type":"text","value":"i.e. ","position":{"start":{"line":867,"column":104,"offset":34078},"end":{"line":867,"column":109,"offset":34083},"indent":[]}},{"type":"inlineCode","value":"Object [global]","position":{"start":{"line":867,"column":109,"offset":34083},"end":{"line":867,"column":126,"offset":34100},"indent":[]}},{"type":"text","value":" in Node.JS and ","position":{"start":{"line":867,"column":126,"offset":34100},"end":{"line":867,"column":142,"offset":34116},"indent":[]}},{"type":"inlineCode","value":"Window","position":{"start":{"line":867,"column":142,"offset":34116},"end":{"line":867,"column":150,"offset":34124},"indent":[]}},{"type":"text","value":" in your browser","position":{"start":{"line":867,"column":150,"offset":34124},"end":{"line":867,"column":166,"offset":34140},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":867,"column":166,"offset":34140},"end":{"line":867,"column":168,"offset":34142},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":867,"column":168,"offset":34142},"end":{"line":867,"column":169,"offset":34143},"indent":[]}}],"position":{"start":{"line":867,"column":1,"offset":33975},"end":{"line":867,"column":169,"offset":34143},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);","position":{"start":{"line":869,"column":1,"offset":34147},"end":{"line":875,"column":4,"offset":34286},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, we use a ","position":{"start":{"line":877,"column":1,"offset":34290},"end":{"line":877,"column":27,"offset":34316},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"fat arrow","position":{"start":{"line":877,"column":28,"offset":34317},"end":{"line":877,"column":37,"offset":34326},"indent":[]}}],"position":{"start":{"line":877,"column":27,"offset":34316},"end":{"line":877,"column":38,"offset":34327},"indent":[]}},{"type":"text","value":" style function. Note that when we declare a funciton like this ","position":{"start":{"line":877,"column":38,"offset":34327},"end":{"line":877,"column":102,"offset":34391},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":877,"column":102,"offset":34391},"end":{"line":877,"column":108,"offset":34397},"indent":[]}},{"type":"text","value":" becomes","position":{"start":{"line":877,"column":108,"offset":34397},"end":{"line":877,"column":116,"offset":34405},"indent":[]}}],"position":{"start":{"line":877,"column":1,"offset":34290},"end":{"line":877,"column":116,"offset":34405},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"7. Define a method that references this on an object literal","position":{"start":{"line":879,"column":6,"offset":34414},"end":{"line":879,"column":66,"offset":34474},"indent":[]}}],"position":{"start":{"line":879,"column":1,"offset":34409},"end":{"line":879,"column":66,"offset":34474},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());","position":{"start":{"line":881,"column":1,"offset":34478},"end":{"line":892,"column":4,"offset":34733},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"8. Utilize the built in Function","position":{"start":{"line":894,"column":6,"offset":34742},"end":{"line":894,"column":38,"offset":34774},"indent":[]}},{"type":"text","value":"#","position":{"start":{"line":894,"column":38,"offset":34774},"end":{"line":894,"column":40,"offset":34776},"indent":[]}},{"type":"text","value":"bind on a callback to maintain the context of ","position":{"start":{"line":894,"column":40,"offset":34776},"end":{"line":894,"column":86,"offset":34822},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":894,"column":86,"offset":34822},"end":{"line":894,"column":92,"offset":34828},"indent":[]}}],"position":{"start":{"line":894,"column":1,"offset":34737},"end":{"line":894,"column":92,"offset":34828},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms","position":{"start":{"line":896,"column":1,"offset":34832},"end":{"line":909,"column":4,"offset":35182},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"9. Given a code snippet, identify what ","position":{"start":{"line":911,"column":6,"offset":35191},"end":{"line":911,"column":45,"offset":35230},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":911,"column":45,"offset":35230},"end":{"line":911,"column":51,"offset":35236},"indent":[]}},{"type":"text","value":" refers to","position":{"start":{"line":911,"column":51,"offset":35236},"end":{"line":911,"column":61,"offset":35246},"indent":[]}}],"position":{"start":{"line":911,"column":1,"offset":35186},"end":{"line":911,"column":61,"offset":35246},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"function Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');","position":{"start":{"line":913,"column":1,"offset":35250},"end":{"line":931,"column":4,"offset":35684},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":932,"column":1,"offset":35686}}}}