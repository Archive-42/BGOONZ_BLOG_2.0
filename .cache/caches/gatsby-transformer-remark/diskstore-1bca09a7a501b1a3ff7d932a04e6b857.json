{"expireTime":9007200882630521000,"key":"transformer-remark-markdown-ast-59fefaf8348607f4ceae96f1f08ce2b4--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":32,"offset":33},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":32,"offset":33},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Data-Structures-Algos-Codebase","children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":4,"column":2,"offset":38},"end":{"line":4,"column":18,"offset":54},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":37},"end":{"line":4,"column":77,"offset":113},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":37},"end":{"line":4,"column":77,"offset":113},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":6,"column":2,"offset":118},"end":{"line":6,"column":142,"offset":258},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":117},"end":{"line":6,"column":227,"offset":343},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":117},"end":{"line":6,"column":227,"offset":343},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":8,"column":4,"offset":350},"end":{"line":8,"column":6,"offset":352},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/distinct-subsequences/description/","children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":8,"column":7,"offset":353},"end":{"line":8,"column":33,"offset":379},"indent":[]}}],"position":{"start":{"line":8,"column":6,"offset":352},"end":{"line":8,"column":100,"offset":446},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":347},"end":{"line":8,"column":100,"offset":446},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":10,"column":5,"offset":454},"end":{"line":10,"column":13,"offset":462},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":450},"end":{"line":10,"column":13,"offset":462},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string ","position":{"start":{"line":12,"column":1,"offset":466},"end":{"line":12,"column":16,"offset":481},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":12,"column":18,"offset":483},"end":{"line":12,"column":19,"offset":484},"indent":[]}}],"position":{"start":{"line":12,"column":16,"offset":481},"end":{"line":12,"column":21,"offset":486},"indent":[]}},{"type":"text","value":" and a string ","position":{"start":{"line":12,"column":21,"offset":486},"end":{"line":12,"column":35,"offset":500},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":12,"column":37,"offset":502},"end":{"line":12,"column":38,"offset":503},"indent":[]}}],"position":{"start":{"line":12,"column":35,"offset":500},"end":{"line":12,"column":40,"offset":505},"indent":[]}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":12,"column":40,"offset":505},"end":{"line":12,"column":87,"offset":552},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":12,"column":89,"offset":554},"end":{"line":12,"column":90,"offset":555},"indent":[]}}],"position":{"start":{"line":12,"column":87,"offset":552},"end":{"line":12,"column":92,"offset":557},"indent":[]}},{"type":"text","value":" which equals ","position":{"start":{"line":12,"column":92,"offset":557},"end":{"line":12,"column":106,"offset":571},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":12,"column":108,"offset":573},"end":{"line":12,"column":109,"offset":574},"indent":[]}}],"position":{"start":{"line":12,"column":106,"offset":571},"end":{"line":12,"column":111,"offset":576},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":12,"column":111,"offset":576},"end":{"line":12,"column":112,"offset":577},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":466},"end":{"line":12,"column":112,"offset":577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":14,"column":1,"offset":581},"end":{"line":14,"column":209,"offset":789},"indent":[]}},{"type":"inlineCode","value":"\"ACE\"","position":{"start":{"line":14,"column":209,"offset":789},"end":{"line":14,"column":216,"offset":796},"indent":[]}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":14,"column":216,"offset":796},"end":{"line":14,"column":237,"offset":817},"indent":[]}},{"type":"inlineCode","value":"\"ABCDE\"","position":{"start":{"line":14,"column":237,"offset":817},"end":{"line":14,"column":246,"offset":826},"indent":[]}},{"type":"text","value":" while ","position":{"start":{"line":14,"column":246,"offset":826},"end":{"line":14,"column":253,"offset":833},"indent":[]}},{"type":"inlineCode","value":"\"AEC\"","position":{"start":{"line":14,"column":253,"offset":833},"end":{"line":14,"column":260,"offset":840},"indent":[]}},{"type":"text","value":" is not).","position":{"start":{"line":14,"column":260,"offset":840},"end":{"line":14,"column":269,"offset":849},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":581},"end":{"line":14,"column":269,"offset":849},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":16,"column":3,"offset":855},"end":{"line":16,"column":13,"offset":865},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":853},"end":{"line":16,"column":15,"offset":867},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":853},"end":{"line":16,"column":15,"offset":867},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^","position":{"start":{"line":18,"column":1,"offset":871},"end":{"line":32,"column":4,"offset":1113},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":34,"column":3,"offset":1119},"end":{"line":34,"column":13,"offset":1129},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1117},"end":{"line":34,"column":15,"offset":1131},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1117},"end":{"line":34,"column":15,"offset":1131},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^","position":{"start":{"line":36,"column":1,"offset":1135},"end":{"line":54,"column":4,"offset":1404},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":56,"column":5,"offset":1412},"end":{"line":56,"column":14,"offset":1421},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1408},"end":{"line":56,"column":14,"offset":1421},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":58,"column":1,"offset":1425},"end":{"line":58,"column":8,"offset":1432},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":58,"column":8,"offset":1432},"end":{"line":58,"column":17,"offset":1441},"indent":[]}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":58,"column":17,"offset":1441},"end":{"line":58,"column":57,"offset":1481},"indent":[]}},{"type":"inlineCode","value":"T[0...j)","position":{"start":{"line":58,"column":57,"offset":1481},"end":{"line":58,"column":67,"offset":1491},"indent":[]}},{"type":"text","value":" from ","position":{"start":{"line":58,"column":67,"offset":1491},"end":{"line":58,"column":73,"offset":1497},"indent":[]}},{"type":"inlineCode","value":"S[0...i)","position":{"start":{"line":58,"column":73,"offset":1497},"end":{"line":58,"column":83,"offset":1507},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":58,"column":83,"offset":1507},"end":{"line":58,"column":84,"offset":1508},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1425},"end":{"line":58,"column":84,"offset":1508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":60,"column":1,"offset":1512},"end":{"line":60,"column":5,"offset":1516},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":60,"column":5,"offset":1516},"end":{"line":60,"column":14,"offset":1525},"indent":[]}},{"type":"text","value":" you can always skip ","position":{"start":{"line":60,"column":14,"offset":1525},"end":{"line":60,"column":35,"offset":1546},"indent":[]}},{"type":"inlineCode","value":"S[i-1]","position":{"start":{"line":60,"column":35,"offset":1546},"end":{"line":60,"column":43,"offset":1554},"indent":[]}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":60,"column":43,"offset":1554},"end":{"line":60,"column":71,"offset":1582},"indent":[]}},{"type":"inlineCode","value":"S[i-1] === T[j-1]","position":{"start":{"line":60,"column":71,"offset":1582},"end":{"line":60,"column":90,"offset":1601},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":60,"column":90,"offset":1601},"end":{"line":60,"column":91,"offset":1602},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1512},"end":{"line":60,"column":91,"offset":1602},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)","position":{"start":{"line":62,"column":1,"offset":1606},"end":{"line":66,"column":4,"offset":1753},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":68,"column":1,"offset":1757},"end":{"line":68,"column":27,"offset":1783},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1757},"end":{"line":68,"column":27,"offset":1783},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};","position":{"start":{"line":70,"column":1,"offset":1787},"end":{"line":90,"column":4,"offset":2254},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":92,"column":1,"offset":2258},"end":{"line":92,"column":4,"offset":2261},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":94,"column":1,"offset":2265},"end":{"line":96,"column":9,"offset":2310},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":96,"column":9,"offset":2310},"end":{"line":96,"column":38,"offset":2339},"indent":[]}}],"position":{"start":{"line":96,"column":9,"offset":2310},"end":{"line":96,"column":38,"offset":2339},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":96,"column":38,"offset":2339},"end":{"line":97,"column":23,"offset":2363},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":97,"column":23,"offset":2363},"end":{"line":97,"column":66,"offset":2406},"indent":[]}}],"position":{"start":{"line":97,"column":23,"offset":2363},"end":{"line":97,"column":66,"offset":2406},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":97,"column":66,"offset":2406},"end":{"line":99,"column":51,"offset":2478},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":99,"column":51,"offset":2478},"end":{"line":99,"column":127,"offset":2554},"indent":[]}}],"position":{"start":{"line":99,"column":51,"offset":2478},"end":{"line":99,"column":127,"offset":2554},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":99,"column":127,"offset":2554},"end":{"line":100,"column":32,"offset":2587},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-right-side-view","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":100,"column":32,"offset":2587},"end":{"line":100,"column":89,"offset":2644},"indent":[]}}],"position":{"start":{"line":100,"column":32,"offset":2587},"end":{"line":100,"column":89,"offset":2644},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2265},"end":{"line":100,"column":89,"offset":2644},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":102,"column":1,"offset":2648},"end":{"line":102,"column":4,"offset":2651},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":104,"column":2,"offset":2656},"end":{"line":104,"column":142,"offset":2796},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2655},"end":{"line":104,"column":271,"offset":2925},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2655},"end":{"line":104,"column":271,"offset":2925},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":106,"column":4,"offset":2932},"end":{"line":106,"column":6,"offset":2934},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":106,"column":7,"offset":2935},"end":{"line":106,"column":55,"offset":2983},"indent":[]}}],"position":{"start":{"line":106,"column":6,"offset":2934},"end":{"line":106,"column":144,"offset":3072},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":2929},"end":{"line":106,"column":144,"offset":3072},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":108,"column":5,"offset":3080},"end":{"line":108,"column":13,"offset":3088},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3076},"end":{"line":108,"column":13,"offset":3088},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":110,"column":1,"offset":3092},"end":{"line":110,"column":20,"offset":3111},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3092},"end":{"line":110,"column":20,"offset":3111},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":112,"column":1,"offset":3115},"end":{"line":119,"column":4,"offset":3221},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":121,"column":1,"offset":3225},"end":{"line":121,"column":127,"offset":3351},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":121,"column":127,"offset":3351},"end":{"line":121,"column":133,"offset":3357},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":121,"column":133,"offset":3357},"end":{"line":121,"column":134,"offset":3358},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3225},"end":{"line":121,"column":134,"offset":3358},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":123,"column":1,"offset":3362},"end":{"line":123,"column":41,"offset":3402},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":123,"column":41,"offset":3402},"end":{"line":123,"column":47,"offset":3408},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":123,"column":47,"offset":3408},"end":{"line":123,"column":48,"offset":3409},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3362},"end":{"line":123,"column":48,"offset":3409},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":125,"column":3,"offset":3415},"end":{"line":125,"column":8,"offset":3420},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3413},"end":{"line":125,"column":10,"offset":3422},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3413},"end":{"line":125,"column":10,"offset":3422},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":127,"column":5,"offset":3430},"end":{"line":127,"column":43,"offset":3468},"indent":[]}}],"position":{"start":{"line":127,"column":5,"offset":3430},"end":{"line":127,"column":43,"offset":3468},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3426},"end":{"line":127,"column":43,"offset":3468},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":128,"column":5,"offset":3474},"end":{"line":128,"column":101,"offset":3570},"indent":[]}}],"position":{"start":{"line":128,"column":5,"offset":3474},"end":{"line":128,"column":101,"offset":3570},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":3470},"end":{"line":128,"column":101,"offset":3570},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":129,"column":5,"offset":3576},"end":{"line":129,"column":127,"offset":3698},"indent":[]}}],"position":{"start":{"line":129,"column":5,"offset":3576},"end":{"line":129,"column":127,"offset":3698},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3572},"end":{"line":129,"column":127,"offset":3698},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3426},"end":{"line":129,"column":127,"offset":3698},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":131,"column":3,"offset":3704},"end":{"line":131,"column":11,"offset":3712},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3702},"end":{"line":131,"column":13,"offset":3714},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3702},"end":{"line":131,"column":13,"offset":3714},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":133,"column":1,"offset":3718},"end":{"line":133,"column":41,"offset":3758},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3718},"end":{"line":133,"column":41,"offset":3758},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7","position":{"start":{"line":135,"column":1,"offset":3762},"end":{"line":142,"column":4,"offset":3822},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":144,"column":1,"offset":3826},"end":{"line":144,"column":56,"offset":3881},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":3826},"end":{"line":144,"column":56,"offset":3881},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL","position":{"start":{"line":146,"column":1,"offset":3885},"end":{"line":153,"column":4,"offset":3969},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":155,"column":5,"offset":3977},"end":{"line":155,"column":14,"offset":3986},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3973},"end":{"line":155,"column":14,"offset":3986},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":157,"column":6,"offset":3995},"end":{"line":157,"column":9,"offset":3998},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":3990},"end":{"line":157,"column":9,"offset":3998},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive.","position":{"start":{"line":159,"column":1,"offset":4002},"end":{"line":159,"column":11,"offset":4012},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":4002},"end":{"line":159,"column":11,"offset":4012},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":161,"column":1,"offset":4016},"end":{"line":161,"column":11,"offset":4026},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":161,"column":11,"offset":4026},"end":{"line":161,"column":17,"offset":4032},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":161,"column":17,"offset":4032},"end":{"line":161,"column":18,"offset":4033},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4016},"end":{"line":161,"column":18,"offset":4033},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":163,"column":5,"offset":4041},"end":{"line":163,"column":27,"offset":4063},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":163,"column":27,"offset":4063},"end":{"line":163,"column":39,"offset":4075},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":163,"column":39,"offset":4075},"end":{"line":163,"column":40,"offset":4076},"indent":[]}}],"position":{"start":{"line":163,"column":5,"offset":4041},"end":{"line":163,"column":40,"offset":4076},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4037},"end":{"line":163,"column":40,"offset":4076},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":164,"column":5,"offset":4082},"end":{"line":164,"column":28,"offset":4105},"indent":[]}},{"type":"inlineCode","value":"node.next.left","position":{"start":{"line":164,"column":28,"offset":4105},"end":{"line":164,"column":44,"offset":4121},"indent":[]}},{"type":"text","value":" if ","position":{"start":{"line":164,"column":44,"offset":4121},"end":{"line":164,"column":48,"offset":4125},"indent":[]}},{"type":"inlineCode","value":"node.next","position":{"start":{"line":164,"column":48,"offset":4125},"end":{"line":164,"column":59,"offset":4136},"indent":[]}},{"type":"text","value":" exists.","position":{"start":{"line":164,"column":59,"offset":4136},"end":{"line":164,"column":67,"offset":4144},"indent":[]}}],"position":{"start":{"line":164,"column":5,"offset":4082},"end":{"line":164,"column":67,"offset":4144},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4078},"end":{"line":164,"column":67,"offset":4144},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4037},"end":{"line":164,"column":67,"offset":4144},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};","position":{"start":{"line":166,"column":1,"offset":4148},"end":{"line":194,"column":4,"offset":4802},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":196,"column":6,"offset":4811},"end":{"line":196,"column":9,"offset":4814},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":4806},"end":{"line":196,"column":9,"offset":4814},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":198,"column":1,"offset":4818},"end":{"line":198,"column":23,"offset":4840},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":4818},"end":{"line":198,"column":23,"offset":4840},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":200,"column":1,"offset":4844},"end":{"line":236,"column":4,"offset":5744},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":238,"column":1,"offset":5748},"end":{"line":238,"column":4,"offset":5751},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":240,"column":1,"offset":5755},"end":{"line":242,"column":9,"offset":5800},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":242,"column":9,"offset":5800},"end":{"line":242,"column":38,"offset":5829},"indent":[]}}],"position":{"start":{"line":242,"column":9,"offset":5800},"end":{"line":242,"column":38,"offset":5829},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":242,"column":38,"offset":5829},"end":{"line":243,"column":23,"offset":5853},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":243,"column":23,"offset":5853},"end":{"line":243,"column":66,"offset":5896},"indent":[]}}],"position":{"start":{"line":243,"column":23,"offset":5853},"end":{"line":243,"column":66,"offset":5896},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":243,"column":66,"offset":5896},"end":{"line":245,"column":48,"offset":5965},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":245,"column":48,"offset":5965},"end":{"line":245,"column":121,"offset":6038},"indent":[]}}],"position":{"start":{"line":245,"column":48,"offset":5965},"end":{"line":245,"column":121,"offset":6038},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":5755},"end":{"line":245,"column":121,"offset":6038},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":247,"column":1,"offset":6042},"end":{"line":247,"column":4,"offset":6045},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":249,"column":2,"offset":6050},"end":{"line":249,"column":142,"offset":6190},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":6049},"end":{"line":249,"column":277,"offset":6325},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":6049},"end":{"line":249,"column":277,"offset":6325},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":251,"column":4,"offset":6332},"end":{"line":251,"column":6,"offset":6334},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/","children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":251,"column":7,"offset":6335},"end":{"line":251,"column":58,"offset":6386},"indent":[]}}],"position":{"start":{"line":251,"column":6,"offset":6334},"end":{"line":251,"column":150,"offset":6478},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":6329},"end":{"line":251,"column":150,"offset":6478},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":253,"column":5,"offset":6486},"end":{"line":253,"column":13,"offset":6494},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":6482},"end":{"line":253,"column":13,"offset":6494},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":255,"column":1,"offset":6498},"end":{"line":255,"column":20,"offset":6517},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":6498},"end":{"line":255,"column":20,"offset":6517},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":257,"column":1,"offset":6521},"end":{"line":264,"column":4,"offset":6627},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":266,"column":1,"offset":6631},"end":{"line":266,"column":127,"offset":6757},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":266,"column":127,"offset":6757},"end":{"line":266,"column":133,"offset":6763},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":266,"column":133,"offset":6763},"end":{"line":266,"column":134,"offset":6764},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":6631},"end":{"line":266,"column":134,"offset":6764},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":268,"column":1,"offset":6768},"end":{"line":268,"column":41,"offset":6808},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":268,"column":41,"offset":6808},"end":{"line":268,"column":47,"offset":6814},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":268,"column":47,"offset":6814},"end":{"line":268,"column":48,"offset":6815},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6768},"end":{"line":268,"column":48,"offset":6815},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":270,"column":3,"offset":6821},"end":{"line":270,"column":8,"offset":6826},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6819},"end":{"line":270,"column":10,"offset":6828},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6819},"end":{"line":270,"column":10,"offset":6828},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":272,"column":5,"offset":6836},"end":{"line":272,"column":43,"offset":6874},"indent":[]}}],"position":{"start":{"line":272,"column":5,"offset":6836},"end":{"line":272,"column":43,"offset":6874},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":6832},"end":{"line":272,"column":43,"offset":6874},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":273,"column":5,"offset":6880},"end":{"line":273,"column":101,"offset":6976},"indent":[]}}],"position":{"start":{"line":273,"column":5,"offset":6880},"end":{"line":273,"column":101,"offset":6976},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":6876},"end":{"line":273,"column":101,"offset":6976},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":6832},"end":{"line":273,"column":101,"offset":6976},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":275,"column":3,"offset":6982},"end":{"line":275,"column":11,"offset":6990},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":6980},"end":{"line":275,"column":13,"offset":6992},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":6980},"end":{"line":275,"column":13,"offset":6992},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":277,"column":1,"offset":6996},"end":{"line":277,"column":33,"offset":7028},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":6996},"end":{"line":277,"column":33,"offset":7028},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7","position":{"start":{"line":279,"column":1,"offset":7032},"end":{"line":286,"column":4,"offset":7092},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":288,"column":1,"offset":7096},"end":{"line":288,"column":56,"offset":7151},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":7096},"end":{"line":288,"column":56,"offset":7151},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL","position":{"start":{"line":290,"column":1,"offset":7155},"end":{"line":297,"column":4,"offset":7239},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":299,"column":5,"offset":7247},"end":{"line":299,"column":14,"offset":7256},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":7243},"end":{"line":299,"column":14,"offset":7256},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":301,"column":6,"offset":7265},"end":{"line":301,"column":9,"offset":7268},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":7260},"end":{"line":301,"column":9,"offset":7268},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":303,"column":1,"offset":7272},"end":{"line":303,"column":16,"offset":7287},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":303,"column":17,"offset":7288},"end":{"line":303,"column":65,"offset":7336},"indent":[]}}],"position":{"start":{"line":303,"column":16,"offset":7287},"end":{"line":303,"column":135,"offset":7406},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":303,"column":135,"offset":7406},"end":{"line":303,"column":136,"offset":7407},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":7272},"end":{"line":303,"column":136,"offset":7407},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":305,"column":1,"offset":7411},"end":{"line":305,"column":50,"offset":7460},"indent":[]}},{"type":"inlineCode","value":"next","position":{"start":{"line":305,"column":50,"offset":7460},"end":{"line":305,"column":56,"offset":7466},"indent":[]}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":305,"column":56,"offset":7466},"end":{"line":305,"column":97,"offset":7507},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":305,"column":97,"offset":7507},"end":{"line":305,"column":103,"offset":7513},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":305,"column":103,"offset":7513},"end":{"line":305,"column":104,"offset":7514},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":7411},"end":{"line":305,"column":104,"offset":7514},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":307,"column":1,"offset":7518},"end":{"line":307,"column":50,"offset":7567},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":7518},"end":{"line":307,"column":50,"offset":7567},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};","position":{"start":{"line":309,"column":1,"offset":7571},"end":{"line":346,"column":4,"offset":8457},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":348,"column":6,"offset":8466},"end":{"line":348,"column":9,"offset":8469},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":8461},"end":{"line":348,"column":9,"offset":8469},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":350,"column":1,"offset":8473},"end":{"line":350,"column":38,"offset":8510},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":350,"column":39,"offset":8511},"end":{"line":350,"column":87,"offset":8559},"indent":[]}}],"position":{"start":{"line":350,"column":38,"offset":8510},"end":{"line":350,"column":157,"offset":8629},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":350,"column":157,"offset":8629},"end":{"line":350,"column":158,"offset":8630},"indent":[]}}],"position":{"start":{"line":350,"column":1,"offset":8473},"end":{"line":350,"column":158,"offset":8630},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":352,"column":1,"offset":8634},"end":{"line":388,"column":4,"offset":9534},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":390,"column":1,"offset":9538},"end":{"line":390,"column":4,"offset":9541},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":392,"column":1,"offset":9545},"end":{"line":394,"column":10,"offset":9589},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":394,"column":10,"offset":9589},"end":{"line":394,"column":40,"offset":9619},"indent":[]}}],"position":{"start":{"line":394,"column":10,"offset":9589},"end":{"line":394,"column":40,"offset":9619},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":394,"column":40,"offset":9619},"end":{"line":396,"column":25,"offset":9665},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":396,"column":25,"offset":9665},"end":{"line":396,"column":74,"offset":9714},"indent":[]}}],"position":{"start":{"line":396,"column":25,"offset":9665},"end":{"line":396,"column":74,"offset":9714},"indent":[]}}],"position":{"start":{"line":392,"column":1,"offset":9545},"end":{"line":396,"column":74,"offset":9714},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":398,"column":1,"offset":9718},"end":{"line":398,"column":4,"offset":9721},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":400,"column":2,"offset":9726},"end":{"line":400,"column":142,"offset":9866},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":9725},"end":{"line":400,"column":217,"offset":9941},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":9725},"end":{"line":400,"column":217,"offset":9941},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":402,"column":4,"offset":9948},"end":{"line":402,"column":6,"offset":9950},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle/description/","children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":402,"column":7,"offset":9951},"end":{"line":402,"column":29,"offset":9973},"indent":[]}}],"position":{"start":{"line":402,"column":6,"offset":9950},"end":{"line":402,"column":91,"offset":10035},"indent":[]}}],"position":{"start":{"line":402,"column":1,"offset":9945},"end":{"line":402,"column":91,"offset":10035},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":404,"column":5,"offset":10043},"end":{"line":404,"column":13,"offset":10051},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":10039},"end":{"line":404,"column":13,"offset":10051},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":406,"column":1,"offset":10055},"end":{"line":406,"column":30,"offset":10084},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":406,"column":31,"offset":10085},"end":{"line":406,"column":38,"offset":10092},"indent":[]}}],"position":{"start":{"line":406,"column":30,"offset":10084},"end":{"line":406,"column":39,"offset":10093},"indent":[]}},{"type":"text","value":", generate the first ","position":{"start":{"line":406,"column":39,"offset":10093},"end":{"line":406,"column":60,"offset":10114},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":406,"column":61,"offset":10115},"end":{"line":406,"column":68,"offset":10122},"indent":[]}}],"position":{"start":{"line":406,"column":60,"offset":10114},"end":{"line":406,"column":69,"offset":10123},"indent":[]}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":406,"column":69,"offset":10123},"end":{"line":406,"column":91,"offset":10145},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":10055},"end":{"line":406,"column":91,"offset":10145},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":408,"column":1,"offset":10149},"end":{"line":408,"column":112,"offset":10260},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":10149},"end":{"line":408,"column":112,"offset":10260},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":410,"column":1,"offset":10264},"end":{"line":410,"column":83,"offset":10346},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":10264},"end":{"line":410,"column":83,"offset":10346},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":412,"column":3,"offset":10352},"end":{"line":412,"column":11,"offset":10360},"indent":[]}}],"position":{"start":{"line":412,"column":1,"offset":10350},"end":{"line":412,"column":13,"offset":10362},"indent":[]}}],"position":{"start":{"line":412,"column":1,"offset":10350},"end":{"line":412,"column":13,"offset":10362},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]","position":{"start":{"line":414,"column":1,"offset":10366},"end":{"line":425,"column":4,"offset":10465},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":427,"column":5,"offset":10473},"end":{"line":427,"column":14,"offset":10482},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":10469},"end":{"line":427,"column":14,"offset":10482},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":429,"column":1,"offset":10486},"end":{"line":429,"column":25,"offset":10510},"indent":[]}}],"position":{"start":{"line":429,"column":1,"offset":10486},"end":{"line":429,"column":25,"offset":10510},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};","position":{"start":{"line":431,"column":1,"offset":10514},"end":{"line":454,"column":4,"offset":11003},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":456,"column":1,"offset":11007},"end":{"line":456,"column":4,"offset":11010},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":458,"column":1,"offset":11014},"end":{"line":460,"column":10,"offset":11058},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":460,"column":10,"offset":11058},"end":{"line":460,"column":40,"offset":11088},"indent":[]}}],"position":{"start":{"line":460,"column":10,"offset":11058},"end":{"line":460,"column":40,"offset":11088},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":460,"column":40,"offset":11088},"end":{"line":462,"column":22,"offset":11131},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":462,"column":22,"offset":11131},"end":{"line":462,"column":68,"offset":11177},"indent":[]}}],"position":{"start":{"line":462,"column":22,"offset":11131},"end":{"line":462,"column":68,"offset":11177},"indent":[]}}],"position":{"start":{"line":458,"column":1,"offset":11014},"end":{"line":462,"column":68,"offset":11177},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":464,"column":1,"offset":11181},"end":{"line":464,"column":4,"offset":11184},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":466,"column":2,"offset":11189},"end":{"line":466,"column":142,"offset":11329},"indent":[]}}],"position":{"start":{"line":466,"column":1,"offset":11188},"end":{"line":466,"column":223,"offset":11410},"indent":[]}}],"position":{"start":{"line":466,"column":1,"offset":11188},"end":{"line":466,"column":223,"offset":11410},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":468,"column":4,"offset":11417},"end":{"line":468,"column":6,"offset":11419},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii/description/","children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":468,"column":7,"offset":11420},"end":{"line":468,"column":32,"offset":11445},"indent":[]}}],"position":{"start":{"line":468,"column":6,"offset":11419},"end":{"line":468,"column":97,"offset":11510},"indent":[]}}],"position":{"start":{"line":468,"column":1,"offset":11414},"end":{"line":468,"column":97,"offset":11510},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":470,"column":5,"offset":11518},"end":{"line":470,"column":13,"offset":11526},"indent":[]}}],"position":{"start":{"line":470,"column":1,"offset":11514},"end":{"line":470,"column":13,"offset":11526},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":472,"column":1,"offset":11530},"end":{"line":472,"column":28,"offset":11557},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":472,"column":29,"offset":11558},"end":{"line":472,"column":30,"offset":11559},"indent":[]}}],"position":{"start":{"line":472,"column":28,"offset":11557},"end":{"line":472,"column":31,"offset":11560},"indent":[]}},{"type":"text","value":" where ","position":{"start":{"line":472,"column":31,"offset":11560},"end":{"line":472,"column":38,"offset":11567},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":472,"column":39,"offset":11568},"end":{"line":472,"column":40,"offset":11569},"indent":[]}}],"position":{"start":{"line":472,"column":38,"offset":11567},"end":{"line":472,"column":41,"offset":11570},"indent":[]}},{"type":"text","value":" â‰¤ 33, return the ","position":{"start":{"line":472,"column":41,"offset":11570},"end":{"line":472,"column":59,"offset":11588},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":472,"column":60,"offset":11589},"end":{"line":472,"column":61,"offset":11590},"indent":[]}}],"position":{"start":{"line":472,"column":59,"offset":11588},"end":{"line":472,"column":62,"offset":11591},"indent":[]}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":472,"column":62,"offset":11591},"end":{"line":472,"column":100,"offset":11629},"indent":[]}}],"position":{"start":{"line":472,"column":1,"offset":11530},"end":{"line":472,"column":100,"offset":11629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":474,"column":1,"offset":11633},"end":{"line":474,"column":39,"offset":11671},"indent":[]}}],"position":{"start":{"line":474,"column":1,"offset":11633},"end":{"line":474,"column":39,"offset":11671},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":476,"column":1,"offset":11675},"end":{"line":476,"column":112,"offset":11786},"indent":[]}}],"position":{"start":{"line":476,"column":1,"offset":11675},"end":{"line":476,"column":112,"offset":11786},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":478,"column":1,"offset":11790},"end":{"line":478,"column":83,"offset":11872},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11790},"end":{"line":478,"column":83,"offset":11872},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":480,"column":3,"offset":11878},"end":{"line":480,"column":11,"offset":11886},"indent":[]}}],"position":{"start":{"line":480,"column":1,"offset":11876},"end":{"line":480,"column":13,"offset":11888},"indent":[]}}],"position":{"start":{"line":480,"column":1,"offset":11876},"end":{"line":480,"column":13,"offset":11888},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 3\nOutput: [1,3,3,1]","position":{"start":{"line":482,"column":1,"offset":11892},"end":{"line":486,"column":4,"offset":11931},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":488,"column":3,"offset":11937},"end":{"line":488,"column":13,"offset":11947},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":11935},"end":{"line":488,"column":15,"offset":11949},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":11935},"end":{"line":488,"column":15,"offset":11949},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":490,"column":1,"offset":11953},"end":{"line":490,"column":47,"offset":11999},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":490,"column":48,"offset":12000},"end":{"line":490,"column":49,"offset":12001},"indent":[]}}],"position":{"start":{"line":490,"column":47,"offset":11999},"end":{"line":490,"column":50,"offset":12002},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":490,"column":50,"offset":12002},"end":{"line":490,"column":51,"offset":12003},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":490,"column":52,"offset":12004},"end":{"line":490,"column":53,"offset":12005},"indent":[]}}],"position":{"start":{"line":490,"column":51,"offset":12003},"end":{"line":490,"column":54,"offset":12006},"indent":[]}},{"type":"text","value":") extra space?","position":{"start":{"line":490,"column":54,"offset":12006},"end":{"line":490,"column":68,"offset":12020},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":11953},"end":{"line":490,"column":68,"offset":12020},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":492,"column":5,"offset":12028},"end":{"line":492,"column":14,"offset":12037},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":12024},"end":{"line":492,"column":14,"offset":12037},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":494,"column":1,"offset":12041},"end":{"line":494,"column":44,"offset":12084},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":12041},"end":{"line":494,"column":44,"offset":12084},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"State ","position":{"start":{"line":496,"column":1,"offset":12088},"end":{"line":496,"column":7,"offset":12094},"indent":[]}},{"type":"inlineCode","value":"(i, j)","position":{"start":{"line":496,"column":7,"offset":12094},"end":{"line":496,"column":15,"offset":12102},"indent":[]}},{"type":"text","value":" depends on ","position":{"start":{"line":496,"column":15,"offset":12102},"end":{"line":496,"column":27,"offset":12114},"indent":[]}},{"type":"inlineCode","value":"(i-1, j)","position":{"start":{"line":496,"column":27,"offset":12114},"end":{"line":496,"column":37,"offset":12124},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":496,"column":37,"offset":12124},"end":{"line":496,"column":42,"offset":12129},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":496,"column":42,"offset":12129},"end":{"line":496,"column":54,"offset":12141},"indent":[]}},{"type":"text","value":". So to access ","position":{"start":{"line":496,"column":54,"offset":12141},"end":{"line":496,"column":69,"offset":12156},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":496,"column":69,"offset":12156},"end":{"line":496,"column":81,"offset":12168},"indent":[]}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":496,"column":81,"offset":12168},"end":{"line":496,"column":119,"offset":12206},"indent":[]}}],"position":{"start":{"line":496,"column":1,"offset":12088},"end":{"line":496,"column":119,"offset":12206},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};","position":{"start":{"line":498,"column":1,"offset":12210},"end":{"line":518,"column":4,"offset":12586},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":520,"column":1,"offset":12590},"end":{"line":520,"column":4,"offset":12593},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":522,"column":1,"offset":12597},"end":{"line":524,"column":10,"offset":12643},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":524,"column":10,"offset":12643},"end":{"line":524,"column":40,"offset":12673},"indent":[]}}],"position":{"start":{"line":524,"column":10,"offset":12643},"end":{"line":524,"column":40,"offset":12673},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":524,"column":40,"offset":12673},"end":{"line":525,"column":24,"offset":12698},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":525,"column":24,"offset":12698},"end":{"line":525,"column":68,"offset":12742},"indent":[]}}],"position":{"start":{"line":525,"column":24,"offset":12698},"end":{"line":525,"column":68,"offset":12742},"indent":[]}}],"position":{"start":{"line":522,"column":1,"offset":12597},"end":{"line":525,"column":68,"offset":12742},"indent":[1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":527,"column":1,"offset":12746},"end":{"line":527,"column":4,"offset":12749},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#120-trianglehttpsleetcodecomproblemstriangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":529,"column":2,"offset":12754},"end":{"line":529,"column":142,"offset":12894},"indent":[]}}],"position":{"start":{"line":529,"column":1,"offset":12753},"end":{"line":529,"column":201,"offset":12953},"indent":[]}}],"position":{"start":{"line":529,"column":1,"offset":12753},"end":{"line":529,"column":201,"offset":12953},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":531,"column":4,"offset":12960},"end":{"line":531,"column":6,"offset":12962},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/triangle/description/","children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":531,"column":7,"offset":12963},"end":{"line":531,"column":20,"offset":12976},"indent":[]}}],"position":{"start":{"line":531,"column":6,"offset":12962},"end":{"line":531,"column":74,"offset":13030},"indent":[]}}],"position":{"start":{"line":531,"column":1,"offset":12957},"end":{"line":531,"column":74,"offset":13030},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":533,"column":5,"offset":13038},"end":{"line":533,"column":13,"offset":13046},"indent":[]}}],"position":{"start":{"line":533,"column":1,"offset":13034},"end":{"line":533,"column":13,"offset":13046},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":535,"column":1,"offset":13050},"end":{"line":535,"column":125,"offset":13174},"indent":[]}}],"position":{"start":{"line":535,"column":1,"offset":13050},"end":{"line":535,"column":125,"offset":13174},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":537,"column":1,"offset":13178},"end":{"line":537,"column":42,"offset":13219},"indent":[]}}],"position":{"start":{"line":537,"column":1,"offset":13178},"end":{"line":537,"column":42,"offset":13219},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]","position":{"start":{"line":539,"column":1,"offset":13223},"end":{"line":547,"column":4,"offset":13288},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":549,"column":1,"offset":13292},"end":{"line":549,"column":44,"offset":13335},"indent":[]}},{"type":"inlineCode","value":"11","position":{"start":{"line":549,"column":44,"offset":13335},"end":{"line":549,"column":48,"offset":13339},"indent":[]}},{"type":"text","value":" (i.e., ","position":{"start":{"line":549,"column":48,"offset":13339},"end":{"line":549,"column":56,"offset":13347},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"2","position":{"start":{"line":549,"column":58,"offset":13349},"end":{"line":549,"column":59,"offset":13350},"indent":[]}}],"position":{"start":{"line":549,"column":56,"offset":13347},"end":{"line":549,"column":61,"offset":13352},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":549,"column":61,"offset":13352},"end":{"line":549,"column":64,"offset":13355},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"3","position":{"start":{"line":549,"column":66,"offset":13357},"end":{"line":549,"column":67,"offset":13358},"indent":[]}}],"position":{"start":{"line":549,"column":64,"offset":13355},"end":{"line":549,"column":69,"offset":13360},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":549,"column":69,"offset":13360},"end":{"line":549,"column":72,"offset":13363},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"5","position":{"start":{"line":549,"column":74,"offset":13365},"end":{"line":549,"column":75,"offset":13366},"indent":[]}}],"position":{"start":{"line":549,"column":72,"offset":13363},"end":{"line":549,"column":77,"offset":13368},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":549,"column":77,"offset":13368},"end":{"line":549,"column":80,"offset":13371},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"1","position":{"start":{"line":549,"column":82,"offset":13373},"end":{"line":549,"column":83,"offset":13374},"indent":[]}}],"position":{"start":{"line":549,"column":80,"offset":13371},"end":{"line":549,"column":85,"offset":13376},"indent":[]}},{"type":"text","value":" = 11).","position":{"start":{"line":549,"column":85,"offset":13376},"end":{"line":549,"column":92,"offset":13383},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":13292},"end":{"line":549,"column":92,"offset":13383},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":551,"column":3,"offset":13389},"end":{"line":551,"column":8,"offset":13394},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":13387},"end":{"line":551,"column":10,"offset":13396},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":13387},"end":{"line":551,"column":10,"offset":13396},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":553,"column":1,"offset":13400},"end":{"line":553,"column":51,"offset":13450},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":553,"column":52,"offset":13451},"end":{"line":553,"column":53,"offset":13452},"indent":[]}}],"position":{"start":{"line":553,"column":51,"offset":13450},"end":{"line":553,"column":54,"offset":13453},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":553,"column":54,"offset":13453},"end":{"line":553,"column":55,"offset":13454},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":553,"column":56,"offset":13455},"end":{"line":553,"column":57,"offset":13456},"indent":[]}}],"position":{"start":{"line":553,"column":55,"offset":13454},"end":{"line":553,"column":58,"offset":13457},"indent":[]}},{"type":"text","value":") extra space, where ","position":{"start":{"line":553,"column":58,"offset":13457},"end":{"line":553,"column":79,"offset":13478},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":553,"column":80,"offset":13479},"end":{"line":553,"column":81,"offset":13480},"indent":[]}}],"position":{"start":{"line":553,"column":79,"offset":13478},"end":{"line":553,"column":82,"offset":13481},"indent":[]}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":553,"column":82,"offset":13481},"end":{"line":553,"column":127,"offset":13526},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":13400},"end":{"line":553,"column":127,"offset":13526},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":555,"column":5,"offset":13534},"end":{"line":555,"column":14,"offset":13543},"indent":[]}}],"position":{"start":{"line":555,"column":1,"offset":13530},"end":{"line":555,"column":14,"offset":13543},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":557,"column":1,"offset":13547},"end":{"line":557,"column":8,"offset":13554},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":557,"column":8,"offset":13554},"end":{"line":557,"column":17,"offset":13563},"indent":[]}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":557,"column":17,"offset":13563},"end":{"line":557,"column":50,"offset":13596},"indent":[]}},{"type":"inlineCode","value":"triangle[0][0]","position":{"start":{"line":557,"column":50,"offset":13596},"end":{"line":557,"column":66,"offset":13612},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":557,"column":66,"offset":13612},"end":{"line":557,"column":70,"offset":13616},"indent":[]}},{"type":"inlineCode","value":"triangle[i][j]","position":{"start":{"line":557,"column":70,"offset":13616},"end":{"line":557,"column":86,"offset":13632},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":557,"column":86,"offset":13632},"end":{"line":557,"column":87,"offset":13633},"indent":[]}}],"position":{"start":{"line":557,"column":1,"offset":13547},"end":{"line":557,"column":87,"offset":13633},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0","position":{"start":{"line":559,"column":1,"offset":13637},"end":{"line":563,"column":4,"offset":13799},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":565,"column":1,"offset":13803},"end":{"line":565,"column":27,"offset":13829},"indent":[]}}],"position":{"start":{"line":565,"column":1,"offset":13803},"end":{"line":565,"column":27,"offset":13829},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};","position":{"start":{"line":567,"column":1,"offset":13833},"end":{"line":587,"column":4,"offset":14341},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":589,"column":1,"offset":14345},"end":{"line":589,"column":4,"offset":14348},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":591,"column":1,"offset":14352},"end":{"line":593,"column":10,"offset":14396},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":593,"column":10,"offset":14396},"end":{"line":593,"column":40,"offset":14426},"indent":[]}}],"position":{"start":{"line":593,"column":10,"offset":14396},"end":{"line":593,"column":40,"offset":14426},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":593,"column":40,"offset":14426},"end":{"line":594,"column":24,"offset":14451},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":594,"column":24,"offset":14451},"end":{"line":594,"column":68,"offset":14495},"indent":[]}}],"position":{"start":{"line":594,"column":24,"offset":14451},"end":{"line":594,"column":68,"offset":14495},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":594,"column":68,"offset":14495},"end":{"line":596,"column":21,"offset":14537},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-subarray","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":596,"column":21,"offset":14537},"end":{"line":596,"column":67,"offset":14583},"indent":[]}}],"position":{"start":{"line":596,"column":21,"offset":14537},"end":{"line":596,"column":67,"offset":14583},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":596,"column":67,"offset":14583},"end":{"line":597,"column":39,"offset":14623},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":597,"column":39,"offset":14623},"end":{"line":597,"column":103,"offset":14687},"indent":[]}}],"position":{"start":{"line":597,"column":39,"offset":14623},"end":{"line":597,"column":103,"offset":14687},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":597,"column":103,"offset":14687},"end":{"line":598,"column":40,"offset":14728},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":598,"column":40,"offset":14728},"end":{"line":598,"column":105,"offset":14793},"indent":[]}}],"position":{"start":{"line":598,"column":40,"offset":14728},"end":{"line":598,"column":105,"offset":14793},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":598,"column":105,"offset":14793},"end":{"line":599,"column":39,"offset":14833},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":599,"column":39,"offset":14833},"end":{"line":599,"column":103,"offset":14897},"indent":[]}}],"position":{"start":{"line":599,"column":39,"offset":14833},"end":{"line":599,"column":103,"offset":14897},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":599,"column":103,"offset":14897},"end":{"line":600,"column":50,"offset":14948},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":600,"column":50,"offset":14948},"end":{"line":600,"column":125,"offset":15023},"indent":[]}}],"position":{"start":{"line":600,"column":50,"offset":14948},"end":{"line":600,"column":125,"offset":15023},"indent":[]}}],"position":{"start":{"line":591,"column":1,"offset":14352},"end":{"line":600,"column":125,"offset":15023},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":602,"column":1,"offset":15027},"end":{"line":602,"column":4,"offset":15030},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":604,"column":2,"offset":15035},"end":{"line":604,"column":142,"offset":15175},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":15034},"end":{"line":604,"column":247,"offset":15280},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":15034},"end":{"line":604,"column":247,"offset":15280},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":606,"column":4,"offset":15287},"end":{"line":606,"column":6,"offset":15289},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":606,"column":7,"offset":15290},"end":{"line":606,"column":43,"offset":15326},"indent":[]}}],"position":{"start":{"line":606,"column":6,"offset":15289},"end":{"line":606,"column":120,"offset":15403},"indent":[]}}],"position":{"start":{"line":606,"column":1,"offset":15284},"end":{"line":606,"column":120,"offset":15403},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":608,"column":5,"offset":15411},"end":{"line":608,"column":13,"offset":15419},"indent":[]}}],"position":{"start":{"line":608,"column":1,"offset":15407},"end":{"line":608,"column":13,"offset":15419},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":610,"column":1,"offset":15423},"end":{"line":610,"column":37,"offset":15459},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":610,"column":38,"offset":15460},"end":{"line":610,"column":39,"offset":15461},"indent":[]}}],"position":{"start":{"line":610,"column":37,"offset":15459},"end":{"line":610,"column":40,"offset":15462},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":610,"column":40,"offset":15462},"end":{"line":610,"column":88,"offset":15510},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":610,"column":89,"offset":15511},"end":{"line":610,"column":90,"offset":15512},"indent":[]}}],"position":{"start":{"line":610,"column":88,"offset":15510},"end":{"line":610,"column":91,"offset":15513},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":610,"column":91,"offset":15513},"end":{"line":610,"column":92,"offset":15514},"indent":[]}}],"position":{"start":{"line":610,"column":1,"offset":15423},"end":{"line":610,"column":92,"offset":15514},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":612,"column":1,"offset":15518},"end":{"line":612,"column":160,"offset":15677},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15518},"end":{"line":612,"column":160,"offset":15677},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":614,"column":1,"offset":15681},"end":{"line":614,"column":54,"offset":15734},"indent":[]}}],"position":{"start":{"line":614,"column":1,"offset":15681},"end":{"line":614,"column":54,"offset":15734},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":616,"column":3,"offset":15740},"end":{"line":616,"column":13,"offset":15750},"indent":[]}}],"position":{"start":{"line":616,"column":1,"offset":15738},"end":{"line":616,"column":15,"offset":15752},"indent":[]}}],"position":{"start":{"line":616,"column":1,"offset":15738},"end":{"line":616,"column":15,"offset":15752},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.","position":{"start":{"line":618,"column":1,"offset":15756},"end":{"line":624,"column":4,"offset":15969},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":626,"column":3,"offset":15975},"end":{"line":626,"column":13,"offset":15985},"indent":[]}}],"position":{"start":{"line":626,"column":1,"offset":15973},"end":{"line":626,"column":15,"offset":15987},"indent":[]}}],"position":{"start":{"line":626,"column":1,"offset":15973},"end":{"line":626,"column":15,"offset":15987},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":628,"column":1,"offset":15991},"end":{"line":633,"column":4,"offset":16105},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":635,"column":5,"offset":16113},"end":{"line":635,"column":14,"offset":16122},"indent":[]}}],"position":{"start":{"line":635,"column":1,"offset":16109},"end":{"line":635,"column":14,"offset":16122},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":637,"column":1,"offset":16126},"end":{"line":637,"column":110,"offset":16235},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":637,"column":110,"offset":16235},"end":{"line":637,"column":113,"offset":16238},"indent":[]}},{"type":"text","value":" whose price ","position":{"start":{"line":637,"column":113,"offset":16238},"end":{"line":637,"column":126,"offset":16251},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":637,"column":126,"offset":16251},"end":{"line":637,"column":136,"offset":16261},"indent":[]}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":637,"column":136,"offset":16261},"end":{"line":637,"column":227,"offset":16352},"indent":[]}},{"type":"inlineCode","value":"j-1","position":{"start":{"line":637,"column":227,"offset":16352},"end":{"line":637,"column":232,"offset":16357},"indent":[]}},{"type":"text","value":" instead and make ","position":{"start":{"line":637,"column":232,"offset":16357},"end":{"line":637,"column":250,"offset":16375},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":637,"column":250,"offset":16375},"end":{"line":637,"column":253,"offset":16378},"indent":[]}},{"type":"text","value":" the new base.","position":{"start":{"line":637,"column":253,"offset":16378},"end":{"line":637,"column":267,"offset":16392},"indent":[]}}],"position":{"start":{"line":637,"column":1,"offset":16126},"end":{"line":637,"column":267,"offset":16392},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because ","position":{"start":{"line":639,"column":1,"offset":16396},"end":{"line":639,"column":9,"offset":16404},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":639,"column":9,"offset":16404},"end":{"line":639,"column":19,"offset":16414},"indent":[]}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":639,"column":19,"offset":16414},"end":{"line":639,"column":50,"offset":16445},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":639,"column":50,"offset":16445},"end":{"line":639,"column":53,"offset":16448},"indent":[]}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":639,"column":53,"offset":16448},"end":{"line":639,"column":125,"offset":16520},"indent":[]}}],"position":{"start":{"line":639,"column":1,"offset":16396},"end":{"line":639,"column":125,"offset":16520},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};","position":{"start":{"line":641,"column":1,"offset":16524},"end":{"line":659,"column":4,"offset":16933},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":661,"column":1,"offset":16937},"end":{"line":661,"column":4,"offset":16940},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":663,"column":1,"offset":16944},"end":{"line":665,"column":10,"offset":16988},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":665,"column":10,"offset":16988},"end":{"line":665,"column":40,"offset":17018},"indent":[]}}],"position":{"start":{"line":665,"column":10,"offset":16988},"end":{"line":665,"column":40,"offset":17018},"indent":[]}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":665,"column":40,"offset":17018},"end":{"line":666,"column":11,"offset":17030},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/greedy","children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":666,"column":11,"offset":17030},"end":{"line":666,"column":42,"offset":17061},"indent":[]}}],"position":{"start":{"line":666,"column":11,"offset":17030},"end":{"line":666,"column":42,"offset":17061},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":666,"column":42,"offset":17061},"end":{"line":668,"column":36,"offset":17118},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":668,"column":36,"offset":17118},"end":{"line":668,"column":97,"offset":17179},"indent":[]}}],"position":{"start":{"line":668,"column":36,"offset":17118},"end":{"line":668,"column":97,"offset":17179},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":668,"column":97,"offset":17179},"end":{"line":669,"column":40,"offset":17220},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":669,"column":40,"offset":17220},"end":{"line":669,"column":105,"offset":17285},"indent":[]}}],"position":{"start":{"line":669,"column":40,"offset":17220},"end":{"line":669,"column":105,"offset":17285},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":669,"column":105,"offset":17285},"end":{"line":670,"column":39,"offset":17325},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":670,"column":39,"offset":17325},"end":{"line":670,"column":103,"offset":17389},"indent":[]}}],"position":{"start":{"line":670,"column":39,"offset":17325},"end":{"line":670,"column":103,"offset":17389},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":670,"column":103,"offset":17389},"end":{"line":671,"column":50,"offset":17440},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":671,"column":50,"offset":17440},"end":{"line":671,"column":125,"offset":17515},"indent":[]}}],"position":{"start":{"line":671,"column":50,"offset":17440},"end":{"line":671,"column":125,"offset":17515},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":671,"column":125,"offset":17515},"end":{"line":672,"column":57,"offset":17573},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":672,"column":57,"offset":17573},"end":{"line":672,"column":139,"offset":17655},"indent":[]}}],"position":{"start":{"line":672,"column":57,"offset":17573},"end":{"line":672,"column":139,"offset":17655},"indent":[]}}],"position":{"start":{"line":663,"column":1,"offset":16944},"end":{"line":672,"column":139,"offset":17655},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":674,"column":1,"offset":17659},"end":{"line":674,"column":4,"offset":17662},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":676,"column":2,"offset":17667},"end":{"line":676,"column":142,"offset":17807},"indent":[]}}],"position":{"start":{"line":676,"column":1,"offset":17666},"end":{"line":676,"column":253,"offset":17918},"indent":[]}}],"position":{"start":{"line":676,"column":1,"offset":17666},"end":{"line":676,"column":253,"offset":17918},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":678,"column":4,"offset":17925},"end":{"line":678,"column":6,"offset":17927},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/","children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":678,"column":7,"offset":17928},"end":{"line":678,"column":46,"offset":17967},"indent":[]}}],"position":{"start":{"line":678,"column":6,"offset":17927},"end":{"line":678,"column":126,"offset":18047},"indent":[]}}],"position":{"start":{"line":678,"column":1,"offset":17922},"end":{"line":678,"column":126,"offset":18047},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":680,"column":5,"offset":18055},"end":{"line":680,"column":13,"offset":18063},"indent":[]}}],"position":{"start":{"line":680,"column":1,"offset":18051},"end":{"line":680,"column":13,"offset":18063},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":682,"column":1,"offset":18067},"end":{"line":682,"column":37,"offset":18103},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":682,"column":38,"offset":18104},"end":{"line":682,"column":39,"offset":18105},"indent":[]}}],"position":{"start":{"line":682,"column":37,"offset":18103},"end":{"line":682,"column":40,"offset":18106},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":682,"column":40,"offset":18106},"end":{"line":682,"column":88,"offset":18154},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":682,"column":89,"offset":18155},"end":{"line":682,"column":90,"offset":18156},"indent":[]}}],"position":{"start":{"line":682,"column":88,"offset":18154},"end":{"line":682,"column":91,"offset":18157},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":682,"column":91,"offset":18157},"end":{"line":682,"column":92,"offset":18158},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":18067},"end":{"line":682,"column":92,"offset":18158},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":684,"column":1,"offset":18162},"end":{"line":684,"column":162,"offset":18323},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":18162},"end":{"line":684,"column":162,"offset":18323},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":686,"column":3,"offset":18329},"end":{"line":686,"column":8,"offset":18334},"indent":[]}}],"position":{"start":{"line":686,"column":1,"offset":18327},"end":{"line":686,"column":10,"offset":18336},"indent":[]}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":686,"column":10,"offset":18336},"end":{"line":686,"column":125,"offset":18451},"indent":[]}}],"position":{"start":{"line":686,"column":1,"offset":18327},"end":{"line":686,"column":125,"offset":18451},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":688,"column":3,"offset":18457},"end":{"line":688,"column":13,"offset":18467},"indent":[]}}],"position":{"start":{"line":688,"column":1,"offset":18455},"end":{"line":688,"column":15,"offset":18469},"indent":[]}}],"position":{"start":{"line":688,"column":1,"offset":18455},"end":{"line":688,"column":15,"offset":18469},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.","position":{"start":{"line":690,"column":1,"offset":18473},"end":{"line":696,"column":4,"offset":18697},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":698,"column":3,"offset":18703},"end":{"line":698,"column":13,"offset":18713},"indent":[]}}],"position":{"start":{"line":698,"column":1,"offset":18701},"end":{"line":698,"column":15,"offset":18715},"indent":[]}}],"position":{"start":{"line":698,"column":1,"offset":18701},"end":{"line":698,"column":15,"offset":18715},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":700,"column":1,"offset":18719},"end":{"line":707,"column":4,"offset":19040},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":709,"column":3,"offset":19046},"end":{"line":709,"column":13,"offset":19056},"indent":[]}}],"position":{"start":{"line":709,"column":1,"offset":19044},"end":{"line":709,"column":15,"offset":19058},"indent":[]}}],"position":{"start":{"line":709,"column":1,"offset":19044},"end":{"line":709,"column":15,"offset":19058},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":711,"column":1,"offset":19062},"end":{"line":715,"column":4,"offset":19174},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":717,"column":5,"offset":19182},"end":{"line":717,"column":14,"offset":19191},"indent":[]}}],"position":{"start":{"line":717,"column":1,"offset":19178},"end":{"line":717,"column":14,"offset":19191},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":719,"column":1,"offset":19195},"end":{"line":719,"column":144,"offset":19338},"indent":[]}}],"position":{"start":{"line":719,"column":1,"offset":19195},"end":{"line":719,"column":144,"offset":19338},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};","position":{"start":{"line":721,"column":1,"offset":19342},"end":{"line":735,"column":4,"offset":19650},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":737,"column":1,"offset":19654},"end":{"line":737,"column":4,"offset":19657},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":739,"column":1,"offset":19661},"end":{"line":741,"column":10,"offset":19705},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":741,"column":10,"offset":19705},"end":{"line":741,"column":40,"offset":19735},"indent":[]}}],"position":{"start":{"line":741,"column":10,"offset":19705},"end":{"line":741,"column":40,"offset":19735},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":741,"column":40,"offset":19735},"end":{"line":742,"column":24,"offset":19760},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":742,"column":24,"offset":19760},"end":{"line":742,"column":68,"offset":19804},"indent":[]}}],"position":{"start":{"line":742,"column":24,"offset":19760},"end":{"line":742,"column":68,"offset":19804},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":742,"column":68,"offset":19804},"end":{"line":744,"column":36,"offset":19861},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":744,"column":36,"offset":19861},"end":{"line":744,"column":97,"offset":19922},"indent":[]}}],"position":{"start":{"line":744,"column":36,"offset":19861},"end":{"line":744,"column":97,"offset":19922},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":744,"column":97,"offset":19922},"end":{"line":745,"column":39,"offset":19962},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":745,"column":39,"offset":19962},"end":{"line":745,"column":103,"offset":20026},"indent":[]}}],"position":{"start":{"line":745,"column":39,"offset":19962},"end":{"line":745,"column":103,"offset":20026},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":745,"column":103,"offset":20026},"end":{"line":746,"column":39,"offset":20066},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":746,"column":39,"offset":20066},"end":{"line":746,"column":103,"offset":20130},"indent":[]}}],"position":{"start":{"line":746,"column":39,"offset":20066},"end":{"line":746,"column":103,"offset":20130},"indent":[]}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":746,"column":103,"offset":20130},"end":{"line":747,"column":47,"offset":20178},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":747,"column":47,"offset":20178},"end":{"line":747,"column":119,"offset":20250},"indent":[]}}],"position":{"start":{"line":747,"column":47,"offset":20178},"end":{"line":747,"column":119,"offset":20250},"indent":[]}}],"position":{"start":{"line":739,"column":1,"offset":19661},"end":{"line":747,"column":119,"offset":20250},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":749,"column":1,"offset":20254},"end":{"line":749,"column":4,"offset":20257},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":751,"column":2,"offset":20262},"end":{"line":751,"column":142,"offset":20402},"indent":[]}}],"position":{"start":{"line":751,"column":1,"offset":20261},"end":{"line":751,"column":255,"offset":20515},"indent":[]}}],"position":{"start":{"line":751,"column":1,"offset":20261},"end":{"line":751,"column":255,"offset":20515},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":753,"column":4,"offset":20522},"end":{"line":753,"column":6,"offset":20524},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/","children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":753,"column":7,"offset":20525},"end":{"line":753,"column":47,"offset":20565},"indent":[]}}],"position":{"start":{"line":753,"column":6,"offset":20524},"end":{"line":753,"column":128,"offset":20646},"indent":[]}}],"position":{"start":{"line":753,"column":1,"offset":20519},"end":{"line":753,"column":128,"offset":20646},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":755,"column":5,"offset":20654},"end":{"line":755,"column":13,"offset":20662},"indent":[]}}],"position":{"start":{"line":755,"column":1,"offset":20650},"end":{"line":755,"column":13,"offset":20662},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":757,"column":1,"offset":20666},"end":{"line":757,"column":37,"offset":20702},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":757,"column":38,"offset":20703},"end":{"line":757,"column":39,"offset":20704},"indent":[]}}],"position":{"start":{"line":757,"column":37,"offset":20702},"end":{"line":757,"column":40,"offset":20705},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":757,"column":40,"offset":20705},"end":{"line":757,"column":88,"offset":20753},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":757,"column":89,"offset":20754},"end":{"line":757,"column":90,"offset":20755},"indent":[]}}],"position":{"start":{"line":757,"column":88,"offset":20753},"end":{"line":757,"column":91,"offset":20756},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":757,"column":91,"offset":20756},"end":{"line":757,"column":92,"offset":20757},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":20666},"end":{"line":757,"column":92,"offset":20757},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":759,"column":1,"offset":20761},"end":{"line":759,"column":74,"offset":20834},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":759,"column":75,"offset":20835},"end":{"line":759,"column":78,"offset":20838},"indent":[]}}],"position":{"start":{"line":759,"column":74,"offset":20834},"end":{"line":759,"column":79,"offset":20839},"indent":[]}},{"type":"text","value":" transactions.","position":{"start":{"line":759,"column":79,"offset":20839},"end":{"line":759,"column":93,"offset":20853},"indent":[]}}],"position":{"start":{"line":759,"column":1,"offset":20761},"end":{"line":759,"column":93,"offset":20853},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":761,"column":3,"offset":20859},"end":{"line":761,"column":8,"offset":20864},"indent":[]}}],"position":{"start":{"line":761,"column":1,"offset":20857},"end":{"line":761,"column":10,"offset":20866},"indent":[]}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":761,"column":10,"offset":20866},"end":{"line":761,"column":124,"offset":20980},"indent":[]}}],"position":{"start":{"line":761,"column":1,"offset":20857},"end":{"line":761,"column":124,"offset":20980},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":763,"column":3,"offset":20986},"end":{"line":763,"column":13,"offset":20996},"indent":[]}}],"position":{"start":{"line":763,"column":1,"offset":20984},"end":{"line":763,"column":15,"offset":20998},"indent":[]}}],"position":{"start":{"line":763,"column":1,"offset":20984},"end":{"line":763,"column":15,"offset":20998},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.","position":{"start":{"line":765,"column":1,"offset":21002},"end":{"line":770,"column":4,"offset":21228},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":772,"column":3,"offset":21234},"end":{"line":772,"column":13,"offset":21244},"indent":[]}}],"position":{"start":{"line":772,"column":1,"offset":21232},"end":{"line":772,"column":15,"offset":21246},"indent":[]}}],"position":{"start":{"line":772,"column":1,"offset":21232},"end":{"line":772,"column":15,"offset":21246},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":774,"column":1,"offset":21250},"end":{"line":781,"column":4,"offset":21571},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":783,"column":3,"offset":21577},"end":{"line":783,"column":13,"offset":21587},"indent":[]}}],"position":{"start":{"line":783,"column":1,"offset":21575},"end":{"line":783,"column":15,"offset":21589},"indent":[]}}],"position":{"start":{"line":783,"column":1,"offset":21575},"end":{"line":783,"column":15,"offset":21589},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":785,"column":1,"offset":21593},"end":{"line":789,"column":4,"offset":21705},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":791,"column":5,"offset":21713},"end":{"line":791,"column":14,"offset":21722},"indent":[]}}],"position":{"start":{"line":791,"column":1,"offset":21709},"end":{"line":791,"column":14,"offset":21722},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":793,"column":1,"offset":21726},"end":{"line":793,"column":200,"offset":21925},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":793,"column":201,"offset":21926},"end":{"line":793,"column":204,"offset":21929},"indent":[]}}],"position":{"start":{"line":793,"column":200,"offset":21925},"end":{"line":793,"column":205,"offset":21930},"indent":[]}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":793,"column":205,"offset":21930},"end":{"line":793,"column":256,"offset":21981},"indent":[]}},{"type":"inlineCode","value":"[0...k]","position":{"start":{"line":793,"column":256,"offset":21981},"end":{"line":793,"column":265,"offset":21990},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":793,"column":265,"offset":21990},"end":{"line":793,"column":270,"offset":21995},"indent":[]}},{"type":"inlineCode","value":"[k...n-1]","position":{"start":{"line":793,"column":270,"offset":21995},"end":{"line":793,"column":281,"offset":22006},"indent":[]}},{"type":"text","value":". Notice ","position":{"start":{"line":793,"column":281,"offset":22006},"end":{"line":793,"column":290,"offset":22015},"indent":[]}},{"type":"inlineCode","value":"k","position":{"start":{"line":793,"column":290,"offset":22015},"end":{"line":793,"column":293,"offset":22018},"indent":[]}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":793,"column":293,"offset":22018},"end":{"line":793,"column":392,"offset":22117},"indent":[]}}],"position":{"start":{"line":793,"column":1,"offset":21726},"end":{"line":793,"column":392,"offset":22117},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":795,"column":1,"offset":22121},"end":{"line":795,"column":8,"offset":22128},"indent":[]}},{"type":"inlineCode","value":"p1(i)","position":{"start":{"line":795,"column":8,"offset":22128},"end":{"line":795,"column":15,"offset":22135},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":795,"column":15,"offset":22135},"end":{"line":795,"column":44,"offset":22164},"indent":[]}},{"type":"inlineCode","value":"[0...i]","position":{"start":{"line":795,"column":44,"offset":22164},"end":{"line":795,"column":53,"offset":22173},"indent":[]}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":795,"column":53,"offset":22173},"end":{"line":795,"column":88,"offset":22208},"indent":[]}},{"type":"link","title":null,"url":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":795,"column":89,"offset":22209},"end":{"line":795,"column":125,"offset":22245},"indent":[]}}],"position":{"start":{"line":795,"column":88,"offset":22208},"end":{"line":795,"column":183,"offset":22303},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":795,"column":183,"offset":22303},"end":{"line":795,"column":184,"offset":22304},"indent":[]}}],"position":{"start":{"line":795,"column":1,"offset":22121},"end":{"line":795,"column":184,"offset":22304},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1","position":{"start":{"line":797,"column":1,"offset":22308},"end":{"line":800,"column":4,"offset":22411},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":802,"column":1,"offset":22415},"end":{"line":802,"column":8,"offset":22422},"indent":[]}},{"type":"inlineCode","value":"p2(i)","position":{"start":{"line":802,"column":8,"offset":22422},"end":{"line":802,"column":15,"offset":22429},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":802,"column":15,"offset":22429},"end":{"line":802,"column":44,"offset":22458},"indent":[]}},{"type":"inlineCode","value":"[i...n-1]","position":{"start":{"line":802,"column":44,"offset":22458},"end":{"line":802,"column":55,"offset":22469},"indent":[]}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":802,"column":55,"offset":22469},"end":{"line":802,"column":79,"offset":22493},"indent":[]}},{"type":"inlineCode","value":"p1","position":{"start":{"line":802,"column":79,"offset":22493},"end":{"line":802,"column":83,"offset":22497},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":802,"column":83,"offset":22497},"end":{"line":802,"column":84,"offset":22498},"indent":[]}}],"position":{"start":{"line":802,"column":1,"offset":22415},"end":{"line":802,"column":84,"offset":22498},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0","position":{"start":{"line":804,"column":1,"offset":22502},"end":{"line":807,"column":4,"offset":22607},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":809,"column":1,"offset":22611},"end":{"line":809,"column":8,"offset":22618},"indent":[]}},{"type":"inlineCode","value":"f(k)","position":{"start":{"line":809,"column":8,"offset":22618},"end":{"line":809,"column":14,"offset":22624},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":809,"column":14,"offset":22624},"end":{"line":809,"column":21,"offset":22631},"indent":[]}},{"type":"inlineCode","value":"p1(k) + p2(k)","position":{"start":{"line":809,"column":21,"offset":22631},"end":{"line":809,"column":36,"offset":22646},"indent":[]}},{"type":"text","value":". We need to get ","position":{"start":{"line":809,"column":36,"offset":22646},"end":{"line":809,"column":53,"offset":22663},"indent":[]}},{"type":"inlineCode","value":"max( f(0), ..., f(n-1) )","position":{"start":{"line":809,"column":53,"offset":22663},"end":{"line":809,"column":79,"offset":22689},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":809,"column":79,"offset":22689},"end":{"line":809,"column":80,"offset":22690},"indent":[]}}],"position":{"start":{"line":809,"column":1,"offset":22611},"end":{"line":809,"column":80,"offset":22690},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};","position":{"start":{"line":811,"column":1,"offset":22694},"end":{"line":840,"column":4,"offset":23322},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":842,"column":1,"offset":23326},"end":{"line":842,"column":4,"offset":23329},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":844,"column":1,"offset":23333},"end":{"line":846,"column":9,"offset":23376},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":846,"column":9,"offset":23376},"end":{"line":846,"column":38,"offset":23405},"indent":[]}}],"position":{"start":{"line":846,"column":9,"offset":23376},"end":{"line":846,"column":38,"offset":23405},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":846,"column":38,"offset":23405},"end":{"line":847,"column":23,"offset":23429},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":847,"column":23,"offset":23429},"end":{"line":847,"column":66,"offset":23472},"indent":[]}}],"position":{"start":{"line":847,"column":23,"offset":23429},"end":{"line":847,"column":66,"offset":23472},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":847,"column":66,"offset":23472},"end":{"line":849,"column":13,"offset":23506},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":849,"column":13,"offset":23506},"end":{"line":849,"column":51,"offset":23544},"indent":[]}}],"position":{"start":{"line":849,"column":13,"offset":23506},"end":{"line":849,"column":51,"offset":23544},"indent":[]}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":849,"column":51,"offset":23544},"end":{"line":850,"column":29,"offset":23574},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers","children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":850,"column":29,"offset":23574},"end":{"line":850,"column":83,"offset":23628},"indent":[]}}],"position":{"start":{"line":850,"column":29,"offset":23574},"end":{"line":850,"column":83,"offset":23628},"indent":[]}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":850,"column":83,"offset":23628},"end":{"line":851,"column":16,"offset":23645},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum-iv","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":851,"column":16,"offset":23645},"end":{"line":851,"column":57,"offset":23686},"indent":[]}}],"position":{"start":{"line":851,"column":16,"offset":23645},"end":{"line":851,"column":57,"offset":23686},"indent":[]}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":851,"column":57,"offset":23686},"end":{"line":852,"column":26,"offset":23713},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-univalue-path","children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":852,"column":26,"offset":23713},"end":{"line":852,"column":77,"offset":23764},"indent":[]}}],"position":{"start":{"line":852,"column":26,"offset":23713},"end":{"line":852,"column":77,"offset":23764},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":23333},"end":{"line":852,"column":77,"offset":23764},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":854,"column":1,"offset":23768},"end":{"line":854,"column":4,"offset":23771},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":856,"column":2,"offset":23776},"end":{"line":856,"column":142,"offset":23916},"indent":[]}}],"position":{"start":{"line":856,"column":1,"offset":23775},"end":{"line":856,"column":241,"offset":24015},"indent":[]}}],"position":{"start":{"line":856,"column":1,"offset":23775},"end":{"line":856,"column":241,"offset":24015},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":858,"column":4,"offset":24022},"end":{"line":858,"column":6,"offset":24024},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/","children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":858,"column":7,"offset":24025},"end":{"line":858,"column":40,"offset":24058},"indent":[]}}],"position":{"start":{"line":858,"column":6,"offset":24024},"end":{"line":858,"column":114,"offset":24132},"indent":[]}}],"position":{"start":{"line":858,"column":1,"offset":24019},"end":{"line":858,"column":114,"offset":24132},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":860,"column":5,"offset":24140},"end":{"line":860,"column":13,"offset":24148},"indent":[]}}],"position":{"start":{"line":860,"column":1,"offset":24136},"end":{"line":860,"column":13,"offset":24148},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a ","position":{"start":{"line":862,"column":1,"offset":24152},"end":{"line":862,"column":9,"offset":24160},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"non-empty","position":{"start":{"line":862,"column":11,"offset":24162},"end":{"line":862,"column":20,"offset":24171},"indent":[]}}],"position":{"start":{"line":862,"column":9,"offset":24160},"end":{"line":862,"column":22,"offset":24173},"indent":[]}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":862,"column":22,"offset":24173},"end":{"line":862,"column":62,"offset":24213},"indent":[]}}],"position":{"start":{"line":862,"column":1,"offset":24152},"end":{"line":862,"column":62,"offset":24213},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":864,"column":1,"offset":24217},"end":{"line":864,"column":168,"offset":24384},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"at least one node","position":{"start":{"line":864,"column":170,"offset":24386},"end":{"line":864,"column":187,"offset":24403},"indent":[]}}],"position":{"start":{"line":864,"column":168,"offset":24384},"end":{"line":864,"column":189,"offset":24405},"indent":[]}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":864,"column":189,"offset":24405},"end":{"line":864,"column":231,"offset":24447},"indent":[]}}],"position":{"start":{"line":864,"column":1,"offset":24217},"end":{"line":864,"column":231,"offset":24447},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":866,"column":3,"offset":24453},"end":{"line":866,"column":13,"offset":24463},"indent":[]}}],"position":{"start":{"line":866,"column":1,"offset":24451},"end":{"line":866,"column":15,"offset":24465},"indent":[]}}],"position":{"start":{"line":866,"column":1,"offset":24451},"end":{"line":866,"column":15,"offset":24465},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6","position":{"start":{"line":868,"column":1,"offset":24469},"end":{"line":877,"column":4,"offset":24543},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":879,"column":3,"offset":24549},"end":{"line":879,"column":13,"offset":24559},"indent":[]}}],"position":{"start":{"line":879,"column":1,"offset":24547},"end":{"line":879,"column":15,"offset":24561},"indent":[]}}],"position":{"start":{"line":879,"column":1,"offset":24547},"end":{"line":879,"column":15,"offset":24561},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42","position":{"start":{"line":881,"column":1,"offset":24565},"end":{"line":892,"column":4,"offset":24671},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":894,"column":5,"offset":24679},"end":{"line":894,"column":14,"offset":24688},"indent":[]}}],"position":{"start":{"line":894,"column":1,"offset":24675},"end":{"line":894,"column":14,"offset":24688},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":896,"column":1,"offset":24692},"end":{"line":896,"column":11,"offset":24702},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":896,"column":11,"offset":24702},"end":{"line":896,"column":17,"offset":24708},"indent":[]}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":896,"column":17,"offset":24708},"end":{"line":896,"column":71,"offset":24762},"indent":[]}}],"position":{"start":{"line":896,"column":1,"offset":24692},"end":{"line":896,"column":71,"offset":24762},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With ","position":{"start":{"line":898,"column":5,"offset":24770},"end":{"line":898,"column":10,"offset":24775},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":898,"column":10,"offset":24775},"end":{"line":898,"column":20,"offset":24785},"indent":[]}}],"position":{"start":{"line":898,"column":5,"offset":24770},"end":{"line":898,"column":20,"offset":24785},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":899,"column":8,"offset":24794},"end":{"line":899,"column":18,"offset":24804},"indent":[]}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":899,"column":18,"offset":24804},"end":{"line":899,"column":61,"offset":24847},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":899,"column":61,"offset":24847},"end":{"line":899,"column":72,"offset":24858},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":899,"column":72,"offset":24858},"end":{"line":899,"column":73,"offset":24859},"indent":[]}}],"position":{"start":{"line":899,"column":8,"offset":24794},"end":{"line":899,"column":73,"offset":24859},"indent":[]}}],"position":{"start":{"line":899,"column":5,"offset":24791},"end":{"line":899,"column":73,"offset":24859},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":900,"column":8,"offset":24868},"end":{"line":900,"column":18,"offset":24878},"indent":[]}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":900,"column":18,"offset":24878},"end":{"line":900,"column":63,"offset":24923},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":900,"column":63,"offset":24923},"end":{"line":900,"column":75,"offset":24935},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":900,"column":75,"offset":24935},"end":{"line":900,"column":76,"offset":24936},"indent":[]}}],"position":{"start":{"line":900,"column":8,"offset":24868},"end":{"line":900,"column":76,"offset":24936},"indent":[]}}],"position":{"start":{"line":900,"column":5,"offset":24865},"end":{"line":900,"column":76,"offset":24936},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":901,"column":8,"offset":24945},"end":{"line":901,"column":18,"offset":24955},"indent":[]}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":901,"column":18,"offset":24955},"end":{"line":901,"column":50,"offset":24987},"indent":[]}}],"position":{"start":{"line":901,"column":8,"offset":24945},"end":{"line":901,"column":50,"offset":24987},"indent":[]}}],"position":{"start":{"line":901,"column":5,"offset":24942},"end":{"line":901,"column":50,"offset":24987},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Just ","position":{"start":{"line":902,"column":8,"offset":24996},"end":{"line":902,"column":13,"offset":25001},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":902,"column":13,"offset":25001},"end":{"line":902,"column":23,"offset":25011},"indent":[]}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":902,"column":23,"offset":25011},"end":{"line":902,"column":65,"offset":25053},"indent":[]}}],"position":{"start":{"line":902,"column":8,"offset":24996},"end":{"line":902,"column":65,"offset":25053},"indent":[]}}],"position":{"start":{"line":902,"column":5,"offset":24993},"end":{"line":902,"column":65,"offset":25053},"indent":[]}}],"position":{"start":{"line":899,"column":5,"offset":24791},"end":{"line":902,"column":65,"offset":25053},"indent":[5,5,5]}}],"position":{"start":{"line":898,"column":1,"offset":24766},"end":{"line":902,"column":65,"offset":25053},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Without","position":{"start":{"line":903,"column":5,"offset":25059},"end":{"line":903,"column":12,"offset":25066},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":903,"column":12,"offset":25066},"end":{"line":903,"column":22,"offset":25076},"indent":[]}},{"type":"text","value":" (disconnected)","position":{"start":{"line":903,"column":22,"offset":25076},"end":{"line":903,"column":37,"offset":25091},"indent":[]}}],"position":{"start":{"line":903,"column":5,"offset":25059},"end":{"line":903,"column":37,"offset":25091},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":904,"column":8,"offset":25100},"end":{"line":904,"column":48,"offset":25140},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":904,"column":48,"offset":25140},"end":{"line":904,"column":59,"offset":25151},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":904,"column":59,"offset":25151},"end":{"line":904,"column":68,"offset":25160},"indent":[]}}],"position":{"start":{"line":904,"column":8,"offset":25100},"end":{"line":904,"column":68,"offset":25160},"indent":[]}}],"position":{"start":{"line":904,"column":5,"offset":25097},"end":{"line":904,"column":68,"offset":25160},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":905,"column":8,"offset":25169},"end":{"line":905,"column":48,"offset":25209},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":905,"column":48,"offset":25209},"end":{"line":905,"column":60,"offset":25221},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":905,"column":60,"offset":25221},"end":{"line":905,"column":69,"offset":25230},"indent":[]}}],"position":{"start":{"line":905,"column":8,"offset":25169},"end":{"line":905,"column":69,"offset":25230},"indent":[]}}],"position":{"start":{"line":905,"column":5,"offset":25166},"end":{"line":905,"column":69,"offset":25230},"indent":[]}}],"position":{"start":{"line":904,"column":5,"offset":25097},"end":{"line":905,"column":69,"offset":25230},"indent":[5]}}],"position":{"start":{"line":903,"column":1,"offset":25055},"end":{"line":905,"column":69,"offset":25230},"indent":[1,1]}}],"position":{"start":{"line":898,"column":1,"offset":24766},"end":{"line":905,"column":69,"offset":25230},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":907,"column":1,"offset":25234},"end":{"line":907,"column":38,"offset":25271},"indent":[]}}],"position":{"start":{"line":907,"column":1,"offset":25234},"end":{"line":907,"column":38,"offset":25271},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":909,"column":6,"offset":25280},"end":{"line":909,"column":9,"offset":25283},"indent":[]}}],"position":{"start":{"line":909,"column":1,"offset":25275},"end":{"line":909,"column":9,"offset":25283},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":911,"column":1,"offset":25287},"end":{"line":911,"column":95,"offset":25381},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":911,"column":95,"offset":25381},"end":{"line":911,"column":101,"offset":25387},"indent":[]}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":911,"column":101,"offset":25387},"end":{"line":911,"column":151,"offset":25437},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":911,"column":151,"offset":25437},"end":{"line":911,"column":157,"offset":25443},"indent":[]}},{"type":"text","value":" node.","position":{"start":{"line":911,"column":157,"offset":25443},"end":{"line":911,"column":163,"offset":25449},"indent":[]}}],"position":{"start":{"line":911,"column":1,"offset":25287},"end":{"line":911,"column":163,"offset":25449},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}","position":{"start":{"line":913,"column":1,"offset":25453},"end":{"line":942,"column":4,"offset":26157},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":944,"column":6,"offset":26166},"end":{"line":944,"column":9,"offset":26169},"indent":[]}}],"position":{"start":{"line":944,"column":1,"offset":26161},"end":{"line":944,"column":9,"offset":26169},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":946,"column":1,"offset":26173},"end":{"line":946,"column":57,"offset":26229},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":946,"column":57,"offset":26229},"end":{"line":946,"column":63,"offset":26235},"indent":[]}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":946,"column":63,"offset":26235},"end":{"line":946,"column":127,"offset":26299},"indent":[]}}],"position":{"start":{"line":946,"column":1,"offset":26173},"end":{"line":946,"column":127,"offset":26299},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}","position":{"start":{"line":948,"column":1,"offset":26303},"end":{"line":983,"column":4,"offset":27135},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":985,"column":1,"offset":27139},"end":{"line":985,"column":4,"offset":27142},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":987,"column":1,"offset":27146},"end":{"line":989,"column":17,"offset":27197},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/two-pointers","children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":989,"column":17,"offset":27197},"end":{"line":989,"column":54,"offset":27234},"indent":[]}}],"position":{"start":{"line":989,"column":17,"offset":27197},"end":{"line":989,"column":54,"offset":27234},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":989,"column":54,"offset":27234},"end":{"line":990,"column":11,"offset":27246},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":990,"column":11,"offset":27246},"end":{"line":990,"column":42,"offset":27277},"indent":[]}}],"position":{"start":{"line":990,"column":11,"offset":27246},"end":{"line":990,"column":42,"offset":27277},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":990,"column":42,"offset":27277},"end":{"line":992,"column":27,"offset":27325},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/palindrome-linked-list","children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":992,"column":27,"offset":27325},"end":{"line":992,"column":79,"offset":27377},"indent":[]}}],"position":{"start":{"line":992,"column":27,"offset":27325},"end":{"line":992,"column":79,"offset":27377},"indent":[]}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":992,"column":79,"offset":27377},"end":{"line":993,"column":24,"offset":27402},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome-ii","children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":993,"column":24,"offset":27402},"end":{"line":993,"column":73,"offset":27451},"indent":[]}}],"position":{"start":{"line":993,"column":24,"offset":27402},"end":{"line":993,"column":73,"offset":27451},"indent":[]}}],"position":{"start":{"line":987,"column":1,"offset":27146},"end":{"line":993,"column":73,"offset":27451},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":995,"column":1,"offset":27455},"end":{"line":995,"column":4,"offset":27458},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":997,"column":2,"offset":27463},"end":{"line":997,"column":142,"offset":27603},"indent":[]}}],"position":{"start":{"line":997,"column":1,"offset":27462},"end":{"line":997,"column":217,"offset":27678},"indent":[]}}],"position":{"start":{"line":997,"column":1,"offset":27462},"end":{"line":997,"column":217,"offset":27678},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":999,"column":4,"offset":27685},"end":{"line":999,"column":6,"offset":27687},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome/description/","children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":999,"column":7,"offset":27688},"end":{"line":999,"column":28,"offset":27709},"indent":[]}}],"position":{"start":{"line":999,"column":6,"offset":27687},"end":{"line":999,"column":90,"offset":27771},"indent":[]}}],"position":{"start":{"line":999,"column":1,"offset":27682},"end":{"line":999,"column":90,"offset":27771},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1001,"column":5,"offset":27779},"end":{"line":1001,"column":13,"offset":27787},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":27775},"end":{"line":1001,"column":13,"offset":27787},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":1003,"column":1,"offset":27791},"end":{"line":1003,"column":110,"offset":27900},"indent":[]}}],"position":{"start":{"line":1003,"column":1,"offset":27791},"end":{"line":1003,"column":110,"offset":27900},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1005,"column":3,"offset":27906},"end":{"line":1005,"column":8,"offset":27911},"indent":[]}}],"position":{"start":{"line":1005,"column":1,"offset":27904},"end":{"line":1005,"column":10,"offset":27913},"indent":[]}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":1005,"column":10,"offset":27913},"end":{"line":1005,"column":87,"offset":27990},"indent":[]}}],"position":{"start":{"line":1005,"column":1,"offset":27904},"end":{"line":1005,"column":87,"offset":27990},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1007,"column":3,"offset":27996},"end":{"line":1007,"column":13,"offset":28006},"indent":[]}}],"position":{"start":{"line":1007,"column":1,"offset":27994},"end":{"line":1007,"column":15,"offset":28008},"indent":[]}}],"position":{"start":{"line":1007,"column":1,"offset":27994},"end":{"line":1007,"column":15,"offset":28008},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true","position":{"start":{"line":1009,"column":1,"offset":28012},"end":{"line":1013,"column":4,"offset":28077},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1015,"column":3,"offset":28083},"end":{"line":1015,"column":13,"offset":28093},"indent":[]}}],"position":{"start":{"line":1015,"column":1,"offset":28081},"end":{"line":1015,"column":15,"offset":28095},"indent":[]}}],"position":{"start":{"line":1015,"column":1,"offset":28081},"end":{"line":1015,"column":15,"offset":28095},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"race a car\"\nOutput: false","position":{"start":{"line":1017,"column":1,"offset":28099},"end":{"line":1021,"column":4,"offset":28145},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1023,"column":5,"offset":28153},"end":{"line":1023,"column":14,"offset":28162},"indent":[]}}],"position":{"start":{"line":1023,"column":1,"offset":28149},"end":{"line":1023,"column":14,"offset":28162},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":1025,"column":6,"offset":28171},"end":{"line":1025,"column":9,"offset":28174},"indent":[]}}],"position":{"start":{"line":1025,"column":1,"offset":28166},"end":{"line":1025,"column":9,"offset":28174},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};","position":{"start":{"line":1027,"column":1,"offset":28178},"end":{"line":1036,"column":4,"offset":28402},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":1038,"column":6,"offset":28411},"end":{"line":1038,"column":9,"offset":28414},"indent":[]}}],"position":{"start":{"line":1038,"column":1,"offset":28406},"end":{"line":1038,"column":9,"offset":28414},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1040,"column":1,"offset":28418},"end":{"line":1040,"column":49,"offset":28466},"indent":[]}}],"position":{"start":{"line":1040,"column":1,"offset":28418},"end":{"line":1040,"column":49,"offset":28466},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":1042,"column":1,"offset":28470},"end":{"line":1056,"column":4,"offset":28809},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"THREE","position":{"start":{"line":1058,"column":6,"offset":28818},"end":{"line":1058,"column":11,"offset":28823},"indent":[]}}],"position":{"start":{"line":1058,"column":1,"offset":28813},"end":{"line":1058,"column":11,"offset":28823},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1060,"column":1,"offset":28827},"end":{"line":1060,"column":24,"offset":28850},"indent":[]}}],"position":{"start":{"line":1060,"column":1,"offset":28827},"end":{"line":1060,"column":24,"offset":28850},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};","position":{"start":{"line":1062,"column":1,"offset":28854},"end":{"line":1098,"column":4,"offset":29802},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1100,"column":1,"offset":29806},"end":{"line":1100,"column":4,"offset":29809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1102,"column":1,"offset":29813},"end":{"line":1104,"column":10,"offset":29857},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1104,"column":10,"offset":29857},"end":{"line":1104,"column":40,"offset":29887},"indent":[]}}],"position":{"start":{"line":1104,"column":10,"offset":29857},"end":{"line":1104,"column":40,"offset":29887},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1104,"column":40,"offset":29887},"end":{"line":1105,"column":11,"offset":29899},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1105,"column":11,"offset":29899},"end":{"line":1105,"column":42,"offset":29930},"indent":[]}}],"position":{"start":{"line":1105,"column":11,"offset":29899},"end":{"line":1105,"column":42,"offset":29930},"indent":[]}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1105,"column":42,"offset":29930},"end":{"line":1106,"column":17,"offset":29948},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/backtracking","children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1106,"column":17,"offset":29948},"end":{"line":1106,"column":54,"offset":29985},"indent":[]}}],"position":{"start":{"line":1106,"column":17,"offset":29948},"end":{"line":1106,"column":54,"offset":29985},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1106,"column":54,"offset":29985},"end":{"line":1107,"column":25,"offset":30011},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1107,"column":25,"offset":30011},"end":{"line":1107,"column":70,"offset":30056},"indent":[]}}],"position":{"start":{"line":1107,"column":25,"offset":30011},"end":{"line":1107,"column":70,"offset":30056},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1107,"column":70,"offset":30056},"end":{"line":1109,"column":16,"offset":30093},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1109,"column":16,"offset":30093},"end":{"line":1109,"column":57,"offset":30134},"indent":[]}}],"position":{"start":{"line":1109,"column":16,"offset":30093},"end":{"line":1109,"column":57,"offset":30134},"indent":[]}}],"position":{"start":{"line":1102,"column":1,"offset":29813},"end":{"line":1109,"column":57,"offset":30134},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1111,"column":1,"offset":30138},"end":{"line":1111,"column":4,"offset":30141},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1113,"column":2,"offset":30146},"end":{"line":1113,"column":142,"offset":30286},"indent":[]}}],"position":{"start":{"line":1113,"column":1,"offset":30145},"end":{"line":1113,"column":213,"offset":30357},"indent":[]}}],"position":{"start":{"line":1113,"column":1,"offset":30145},"end":{"line":1113,"column":213,"offset":30357},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1115,"column":4,"offset":30364},"end":{"line":1115,"column":6,"offset":30366},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii/description/","children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1115,"column":7,"offset":30367},"end":{"line":1115,"column":26,"offset":30386},"indent":[]}}],"position":{"start":{"line":1115,"column":6,"offset":30366},"end":{"line":1115,"column":86,"offset":30446},"indent":[]}}],"position":{"start":{"line":1115,"column":1,"offset":30361},"end":{"line":1115,"column":86,"offset":30446},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1117,"column":5,"offset":30454},"end":{"line":1117,"column":13,"offset":30462},"indent":[]}}],"position":{"start":{"line":1117,"column":1,"offset":30450},"end":{"line":1117,"column":13,"offset":30462},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1119,"column":1,"offset":30466},"end":{"line":1119,"column":18,"offset":30483},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1119,"column":19,"offset":30484},"end":{"line":1119,"column":28,"offset":30493},"indent":[]}}],"position":{"start":{"line":1119,"column":18,"offset":30483},"end":{"line":1119,"column":29,"offset":30494},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1119,"column":29,"offset":30494},"end":{"line":1119,"column":34,"offset":30499},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1119,"column":35,"offset":30500},"end":{"line":1119,"column":42,"offset":30507},"indent":[]}}],"position":{"start":{"line":1119,"column":34,"offset":30499},"end":{"line":1119,"column":43,"offset":30508},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1119,"column":43,"offset":30508},"end":{"line":1119,"column":126,"offset":30591},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1119,"column":127,"offset":30592},"end":{"line":1119,"column":136,"offset":30601},"indent":[]}}],"position":{"start":{"line":1119,"column":126,"offset":30591},"end":{"line":1119,"column":137,"offset":30602},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1119,"column":137,"offset":30602},"end":{"line":1119,"column":141,"offset":30606},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1119,"column":142,"offset":30607},"end":{"line":1119,"column":149,"offset":30614},"indent":[]}}],"position":{"start":{"line":1119,"column":141,"offset":30606},"end":{"line":1119,"column":150,"offset":30615},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1119,"column":150,"offset":30615},"end":{"line":1119,"column":162,"offset":30627},"indent":[]}}],"position":{"start":{"line":1119,"column":1,"offset":30466},"end":{"line":1119,"column":162,"offset":30627},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1121,"column":4,"offset":30634},"end":{"line":1121,"column":44,"offset":30674},"indent":[]}}],"position":{"start":{"line":1121,"column":4,"offset":30634},"end":{"line":1121,"column":44,"offset":30674},"indent":[]}}],"position":{"start":{"line":1121,"column":1,"offset":30631},"end":{"line":1121,"column":44,"offset":30674},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1122,"column":4,"offset":30679},"end":{"line":1122,"column":65,"offset":30740},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1122,"column":66,"offset":30741},"end":{"line":1122,"column":75,"offset":30750},"indent":[]}}],"position":{"start":{"line":1122,"column":65,"offset":30740},"end":{"line":1122,"column":76,"offset":30751},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1122,"column":76,"offset":30751},"end":{"line":1122,"column":80,"offset":30755},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1122,"column":81,"offset":30756},"end":{"line":1122,"column":84,"offset":30759},"indent":[]}}],"position":{"start":{"line":1122,"column":80,"offset":30755},"end":{"line":1122,"column":85,"offset":30760},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1122,"column":85,"offset":30760},"end":{"line":1122,"column":105,"offset":30780},"indent":[]}}],"position":{"start":{"line":1122,"column":4,"offset":30679},"end":{"line":1122,"column":105,"offset":30780},"indent":[]}}],"position":{"start":{"line":1122,"column":1,"offset":30676},"end":{"line":1122,"column":105,"offset":30780},"indent":[]}}],"position":{"start":{"line":1121,"column":1,"offset":30631},"end":{"line":1122,"column":105,"offset":30780},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1124,"column":3,"offset":30786},"end":{"line":1124,"column":8,"offset":30791},"indent":[]}}],"position":{"start":{"line":1124,"column":1,"offset":30784},"end":{"line":1124,"column":10,"offset":30793},"indent":[]}}],"position":{"start":{"line":1124,"column":1,"offset":30784},"end":{"line":1124,"column":10,"offset":30793},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1126,"column":5,"offset":30801},"end":{"line":1126,"column":70,"offset":30866},"indent":[]}}],"position":{"start":{"line":1126,"column":5,"offset":30801},"end":{"line":1126,"column":70,"offset":30866},"indent":[]}}],"position":{"start":{"line":1126,"column":1,"offset":30797},"end":{"line":1126,"column":70,"offset":30866},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1127,"column":5,"offset":30872},"end":{"line":1127,"column":36,"offset":30903},"indent":[]}}],"position":{"start":{"line":1127,"column":5,"offset":30872},"end":{"line":1127,"column":36,"offset":30903},"indent":[]}}],"position":{"start":{"line":1127,"column":1,"offset":30868},"end":{"line":1127,"column":36,"offset":30903},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1128,"column":5,"offset":30909},"end":{"line":1128,"column":60,"offset":30964},"indent":[]}}],"position":{"start":{"line":1128,"column":5,"offset":30909},"end":{"line":1128,"column":60,"offset":30964},"indent":[]}}],"position":{"start":{"line":1128,"column":1,"offset":30905},"end":{"line":1128,"column":60,"offset":30964},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1129,"column":5,"offset":30970},"end":{"line":1129,"column":51,"offset":31016},"indent":[]}}],"position":{"start":{"line":1129,"column":5,"offset":30970},"end":{"line":1129,"column":51,"offset":31016},"indent":[]}}],"position":{"start":{"line":1129,"column":1,"offset":30966},"end":{"line":1129,"column":51,"offset":31016},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1130,"column":5,"offset":31022},"end":{"line":1130,"column":20,"offset":31037},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1130,"column":21,"offset":31038},"end":{"line":1130,"column":30,"offset":31047},"indent":[]}}],"position":{"start":{"line":1130,"column":20,"offset":31037},"end":{"line":1130,"column":31,"offset":31048},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1130,"column":31,"offset":31048},"end":{"line":1130,"column":36,"offset":31053},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1130,"column":37,"offset":31054},"end":{"line":1130,"column":44,"offset":31061},"indent":[]}}],"position":{"start":{"line":1130,"column":36,"offset":31053},"end":{"line":1130,"column":45,"offset":31062},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1130,"column":45,"offset":31062},"end":{"line":1130,"column":81,"offset":31098},"indent":[]}}],"position":{"start":{"line":1130,"column":5,"offset":31022},"end":{"line":1130,"column":81,"offset":31098},"indent":[]}}],"position":{"start":{"line":1130,"column":1,"offset":31018},"end":{"line":1130,"column":81,"offset":31098},"indent":[]}}],"position":{"start":{"line":1126,"column":1,"offset":30797},"end":{"line":1130,"column":81,"offset":31098},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1132,"column":3,"offset":31104},"end":{"line":1132,"column":13,"offset":31114},"indent":[]}}],"position":{"start":{"line":1132,"column":1,"offset":31102},"end":{"line":1132,"column":15,"offset":31116},"indent":[]}}],"position":{"start":{"line":1132,"column":1,"offset":31102},"end":{"line":1132,"column":15,"offset":31116},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]","position":{"start":{"line":1134,"column":1,"offset":31120},"end":{"line":1146,"column":4,"offset":31314},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1148,"column":3,"offset":31320},"end":{"line":1148,"column":13,"offset":31330},"indent":[]}}],"position":{"start":{"line":1148,"column":1,"offset":31318},"end":{"line":1148,"column":15,"offset":31332},"indent":[]}}],"position":{"start":{"line":1148,"column":1,"offset":31318},"end":{"line":1148,"column":15,"offset":31332},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1150,"column":1,"offset":31336},"end":{"line":1160,"column":4,"offset":31540},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1162,"column":5,"offset":31548},"end":{"line":1162,"column":14,"offset":31557},"indent":[]}}],"position":{"start":{"line":1162,"column":1,"offset":31544},"end":{"line":1162,"column":14,"offset":31557},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1164,"column":1,"offset":31561},"end":{"line":1164,"column":19,"offset":31579},"indent":[]}},{"type":"link","title":null,"url":"./127.%20Word%20Ladder","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1164,"column":20,"offset":31580},"end":{"line":1164,"column":36,"offset":31596},"indent":[]}}],"position":{"start":{"line":1164,"column":19,"offset":31579},"end":{"line":1164,"column":61,"offset":31621},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1164,"column":61,"offset":31621},"end":{"line":1164,"column":62,"offset":31622},"indent":[]}}],"position":{"start":{"line":1164,"column":1,"offset":31561},"end":{"line":1164,"column":62,"offset":31622},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1166,"column":1,"offset":31626},"end":{"line":1166,"column":204,"offset":31829},"indent":[]}}],"position":{"start":{"line":1166,"column":1,"offset":31626},"end":{"line":1166,"column":204,"offset":31829},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1168,"column":1,"offset":31833},"end":{"line":1168,"column":122,"offset":31954},"indent":[]}}],"position":{"start":{"line":1168,"column":1,"offset":31833},"end":{"line":1168,"column":122,"offset":31954},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}","position":{"start":{"line":1170,"column":1,"offset":31958},"end":{"line":1230,"column":4,"offset":33700},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1232,"column":1,"offset":33704},"end":{"line":1232,"column":4,"offset":33707},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1234,"column":1,"offset":33711},"end":{"line":1236,"column":25,"offset":33772},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1236,"column":25,"offset":33772},"end":{"line":1236,"column":70,"offset":33817},"indent":[]}}],"position":{"start":{"line":1236,"column":25,"offset":33772},"end":{"line":1236,"column":70,"offset":33817},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1236,"column":70,"offset":33817},"end":{"line":1238,"column":19,"offset":33857},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1238,"column":19,"offset":33857},"end":{"line":1238,"column":63,"offset":33901},"indent":[]}}],"position":{"start":{"line":1238,"column":19,"offset":33857},"end":{"line":1238,"column":63,"offset":33901},"indent":[]}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1238,"column":63,"offset":33901},"end":{"line":1239,"column":29,"offset":33931},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/minimum-genetic-mutation","children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1239,"column":29,"offset":33931},"end":{"line":1239,"column":83,"offset":33985},"indent":[]}}],"position":{"start":{"line":1239,"column":29,"offset":33931},"end":{"line":1239,"column":83,"offset":33985},"indent":[]}}],"position":{"start":{"line":1234,"column":1,"offset":33711},"end":{"line":1239,"column":83,"offset":33985},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1241,"column":1,"offset":33989},"end":{"line":1241,"column":4,"offset":33992},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1243,"column":2,"offset":33997},"end":{"line":1243,"column":142,"offset":34137},"indent":[]}}],"position":{"start":{"line":1243,"column":1,"offset":33996},"end":{"line":1243,"column":207,"offset":34202},"indent":[]}}],"position":{"start":{"line":1243,"column":1,"offset":33996},"end":{"line":1243,"column":207,"offset":34202},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1245,"column":4,"offset":34209},"end":{"line":1245,"column":6,"offset":34211},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder/description/","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1245,"column":7,"offset":34212},"end":{"line":1245,"column":23,"offset":34228},"indent":[]}}],"position":{"start":{"line":1245,"column":6,"offset":34211},"end":{"line":1245,"column":80,"offset":34285},"indent":[]}}],"position":{"start":{"line":1245,"column":1,"offset":34206},"end":{"line":1245,"column":80,"offset":34285},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1247,"column":5,"offset":34293},"end":{"line":1247,"column":13,"offset":34301},"indent":[]}}],"position":{"start":{"line":1247,"column":1,"offset":34289},"end":{"line":1247,"column":13,"offset":34301},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1249,"column":1,"offset":34305},"end":{"line":1249,"column":18,"offset":34322},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1249,"column":19,"offset":34323},"end":{"line":1249,"column":28,"offset":34332},"indent":[]}}],"position":{"start":{"line":1249,"column":18,"offset":34322},"end":{"line":1249,"column":29,"offset":34333},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1249,"column":29,"offset":34333},"end":{"line":1249,"column":34,"offset":34338},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1249,"column":35,"offset":34339},"end":{"line":1249,"column":42,"offset":34346},"indent":[]}}],"position":{"start":{"line":1249,"column":34,"offset":34338},"end":{"line":1249,"column":43,"offset":34347},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1249,"column":43,"offset":34347},"end":{"line":1249,"column":133,"offset":34437},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1249,"column":134,"offset":34438},"end":{"line":1249,"column":143,"offset":34447},"indent":[]}}],"position":{"start":{"line":1249,"column":133,"offset":34437},"end":{"line":1249,"column":144,"offset":34448},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1249,"column":144,"offset":34448},"end":{"line":1249,"column":148,"offset":34452},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1249,"column":149,"offset":34453},"end":{"line":1249,"column":156,"offset":34460},"indent":[]}}],"position":{"start":{"line":1249,"column":148,"offset":34452},"end":{"line":1249,"column":157,"offset":34461},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1249,"column":157,"offset":34461},"end":{"line":1249,"column":169,"offset":34473},"indent":[]}}],"position":{"start":{"line":1249,"column":1,"offset":34305},"end":{"line":1249,"column":169,"offset":34473},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1251,"column":4,"offset":34480},"end":{"line":1251,"column":45,"offset":34521},"indent":[]}}],"position":{"start":{"line":1251,"column":4,"offset":34480},"end":{"line":1251,"column":45,"offset":34521},"indent":[]}}],"position":{"start":{"line":1251,"column":1,"offset":34477},"end":{"line":1251,"column":45,"offset":34521},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1252,"column":4,"offset":34526},"end":{"line":1252,"column":65,"offset":34587},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1252,"column":66,"offset":34588},"end":{"line":1252,"column":75,"offset":34597},"indent":[]}}],"position":{"start":{"line":1252,"column":65,"offset":34587},"end":{"line":1252,"column":76,"offset":34598},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1252,"column":76,"offset":34598},"end":{"line":1252,"column":80,"offset":34602},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1252,"column":81,"offset":34603},"end":{"line":1252,"column":84,"offset":34606},"indent":[]}}],"position":{"start":{"line":1252,"column":80,"offset":34602},"end":{"line":1252,"column":85,"offset":34607},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1252,"column":85,"offset":34607},"end":{"line":1252,"column":105,"offset":34627},"indent":[]}}],"position":{"start":{"line":1252,"column":4,"offset":34526},"end":{"line":1252,"column":105,"offset":34627},"indent":[]}}],"position":{"start":{"line":1252,"column":1,"offset":34523},"end":{"line":1252,"column":105,"offset":34627},"indent":[]}}],"position":{"start":{"line":1251,"column":1,"offset":34477},"end":{"line":1252,"column":105,"offset":34627},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1254,"column":3,"offset":34633},"end":{"line":1254,"column":8,"offset":34638},"indent":[]}}],"position":{"start":{"line":1254,"column":1,"offset":34631},"end":{"line":1254,"column":10,"offset":34640},"indent":[]}}],"position":{"start":{"line":1254,"column":1,"offset":34631},"end":{"line":1254,"column":10,"offset":34640},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1256,"column":5,"offset":34648},"end":{"line":1256,"column":58,"offset":34701},"indent":[]}}],"position":{"start":{"line":1256,"column":5,"offset":34648},"end":{"line":1256,"column":58,"offset":34701},"indent":[]}}],"position":{"start":{"line":1256,"column":1,"offset":34644},"end":{"line":1256,"column":58,"offset":34701},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1257,"column":5,"offset":34707},"end":{"line":1257,"column":36,"offset":34738},"indent":[]}}],"position":{"start":{"line":1257,"column":5,"offset":34707},"end":{"line":1257,"column":36,"offset":34738},"indent":[]}}],"position":{"start":{"line":1257,"column":1,"offset":34703},"end":{"line":1257,"column":36,"offset":34738},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1258,"column":5,"offset":34744},"end":{"line":1258,"column":60,"offset":34799},"indent":[]}}],"position":{"start":{"line":1258,"column":5,"offset":34744},"end":{"line":1258,"column":60,"offset":34799},"indent":[]}}],"position":{"start":{"line":1258,"column":1,"offset":34740},"end":{"line":1258,"column":60,"offset":34799},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1259,"column":5,"offset":34805},"end":{"line":1259,"column":51,"offset":34851},"indent":[]}}],"position":{"start":{"line":1259,"column":5,"offset":34805},"end":{"line":1259,"column":51,"offset":34851},"indent":[]}}],"position":{"start":{"line":1259,"column":1,"offset":34801},"end":{"line":1259,"column":51,"offset":34851},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1260,"column":5,"offset":34857},"end":{"line":1260,"column":20,"offset":34872},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1260,"column":21,"offset":34873},"end":{"line":1260,"column":30,"offset":34882},"indent":[]}}],"position":{"start":{"line":1260,"column":20,"offset":34872},"end":{"line":1260,"column":31,"offset":34883},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1260,"column":31,"offset":34883},"end":{"line":1260,"column":36,"offset":34888},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1260,"column":37,"offset":34889},"end":{"line":1260,"column":44,"offset":34896},"indent":[]}}],"position":{"start":{"line":1260,"column":36,"offset":34888},"end":{"line":1260,"column":45,"offset":34897},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1260,"column":45,"offset":34897},"end":{"line":1260,"column":81,"offset":34933},"indent":[]}}],"position":{"start":{"line":1260,"column":5,"offset":34857},"end":{"line":1260,"column":81,"offset":34933},"indent":[]}}],"position":{"start":{"line":1260,"column":1,"offset":34853},"end":{"line":1260,"column":81,"offset":34933},"indent":[]}}],"position":{"start":{"line":1256,"column":1,"offset":34644},"end":{"line":1260,"column":81,"offset":34933},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1262,"column":3,"offset":34939},"end":{"line":1262,"column":13,"offset":34949},"indent":[]}}],"position":{"start":{"line":1262,"column":1,"offset":34937},"end":{"line":1262,"column":15,"offset":34951},"indent":[]}}],"position":{"start":{"line":1262,"column":1,"offset":34937},"end":{"line":1262,"column":15,"offset":34951},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.","position":{"start":{"line":1264,"column":1,"offset":34955},"end":{"line":1275,"column":4,"offset":35189},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1277,"column":3,"offset":35195},"end":{"line":1277,"column":13,"offset":35205},"indent":[]}}],"position":{"start":{"line":1277,"column":1,"offset":35193},"end":{"line":1277,"column":15,"offset":35207},"indent":[]}}],"position":{"start":{"line":1277,"column":1,"offset":35193},"end":{"line":1277,"column":15,"offset":35207},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1279,"column":1,"offset":35211},"end":{"line":1289,"column":4,"offset":35414},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1291,"column":5,"offset":35422},"end":{"line":1291,"column":14,"offset":35431},"indent":[]}}],"position":{"start":{"line":1291,"column":1,"offset":35418},"end":{"line":1291,"column":14,"offset":35431},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1293,"column":1,"offset":35435},"end":{"line":1293,"column":38,"offset":35472},"indent":[]}},{"type":"inlineCode","value":"begineWord","position":{"start":{"line":1293,"column":38,"offset":35472},"end":{"line":1293,"column":50,"offset":35484},"indent":[]}},{"type":"text","value":" as root and ","position":{"start":{"line":1293,"column":50,"offset":35484},"end":{"line":1293,"column":63,"offset":35497},"indent":[]}},{"type":"inlineCode","value":"endWord","position":{"start":{"line":1293,"column":63,"offset":35497},"end":{"line":1293,"column":72,"offset":35506},"indent":[]}},{"type":"text","value":" as leaves.","position":{"start":{"line":1293,"column":72,"offset":35506},"end":{"line":1293,"column":83,"offset":35517},"indent":[]}}],"position":{"start":{"line":1293,"column":1,"offset":35435},"end":{"line":1293,"column":83,"offset":35517},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1295,"column":1,"offset":35521},"end":{"line":1295,"column":128,"offset":35648},"indent":[]}}],"position":{"start":{"line":1295,"column":1,"offset":35521},"end":{"line":1295,"column":128,"offset":35648},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1297,"column":1,"offset":35652},"end":{"line":1297,"column":205,"offset":35856},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1297,"column":205,"offset":35856},"end":{"line":1297,"column":208,"offset":35859},"indent":[]}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1297,"column":208,"offset":35859},"end":{"line":1297,"column":282,"offset":35933},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1297,"column":282,"offset":35933},"end":{"line":1297,"column":285,"offset":35936},"indent":[]}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1297,"column":285,"offset":35936},"end":{"line":1297,"column":365,"offset":36016},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1297,"column":365,"offset":36016},"end":{"line":1297,"column":375,"offset":36026},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1297,"column":375,"offset":36026},"end":{"line":1297,"column":376,"offset":36027},"indent":[]}}],"position":{"start":{"line":1297,"column":1,"offset":35652},"end":{"line":1297,"column":376,"offset":36027},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1299,"column":1,"offset":36031},"end":{"line":1299,"column":54,"offset":36084},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1299,"column":54,"offset":36084},"end":{"line":1299,"column":64,"offset":36094},"indent":[]}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1299,"column":64,"offset":36094},"end":{"line":1299,"column":114,"offset":36144},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1299,"column":114,"offset":36144},"end":{"line":1299,"column":124,"offset":36154},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1299,"column":124,"offset":36154},"end":{"line":1299,"column":125,"offset":36155},"indent":[]}}],"position":{"start":{"line":1299,"column":1,"offset":36031},"end":{"line":1299,"column":125,"offset":36155},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};","position":{"start":{"line":1301,"column":1,"offset":36159},"end":{"line":1347,"column":4,"offset":37357},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1349,"column":1,"offset":37361},"end":{"line":1349,"column":4,"offset":37364},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1351,"column":1,"offset":37368},"end":{"line":1353,"column":10,"offset":37412},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1353,"column":10,"offset":37412},"end":{"line":1353,"column":40,"offset":37442},"indent":[]}}],"position":{"start":{"line":1353,"column":10,"offset":37412},"end":{"line":1353,"column":40,"offset":37442},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1353,"column":40,"offset":37442},"end":{"line":1354,"column":15,"offset":37458},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1354,"column":15,"offset":37458},"end":{"line":1354,"column":50,"offset":37493},"indent":[]}}],"position":{"start":{"line":1354,"column":15,"offset":37458},"end":{"line":1354,"column":50,"offset":37493},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1354,"column":50,"offset":37493},"end":{"line":1356,"column":45,"offset":37559},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1356,"column":45,"offset":37559},"end":{"line":1356,"column":115,"offset":37629},"indent":[]}}],"position":{"start":{"line":1356,"column":45,"offset":37559},"end":{"line":1356,"column":115,"offset":37629},"indent":[]}}],"position":{"start":{"line":1351,"column":1,"offset":37368},"end":{"line":1356,"column":115,"offset":37629},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1358,"column":1,"offset":37633},"end":{"line":1358,"column":4,"offset":37636},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1360,"column":2,"offset":37641},"end":{"line":1360,"column":142,"offset":37781},"indent":[]}}],"position":{"start":{"line":1360,"column":1,"offset":37640},"end":{"line":1360,"column":241,"offset":37880},"indent":[]}}],"position":{"start":{"line":1360,"column":1,"offset":37640},"end":{"line":1360,"column":241,"offset":37880},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1362,"column":4,"offset":37887},"end":{"line":1362,"column":6,"offset":37889},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-consecutive-sequence/description/","children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1362,"column":7,"offset":37890},"end":{"line":1362,"column":40,"offset":37923},"indent":[]}}],"position":{"start":{"line":1362,"column":6,"offset":37889},"end":{"line":1362,"column":114,"offset":37997},"indent":[]}}],"position":{"start":{"line":1362,"column":1,"offset":37884},"end":{"line":1362,"column":114,"offset":37997},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1364,"column":5,"offset":38005},"end":{"line":1364,"column":13,"offset":38013},"indent":[]}}],"position":{"start":{"line":1364,"column":1,"offset":38001},"end":{"line":1364,"column":13,"offset":38013},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1366,"column":1,"offset":38017},"end":{"line":1366,"column":99,"offset":38115},"indent":[]}}],"position":{"start":{"line":1366,"column":1,"offset":38017},"end":{"line":1366,"column":99,"offset":38115},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1368,"column":1,"offset":38119},"end":{"line":1368,"column":32,"offset":38150},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":1368,"column":33,"offset":38151},"end":{"line":1368,"column":34,"offset":38152},"indent":[]}}],"position":{"start":{"line":1368,"column":32,"offset":38150},"end":{"line":1368,"column":35,"offset":38153},"indent":[]}},{"type":"text","value":") complexity.","position":{"start":{"line":1368,"column":35,"offset":38153},"end":{"line":1368,"column":48,"offset":38166},"indent":[]}}],"position":{"start":{"line":1368,"column":1,"offset":38119},"end":{"line":1368,"column":48,"offset":38166},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1370,"column":3,"offset":38172},"end":{"line":1370,"column":11,"offset":38180},"indent":[]}}],"position":{"start":{"line":1370,"column":1,"offset":38170},"end":{"line":1370,"column":13,"offset":38182},"indent":[]}}],"position":{"start":{"line":1370,"column":1,"offset":38170},"end":{"line":1370,"column":13,"offset":38182},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.","position":{"start":{"line":1372,"column":1,"offset":38186},"end":{"line":1377,"column":4,"offset":38338},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1379,"column":5,"offset":38346},"end":{"line":1379,"column":14,"offset":38355},"indent":[]}}],"position":{"start":{"line":1379,"column":1,"offset":38342},"end":{"line":1379,"column":14,"offset":38355},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1381,"column":1,"offset":38359},"end":{"line":1381,"column":208,"offset":38566},"indent":[]}}],"position":{"start":{"line":1381,"column":1,"offset":38359},"end":{"line":1381,"column":208,"offset":38566},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};","position":{"start":{"line":1383,"column":1,"offset":38570},"end":{"line":1407,"column":4,"offset":39169},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1409,"column":1,"offset":39173},"end":{"line":1409,"column":4,"offset":39176},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1411,"column":1,"offset":39180},"end":{"line":1413,"column":9,"offset":39225},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1413,"column":9,"offset":39225},"end":{"line":1413,"column":38,"offset":39254},"indent":[]}}],"position":{"start":{"line":1413,"column":9,"offset":39225},"end":{"line":1413,"column":38,"offset":39254},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1413,"column":38,"offset":39254},"end":{"line":1414,"column":23,"offset":39278},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1414,"column":23,"offset":39278},"end":{"line":1414,"column":66,"offset":39321},"indent":[]}}],"position":{"start":{"line":1414,"column":23,"offset":39278},"end":{"line":1414,"column":66,"offset":39321},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1414,"column":66,"offset":39321},"end":{"line":1416,"column":13,"offset":39355},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1416,"column":13,"offset":39355},"end":{"line":1416,"column":51,"offset":39393},"indent":[]}}],"position":{"start":{"line":1416,"column":13,"offset":39355},"end":{"line":1416,"column":51,"offset":39393},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1416,"column":51,"offset":39393},"end":{"line":1417,"column":33,"offset":39427},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1417,"column":33,"offset":39427},"end":{"line":1417,"column":91,"offset":39485},"indent":[]}}],"position":{"start":{"line":1417,"column":33,"offset":39427},"end":{"line":1417,"column":91,"offset":39485},"indent":[]}}],"position":{"start":{"line":1411,"column":1,"offset":39180},"end":{"line":1417,"column":91,"offset":39485},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1419,"column":1,"offset":39489},"end":{"line":1419,"column":4,"offset":39492},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1421,"column":2,"offset":39497},"end":{"line":1421,"column":142,"offset":39637},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":39496},"end":{"line":1421,"column":233,"offset":39728},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":39496},"end":{"line":1421,"column":233,"offset":39728},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1423,"column":4,"offset":39735},"end":{"line":1423,"column":6,"offset":39737},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/","children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1423,"column":7,"offset":39738},"end":{"line":1423,"column":36,"offset":39767},"indent":[]}}],"position":{"start":{"line":1423,"column":6,"offset":39737},"end":{"line":1423,"column":106,"offset":39837},"indent":[]}}],"position":{"start":{"line":1423,"column":1,"offset":39732},"end":{"line":1423,"column":106,"offset":39837},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1425,"column":5,"offset":39845},"end":{"line":1425,"column":13,"offset":39853},"indent":[]}}],"position":{"start":{"line":1425,"column":1,"offset":39841},"end":{"line":1425,"column":13,"offset":39853},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1427,"column":1,"offset":39857},"end":{"line":1427,"column":44,"offset":39900},"indent":[]}},{"type":"inlineCode","value":"0-9","position":{"start":{"line":1427,"column":44,"offset":39900},"end":{"line":1427,"column":49,"offset":39905},"indent":[]}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1427,"column":49,"offset":39905},"end":{"line":1427,"column":104,"offset":39960},"indent":[]}}],"position":{"start":{"line":1427,"column":1,"offset":39857},"end":{"line":1427,"column":104,"offset":39960},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1429,"column":1,"offset":39964},"end":{"line":1429,"column":37,"offset":40000},"indent":[]}},{"type":"inlineCode","value":"1->2->3","position":{"start":{"line":1429,"column":37,"offset":40000},"end":{"line":1429,"column":46,"offset":40009},"indent":[]}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1429,"column":46,"offset":40009},"end":{"line":1429,"column":75,"offset":40038},"indent":[]}},{"type":"inlineCode","value":"123","position":{"start":{"line":1429,"column":75,"offset":40038},"end":{"line":1429,"column":80,"offset":40043},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1429,"column":80,"offset":40043},"end":{"line":1429,"column":81,"offset":40044},"indent":[]}}],"position":{"start":{"line":1429,"column":1,"offset":39964},"end":{"line":1429,"column":81,"offset":40044},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1431,"column":1,"offset":40048},"end":{"line":1431,"column":48,"offset":40095},"indent":[]}}],"position":{"start":{"line":1431,"column":1,"offset":40048},"end":{"line":1431,"column":48,"offset":40095},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1433,"column":3,"offset":40101},"end":{"line":1433,"column":8,"offset":40106},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":40099},"end":{"line":1433,"column":10,"offset":40108},"indent":[]}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1433,"column":10,"offset":40108},"end":{"line":1433,"column":45,"offset":40143},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":40099},"end":{"line":1433,"column":45,"offset":40143},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1435,"column":3,"offset":40149},"end":{"line":1435,"column":11,"offset":40157},"indent":[]}}],"position":{"start":{"line":1435,"column":1,"offset":40147},"end":{"line":1435,"column":13,"offset":40159},"indent":[]}}],"position":{"start":{"line":1435,"column":1,"offset":40147},"end":{"line":1435,"column":13,"offset":40159},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.","position":{"start":{"line":1437,"column":1,"offset":40163},"end":{"line":1447,"column":4,"offset":40377},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1449,"column":3,"offset":40383},"end":{"line":1449,"column":13,"offset":40393},"indent":[]}}],"position":{"start":{"line":1449,"column":1,"offset":40381},"end":{"line":1449,"column":15,"offset":40395},"indent":[]}}],"position":{"start":{"line":1449,"column":1,"offset":40381},"end":{"line":1449,"column":15,"offset":40395},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.","position":{"start":{"line":1451,"column":1,"offset":40399},"end":{"line":1464,"column":4,"offset":40703},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1466,"column":5,"offset":40711},"end":{"line":1466,"column":14,"offset":40720},"indent":[]}}],"position":{"start":{"line":1466,"column":1,"offset":40707},"end":{"line":1466,"column":14,"offset":40720},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1468,"column":1,"offset":40724},"end":{"line":1468,"column":50,"offset":40773},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1468,"column":50,"offset":40773},"end":{"line":1468,"column":53,"offset":40776},"indent":[]}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1468,"column":53,"offset":40776},"end":{"line":1468,"column":105,"offset":40828},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1468,"column":105,"offset":40828},"end":{"line":1468,"column":108,"offset":40831},"indent":[]}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1468,"column":108,"offset":40831},"end":{"line":1468,"column":161,"offset":40884},"indent":[]}}],"position":{"start":{"line":1468,"column":1,"offset":40724},"end":{"line":1468,"column":161,"offset":40884},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};","position":{"start":{"line":1470,"column":1,"offset":40888},"end":{"line":1489,"column":4,"offset":41313},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1491,"column":1,"offset":41317},"end":{"line":1491,"column":4,"offset":41320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1493,"column":1,"offset":41324},"end":{"line":1495,"column":23,"offset":41383},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1495,"column":23,"offset":41383},"end":{"line":1495,"column":66,"offset":41426},"indent":[]}}],"position":{"start":{"line":1495,"column":23,"offset":41383},"end":{"line":1495,"column":66,"offset":41426},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1495,"column":66,"offset":41426},"end":{"line":1496,"column":25,"offset":41452},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1496,"column":25,"offset":41452},"end":{"line":1496,"column":70,"offset":41497},"indent":[]}}],"position":{"start":{"line":1496,"column":25,"offset":41452},"end":{"line":1496,"column":70,"offset":41497},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1496,"column":70,"offset":41497},"end":{"line":1497,"column":15,"offset":41513},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1497,"column":15,"offset":41513},"end":{"line":1497,"column":50,"offset":41548},"indent":[]}}],"position":{"start":{"line":1497,"column":15,"offset":41513},"end":{"line":1497,"column":50,"offset":41548},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1497,"column":50,"offset":41548},"end":{"line":1499,"column":22,"offset":41591},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/number-of-islands","children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1499,"column":22,"offset":41591},"end":{"line":1499,"column":69,"offset":41638},"indent":[]}}],"position":{"start":{"line":1499,"column":22,"offset":41591},"end":{"line":1499,"column":69,"offset":41638},"indent":[]}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1499,"column":69,"offset":41638},"end":{"line":1500,"column":20,"offset":41659},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/walls-and-gates","children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1500,"column":20,"offset":41659},"end":{"line":1500,"column":65,"offset":41704},"indent":[]}}],"position":{"start":{"line":1500,"column":20,"offset":41659},"end":{"line":1500,"column":65,"offset":41704},"indent":[]}}],"position":{"start":{"line":1493,"column":1,"offset":41324},"end":{"line":1500,"column":65,"offset":41704},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1502,"column":1,"offset":41708},"end":{"line":1502,"column":4,"offset":41711},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1504,"column":2,"offset":41716},"end":{"line":1504,"column":142,"offset":41856},"indent":[]}}],"position":{"start":{"line":1504,"column":1,"offset":41715},"end":{"line":1504,"column":221,"offset":41935},"indent":[]}}],"position":{"start":{"line":1504,"column":1,"offset":41715},"end":{"line":1504,"column":221,"offset":41935},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1506,"column":4,"offset":41942},"end":{"line":1506,"column":6,"offset":41944},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/surrounded-regions/description/","children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1506,"column":7,"offset":41945},"end":{"line":1506,"column":30,"offset":41968},"indent":[]}}],"position":{"start":{"line":1506,"column":6,"offset":41944},"end":{"line":1506,"column":94,"offset":42032},"indent":[]}}],"position":{"start":{"line":1506,"column":1,"offset":41939},"end":{"line":1506,"column":94,"offset":42032},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1508,"column":5,"offset":42040},"end":{"line":1508,"column":13,"offset":42048},"indent":[]}}],"position":{"start":{"line":1508,"column":1,"offset":42036},"end":{"line":1508,"column":13,"offset":42048},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1510,"column":1,"offset":42052},"end":{"line":1510,"column":29,"offset":42080},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1510,"column":29,"offset":42080},"end":{"line":1510,"column":34,"offset":42085},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1510,"column":34,"offset":42085},"end":{"line":1510,"column":39,"offset":42090},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1510,"column":39,"offset":42090},"end":{"line":1510,"column":44,"offset":42095},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1510,"column":44,"offset":42095},"end":{"line":1510,"column":46,"offset":42097},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"the letter O","position":{"start":{"line":1510,"column":48,"offset":42099},"end":{"line":1510,"column":60,"offset":42111},"indent":[]}}],"position":{"start":{"line":1510,"column":46,"offset":42097},"end":{"line":1510,"column":62,"offset":42113},"indent":[]}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1510,"column":62,"offset":42113},"end":{"line":1510,"column":99,"offset":42150},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1510,"column":99,"offset":42150},"end":{"line":1510,"column":104,"offset":42155},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1510,"column":104,"offset":42155},"end":{"line":1510,"column":105,"offset":42156},"indent":[]}}],"position":{"start":{"line":1510,"column":1,"offset":42052},"end":{"line":1510,"column":105,"offset":42156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1512,"column":1,"offset":42160},"end":{"line":1512,"column":38,"offset":42197},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1512,"column":38,"offset":42197},"end":{"line":1512,"column":43,"offset":42202},"indent":[]}},{"type":"text","value":"s into ","position":{"start":{"line":1512,"column":43,"offset":42202},"end":{"line":1512,"column":50,"offset":42209},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1512,"column":50,"offset":42209},"end":{"line":1512,"column":55,"offset":42214},"indent":[]}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1512,"column":55,"offset":42214},"end":{"line":1512,"column":83,"offset":42242},"indent":[]}}],"position":{"start":{"line":1512,"column":1,"offset":42160},"end":{"line":1512,"column":83,"offset":42242},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1514,"column":3,"offset":42248},"end":{"line":1514,"column":11,"offset":42256},"indent":[]}}],"position":{"start":{"line":1514,"column":1,"offset":42246},"end":{"line":1514,"column":13,"offset":42258},"indent":[]}}],"position":{"start":{"line":1514,"column":1,"offset":42246},"end":{"line":1514,"column":13,"offset":42258},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX O O X\nX X O X\nX O X X","position":{"start":{"line":1516,"column":1,"offset":42262},"end":{"line":1522,"column":4,"offset":42308},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1524,"column":1,"offset":42312},"end":{"line":1524,"column":50,"offset":42361},"indent":[]}}],"position":{"start":{"line":1524,"column":1,"offset":42312},"end":{"line":1524,"column":50,"offset":42361},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX X X X\nX X X X\nX O X X","position":{"start":{"line":1526,"column":1,"offset":42365},"end":{"line":1532,"column":4,"offset":42411},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1534,"column":3,"offset":42417},"end":{"line":1534,"column":15,"offset":42429},"indent":[]}}],"position":{"start":{"line":1534,"column":1,"offset":42415},"end":{"line":1534,"column":17,"offset":42431},"indent":[]}}],"position":{"start":{"line":1534,"column":1,"offset":42415},"end":{"line":1534,"column":17,"offset":42431},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1536,"column":1,"offset":42435},"end":{"line":1536,"column":69,"offset":42503},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1536,"column":69,"offset":42503},"end":{"line":1536,"column":74,"offset":42508},"indent":[]}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1536,"column":74,"offset":42508},"end":{"line":1536,"column":121,"offset":42555},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1536,"column":121,"offset":42555},"end":{"line":1536,"column":126,"offset":42560},"indent":[]}},{"type":"text","value":". Any ","position":{"start":{"line":1536,"column":126,"offset":42560},"end":{"line":1536,"column":132,"offset":42566},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1536,"column":132,"offset":42566},"end":{"line":1536,"column":137,"offset":42571},"indent":[]}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1536,"column":137,"offset":42571},"end":{"line":1536,"column":194,"offset":42628},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1536,"column":194,"offset":42628},"end":{"line":1536,"column":199,"offset":42633},"indent":[]}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1536,"column":199,"offset":42633},"end":{"line":1536,"column":233,"offset":42667},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1536,"column":233,"offset":42667},"end":{"line":1536,"column":238,"offset":42672},"indent":[]}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1536,"column":238,"offset":42672},"end":{"line":1536,"column":328,"offset":42762},"indent":[]}}],"position":{"start":{"line":1536,"column":1,"offset":42435},"end":{"line":1536,"column":328,"offset":42762},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1538,"column":5,"offset":42770},"end":{"line":1538,"column":14,"offset":42779},"indent":[]}}],"position":{"start":{"line":1538,"column":1,"offset":42766},"end":{"line":1538,"column":14,"offset":42779},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1540,"column":1,"offset":42783},"end":{"line":1540,"column":14,"offset":42796},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1540,"column":14,"offset":42796},"end":{"line":1540,"column":17,"offset":42799},"indent":[]}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1540,"column":17,"offset":42799},"end":{"line":1540,"column":45,"offset":42827},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1540,"column":45,"offset":42827},"end":{"line":1540,"column":48,"offset":42830},"indent":[]}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1540,"column":48,"offset":42830},"end":{"line":1540,"column":80,"offset":42862},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1540,"column":80,"offset":42862},"end":{"line":1540,"column":83,"offset":42865},"indent":[]}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1540,"column":83,"offset":42865},"end":{"line":1540,"column":113,"offset":42895},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1540,"column":113,"offset":42895},"end":{"line":1540,"column":116,"offset":42898},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1540,"column":116,"offset":42898},"end":{"line":1540,"column":120,"offset":42902},"indent":[]}},{"type":"inlineCode","value":"X","position":{"start":{"line":1540,"column":120,"offset":42902},"end":{"line":1540,"column":123,"offset":42905},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1540,"column":123,"offset":42905},"end":{"line":1540,"column":128,"offset":42910},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1540,"column":128,"offset":42910},"end":{"line":1540,"column":131,"offset":42913},"indent":[]}},{"type":"text","value":" back to ","position":{"start":{"line":1540,"column":131,"offset":42913},"end":{"line":1540,"column":140,"offset":42922},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1540,"column":140,"offset":42922},"end":{"line":1540,"column":143,"offset":42925},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1540,"column":143,"offset":42925},"end":{"line":1540,"column":144,"offset":42926},"indent":[]}}],"position":{"start":{"line":1540,"column":1,"offset":42783},"end":{"line":1540,"column":144,"offset":42926},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1542,"column":1,"offset":42930},"end":{"line":1542,"column":38,"offset":42967},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1542,"column":38,"offset":42967},"end":{"line":1542,"column":41,"offset":42970},"indent":[]}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1542,"column":41,"offset":42970},"end":{"line":1542,"column":72,"offset":43001},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1542,"column":72,"offset":43001},"end":{"line":1542,"column":75,"offset":43004},"indent":[]}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1542,"column":75,"offset":43004},"end":{"line":1542,"column":158,"offset":43087},"indent":[]}}],"position":{"start":{"line":1542,"column":1,"offset":42930},"end":{"line":1542,"column":158,"offset":43087},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1544,"column":1,"offset":43091},"end":{"line":1544,"column":99,"offset":43189},"indent":[]}}],"position":{"start":{"line":1544,"column":1,"offset":43091},"end":{"line":1544,"column":99,"offset":43189},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};","position":{"start":{"line":1546,"column":1,"offset":43193},"end":{"line":1619,"column":4,"offset":45203},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1621,"column":1,"offset":45207},"end":{"line":1621,"column":4,"offset":45210},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1623,"column":1,"offset":45214},"end":{"line":1625,"column":23,"offset":45273},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1625,"column":23,"offset":45273},"end":{"line":1625,"column":66,"offset":45316},"indent":[]}}],"position":{"start":{"line":1625,"column":23,"offset":45273},"end":{"line":1625,"column":66,"offset":45316},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1625,"column":66,"offset":45316},"end":{"line":1626,"column":25,"offset":45342},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1626,"column":25,"offset":45342},"end":{"line":1626,"column":70,"offset":45387},"indent":[]}}],"position":{"start":{"line":1626,"column":25,"offset":45342},"end":{"line":1626,"column":70,"offset":45387},"indent":[]}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":1626,"column":70,"offset":45387},"end":{"line":1627,"column":10,"offset":45398},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/graph","children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":1627,"column":10,"offset":45398},"end":{"line":1627,"column":40,"offset":45428},"indent":[]}}],"position":{"start":{"line":1627,"column":10,"offset":45398},"end":{"line":1627,"column":40,"offset":45428},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":1627,"column":40,"offset":45428},"end":{"line":1629,"column":34,"offset":45483},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/copy-list-with-random-pointer","children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":1629,"column":34,"offset":45483},"end":{"line":1629,"column":93,"offset":45542},"indent":[]}}],"position":{"start":{"line":1629,"column":34,"offset":45483},"end":{"line":1629,"column":93,"offset":45542},"indent":[]}}],"position":{"start":{"line":1623,"column":1,"offset":45214},"end":{"line":1629,"column":93,"offset":45542},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1631,"column":1,"offset":45546},"end":{"line":1631,"column":4,"offset":45549},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1633,"column":2,"offset":45554},"end":{"line":1633,"column":142,"offset":45694},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":45553},"end":{"line":1633,"column":207,"offset":45759},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":45553},"end":{"line":1633,"column":207,"offset":45759},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1635,"column":4,"offset":45766},"end":{"line":1635,"column":6,"offset":45768},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/clone-graph/description/","children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":1635,"column":7,"offset":45769},"end":{"line":1635,"column":23,"offset":45785},"indent":[]}}],"position":{"start":{"line":1635,"column":6,"offset":45768},"end":{"line":1635,"column":80,"offset":45842},"indent":[]}}],"position":{"start":{"line":1635,"column":1,"offset":45763},"end":{"line":1635,"column":80,"offset":45842},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1637,"column":5,"offset":45850},"end":{"line":1637,"column":13,"offset":45858},"indent":[]}}],"position":{"start":{"line":1637,"column":1,"offset":45846},"end":{"line":1637,"column":13,"offset":45858},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":1639,"column":1,"offset":45862},"end":{"line":1639,"column":103,"offset":45964},"indent":[]}},{"type":"inlineCode","value":"label","position":{"start":{"line":1639,"column":103,"offset":45964},"end":{"line":1639,"column":110,"offset":45971},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1639,"column":110,"offset":45971},"end":{"line":1639,"column":112,"offset":45973},"indent":[]}},{"type":"inlineCode","value":"int","position":{"start":{"line":1639,"column":112,"offset":45973},"end":{"line":1639,"column":117,"offset":45978},"indent":[]}},{"type":"text","value":") and a list (","position":{"start":{"line":1639,"column":117,"offset":45978},"end":{"line":1639,"column":131,"offset":45992},"indent":[]}},{"type":"inlineCode","value":"List[UndirectedGraphNode]","position":{"start":{"line":1639,"column":131,"offset":45992},"end":{"line":1639,"column":158,"offset":46019},"indent":[]}},{"type":"text","value":") of its ","position":{"start":{"line":1639,"column":158,"offset":46019},"end":{"line":1639,"column":167,"offset":46028},"indent":[]}},{"type":"inlineCode","value":"neighbors","position":{"start":{"line":1639,"column":167,"offset":46028},"end":{"line":1639,"column":178,"offset":46039},"indent":[]}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":1639,"column":178,"offset":46039},"end":{"line":1639,"column":259,"offset":46120},"indent":[]}}],"position":{"start":{"line":1639,"column":1,"offset":45862},"end":{"line":1639,"column":259,"offset":46120},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":1641,"column":1,"offset":46124},"end":{"line":1641,"column":74,"offset":46197},"indent":[]}}],"position":{"start":{"line":1641,"column":1,"offset":46124},"end":{"line":1641,"column":74,"offset":46197},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":1643,"column":1,"offset":46201},"end":{"line":1643,"column":28,"offset":46228},"indent":[]}}],"position":{"start":{"line":1643,"column":1,"offset":46201},"end":{"line":1643,"column":28,"offset":46228},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":1645,"column":1,"offset":46232},"end":{"line":1645,"column":8,"offset":46239},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1645,"column":8,"offset":46239},"end":{"line":1645,"column":11,"offset":46242},"indent":[]}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":1645,"column":11,"offset":46242},"end":{"line":1645,"column":46,"offset":46277},"indent":[]}},{"type":"inlineCode","value":",","position":{"start":{"line":1645,"column":46,"offset":46277},"end":{"line":1645,"column":49,"offset":46280},"indent":[]}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":1645,"column":49,"offset":46280},"end":{"line":1645,"column":110,"offset":46341},"indent":[]}}],"position":{"start":{"line":1645,"column":1,"offset":46232},"end":{"line":1645,"column":110,"offset":46341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":1647,"column":1,"offset":46345},"end":{"line":1647,"column":46,"offset":46390},"indent":[]}},{"type":"inlineCode","value":"{0,1,2#1,2#2,2}","position":{"start":{"line":1647,"column":46,"offset":46390},"end":{"line":1647,"column":63,"offset":46407},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1647,"column":63,"offset":46407},"end":{"line":1647,"column":64,"offset":46408},"indent":[]}}],"position":{"start":{"line":1647,"column":1,"offset":46345},"end":{"line":1647,"column":64,"offset":46408},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":1649,"column":1,"offset":46412},"end":{"line":1649,"column":90,"offset":46501},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1649,"column":90,"offset":46501},"end":{"line":1649,"column":93,"offset":46504},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1649,"column":93,"offset":46504},"end":{"line":1649,"column":94,"offset":46505},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":46412},"end":{"line":1649,"column":94,"offset":46505},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":1651,"column":4,"offset":46512},"end":{"line":1651,"column":29,"offset":46537},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1651,"column":29,"offset":46537},"end":{"line":1651,"column":32,"offset":46540},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1651,"column":32,"offset":46540},"end":{"line":1651,"column":47,"offset":46555},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1651,"column":47,"offset":46555},"end":{"line":1651,"column":50,"offset":46558},"indent":[]}},{"type":"text","value":" to both nodes ","position":{"start":{"line":1651,"column":50,"offset":46558},"end":{"line":1651,"column":65,"offset":46573},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1651,"column":65,"offset":46573},"end":{"line":1651,"column":68,"offset":46576},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1651,"column":68,"offset":46576},"end":{"line":1651,"column":73,"offset":46581},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1651,"column":73,"offset":46581},"end":{"line":1651,"column":76,"offset":46584},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1651,"column":76,"offset":46584},"end":{"line":1651,"column":77,"offset":46585},"indent":[]}}],"position":{"start":{"line":1651,"column":4,"offset":46512},"end":{"line":1651,"column":77,"offset":46585},"indent":[]}}],"position":{"start":{"line":1651,"column":1,"offset":46509},"end":{"line":1651,"column":77,"offset":46585},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":1652,"column":4,"offset":46590},"end":{"line":1652,"column":30,"offset":46616},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1652,"column":30,"offset":46616},"end":{"line":1652,"column":33,"offset":46619},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1652,"column":33,"offset":46619},"end":{"line":1652,"column":48,"offset":46634},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1652,"column":48,"offset":46634},"end":{"line":1652,"column":51,"offset":46637},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1652,"column":51,"offset":46637},"end":{"line":1652,"column":60,"offset":46646},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1652,"column":60,"offset":46646},"end":{"line":1652,"column":63,"offset":46649},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1652,"column":63,"offset":46649},"end":{"line":1652,"column":64,"offset":46650},"indent":[]}}],"position":{"start":{"line":1652,"column":4,"offset":46590},"end":{"line":1652,"column":64,"offset":46650},"indent":[]}}],"position":{"start":{"line":1652,"column":1,"offset":46587},"end":{"line":1652,"column":64,"offset":46650},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":1653,"column":4,"offset":46655},"end":{"line":1653,"column":29,"offset":46680},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1653,"column":29,"offset":46680},"end":{"line":1653,"column":32,"offset":46683},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1653,"column":32,"offset":46683},"end":{"line":1653,"column":47,"offset":46698},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1653,"column":47,"offset":46698},"end":{"line":1653,"column":50,"offset":46701},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1653,"column":50,"offset":46701},"end":{"line":1653,"column":59,"offset":46710},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1653,"column":59,"offset":46710},"end":{"line":1653,"column":62,"offset":46713},"indent":[]}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":1653,"column":62,"offset":46713},"end":{"line":1653,"column":99,"offset":46750},"indent":[]}}],"position":{"start":{"line":1653,"column":4,"offset":46655},"end":{"line":1653,"column":99,"offset":46750},"indent":[]}}],"position":{"start":{"line":1653,"column":1,"offset":46652},"end":{"line":1653,"column":99,"offset":46750},"indent":[]}}],"position":{"start":{"line":1651,"column":1,"offset":46509},"end":{"line":1653,"column":99,"offset":46750},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":1655,"column":1,"offset":46754},"end":{"line":1655,"column":46,"offset":46799},"indent":[]}}],"position":{"start":{"line":1655,"column":1,"offset":46754},"end":{"line":1655,"column":46,"offset":46799},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/","position":{"start":{"line":1657,"column":1,"offset":46803},"end":{"line":1665,"column":4,"offset":46887},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":1667,"column":3,"offset":46893},"end":{"line":1667,"column":7,"offset":46897},"indent":[]}}],"position":{"start":{"line":1667,"column":1,"offset":46891},"end":{"line":1667,"column":9,"offset":46899},"indent":[]}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":1667,"column":9,"offset":46899},"end":{"line":1667,"column":205,"offset":47095},"indent":[]}}],"position":{"start":{"line":1667,"column":1,"offset":46891},"end":{"line":1667,"column":205,"offset":47095},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1669,"column":5,"offset":47103},"end":{"line":1669,"column":14,"offset":47112},"indent":[]}}],"position":{"start":{"line":1669,"column":1,"offset":47099},"end":{"line":1669,"column":14,"offset":47112},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":1671,"column":1,"offset":47116},"end":{"line":1671,"column":64,"offset":47179},"indent":[]}}],"position":{"start":{"line":1671,"column":1,"offset":47116},"end":{"line":1671,"column":64,"offset":47179},"indent":[]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};","position":{"start":{"line":1673,"column":1,"offset":47183},"end":{"line":1702,"column":4,"offset":47897},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"binary-tree-upside-down","url":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","position":{"start":{"line":1704,"column":1,"offset":47901},"end":{"line":1704,"column":127,"offset":48027},"indent":[]}}],"position":{"start":{"line":1704,"column":1,"offset":47901},"end":{"line":1704,"column":127,"offset":48027},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};","position":{"start":{"line":1706,"column":1,"offset":48031},"end":{"line":1747,"column":4,"offset":48924},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"maximum-sum-circular-subarray","url":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","position":{"start":{"line":1749,"column":1,"offset":48928},"end":{"line":1749,"column":138,"offset":49065},"indent":[]}}],"position":{"start":{"line":1749,"column":1,"offset":48928},"end":{"line":1749,"column":138,"offset":49065},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};","position":{"start":{"line":1751,"column":1,"offset":49069},"end":{"line":1771,"column":4,"offset":49592},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#balanced-binary-tree---leetcode","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1773,"column":2,"offset":49597},"end":{"line":1773,"column":142,"offset":49737},"indent":[]}}],"position":{"start":{"line":1773,"column":1,"offset":49596},"end":{"line":1773,"column":177,"offset":49772},"indent":[]}}],"position":{"start":{"line":1773,"column":1,"offset":49596},"end":{"line":1773,"column":177,"offset":49772},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"âž¤ Balanced Binary Tree - LeetCode","position":{"start":{"line":1775,"column":3,"offset":49778},"end":{"line":1775,"column":36,"offset":49811},"indent":[]}}],"position":{"start":{"line":1775,"column":1,"offset":49776},"end":{"line":1775,"column":36,"offset":49811},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1777,"column":3,"offset":49817},"end":{"line":1777,"column":144,"offset":49958},"indent":[]}}],"position":{"start":{"line":1777,"column":3,"offset":49817},"end":{"line":1777,"column":144,"offset":49958},"indent":[]}}],"position":{"start":{"line":1777,"column":1,"offset":49815},"end":{"line":1777,"column":144,"offset":49958},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":1779,"column":1,"offset":49962},"end":{"line":1779,"column":57,"offset":50018},"indent":[]}}],"position":{"start":{"line":1779,"column":1,"offset":49962},"end":{"line":1779,"column":57,"offset":50018},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":1781,"column":1,"offset":50022},"end":{"line":1781,"column":63,"offset":50084},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":50022},"end":{"line":1781,"column":63,"offset":50084},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":1783,"column":3,"offset":50090},"end":{"line":1783,"column":57,"offset":50144},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1783,"column":58,"offset":50145},"end":{"line":1783,"column":63,"offset":50150},"indent":[]}}],"position":{"start":{"line":1783,"column":57,"offset":50144},"end":{"line":1783,"column":64,"offset":50151},"indent":[]}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":1783,"column":64,"offset":50151},"end":{"line":1783,"column":105,"offset":50192},"indent":[]}}],"position":{"start":{"line":1783,"column":3,"offset":50090},"end":{"line":1783,"column":105,"offset":50192},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":50088},"end":{"line":1783,"column":105,"offset":50192},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1785,"column":3,"offset":50198},"end":{"line":1785,"column":13,"offset":50208},"indent":[]}}],"position":{"start":{"line":1785,"column":1,"offset":50196},"end":{"line":1785,"column":15,"offset":50210},"indent":[]}}],"position":{"start":{"line":1785,"column":1,"offset":50196},"end":{"line":1785,"column":15,"offset":50210},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null,"position":{"start":{"line":1787,"column":1,"offset":50214},"end":{"line":1787,"column":66,"offset":50279},"indent":[]}}],"position":{"start":{"line":1787,"column":1,"offset":50214},"end":{"line":1787,"column":66,"offset":50279},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1789,"column":3,"offset":50285},"end":{"line":1789,"column":9,"offset":50291},"indent":[]}}],"position":{"start":{"line":1789,"column":1,"offset":50283},"end":{"line":1789,"column":11,"offset":50293},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1789,"column":11,"offset":50293},"end":{"line":1789,"column":19,"offset":50301},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1789,"column":19,"offset":50301},"end":{"line":1789,"column":21,"offset":50303},"indent":[]}},{"type":"text","value":"3,9,20,null,null,15,7","position":{"start":{"line":1789,"column":21,"offset":50303},"end":{"line":1789,"column":42,"offset":50324},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1789,"column":42,"offset":50324},"end":{"line":1789,"column":44,"offset":50326},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1789,"column":44,"offset":50326},"end":{"line":1790,"column":1,"offset":50328},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1790,"column":3,"offset":50330},"end":{"line":1790,"column":10,"offset":50337},"indent":[]}}],"position":{"start":{"line":1790,"column":1,"offset":50328},"end":{"line":1790,"column":12,"offset":50339},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1790,"column":12,"offset":50339},"end":{"line":1790,"column":17,"offset":50344},"indent":[]}}],"position":{"start":{"line":1789,"column":1,"offset":50283},"end":{"line":1790,"column":17,"offset":50344},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1792,"column":3,"offset":50350},"end":{"line":1792,"column":13,"offset":50360},"indent":[]}}],"position":{"start":{"line":1792,"column":1,"offset":50348},"end":{"line":1792,"column":15,"offset":50362},"indent":[]}}],"position":{"start":{"line":1792,"column":1,"offset":50348},"end":{"line":1792,"column":15,"offset":50362},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null,"position":{"start":{"line":1794,"column":1,"offset":50366},"end":{"line":1794,"column":66,"offset":50431},"indent":[]}}],"position":{"start":{"line":1794,"column":1,"offset":50366},"end":{"line":1794,"column":66,"offset":50431},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1796,"column":3,"offset":50437},"end":{"line":1796,"column":9,"offset":50443},"indent":[]}}],"position":{"start":{"line":1796,"column":1,"offset":50435},"end":{"line":1796,"column":11,"offset":50445},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1796,"column":11,"offset":50445},"end":{"line":1796,"column":19,"offset":50453},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1796,"column":19,"offset":50453},"end":{"line":1796,"column":21,"offset":50455},"indent":[]}},{"type":"text","value":"1,2,2,3,3,null,null,4,4","position":{"start":{"line":1796,"column":21,"offset":50455},"end":{"line":1796,"column":44,"offset":50478},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1796,"column":44,"offset":50478},"end":{"line":1796,"column":46,"offset":50480},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1796,"column":46,"offset":50480},"end":{"line":1797,"column":1,"offset":50482},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1797,"column":3,"offset":50484},"end":{"line":1797,"column":10,"offset":50491},"indent":[]}}],"position":{"start":{"line":1797,"column":1,"offset":50482},"end":{"line":1797,"column":12,"offset":50493},"indent":[]}},{"type":"text","value":" false","position":{"start":{"line":1797,"column":12,"offset":50493},"end":{"line":1797,"column":18,"offset":50499},"indent":[]}}],"position":{"start":{"line":1796,"column":1,"offset":50435},"end":{"line":1797,"column":18,"offset":50499},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1799,"column":3,"offset":50505},"end":{"line":1799,"column":13,"offset":50515},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":50503},"end":{"line":1799,"column":15,"offset":50517},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":50503},"end":{"line":1799,"column":15,"offset":50517},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1801,"column":3,"offset":50523},"end":{"line":1801,"column":9,"offset":50529},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":50521},"end":{"line":1801,"column":11,"offset":50531},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1801,"column":11,"offset":50531},"end":{"line":1801,"column":19,"offset":50539},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1801,"column":19,"offset":50539},"end":{"line":1801,"column":21,"offset":50541},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1801,"column":21,"offset":50541},"end":{"line":1801,"column":23,"offset":50543},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1801,"column":23,"offset":50543},"end":{"line":1802,"column":1,"offset":50545},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1802,"column":3,"offset":50547},"end":{"line":1802,"column":10,"offset":50554},"indent":[]}}],"position":{"start":{"line":1802,"column":1,"offset":50545},"end":{"line":1802,"column":12,"offset":50556},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1802,"column":12,"offset":50556},"end":{"line":1802,"column":17,"offset":50561},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":50521},"end":{"line":1802,"column":17,"offset":50561},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1804,"column":3,"offset":50567},"end":{"line":1804,"column":15,"offset":50579},"indent":[]}}],"position":{"start":{"line":1804,"column":1,"offset":50565},"end":{"line":1804,"column":17,"offset":50581},"indent":[]}}],"position":{"start":{"line":1804,"column":1,"offset":50565},"end":{"line":1804,"column":17,"offset":50581},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1806,"column":5,"offset":50589},"end":{"line":1806,"column":53,"offset":50637},"indent":[]}},{"type":"inlineCode","value":"[0, 5000]","position":{"start":{"line":1806,"column":53,"offset":50637},"end":{"line":1806,"column":64,"offset":50648},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1806,"column":64,"offset":50648},"end":{"line":1806,"column":65,"offset":50649},"indent":[]}}],"position":{"start":{"line":1806,"column":5,"offset":50589},"end":{"line":1806,"column":65,"offset":50649},"indent":[]}}],"position":{"start":{"line":1806,"column":1,"offset":50585},"end":{"line":1806,"column":65,"offset":50649},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-104 <= Node.val <= 104","position":{"start":{"line":1807,"column":5,"offset":50655},"end":{"line":1807,"column":30,"offset":50680},"indent":[]}}],"position":{"start":{"line":1807,"column":5,"offset":50655},"end":{"line":1807,"column":30,"offset":50680},"indent":[]}}],"position":{"start":{"line":1807,"column":1,"offset":50651},"end":{"line":1807,"column":30,"offset":50680},"indent":[]}}],"position":{"start":{"line":1806,"column":1,"offset":50585},"end":{"line":1807,"column":30,"offset":50680},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/balanced-binary-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1809,"column":2,"offset":50685},"end":{"line":1809,"column":8,"offset":50691},"indent":[]}}],"position":{"start":{"line":1809,"column":1,"offset":50684},"end":{"line":1809,"column":62,"offset":50745},"indent":[]}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":1809,"column":62,"offset":50745},"end":{"line":1809,"column":106,"offset":50789},"indent":[]}}],"position":{"start":{"line":1809,"column":1,"offset":50684},"end":{"line":1809,"column":106,"offset":50789},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1811,"column":3,"offset":50795},"end":{"line":1811,"column":144,"offset":50936},"indent":[]}}],"position":{"start":{"line":1811,"column":3,"offset":50795},"end":{"line":1811,"column":144,"offset":50936},"indent":[]}}],"position":{"start":{"line":1811,"column":1,"offset":50793},"end":{"line":1811,"column":144,"offset":50936},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":1813,"column":1,"offset":50940},"end":{"line":1813,"column":98,"offset":51037},"indent":[]}}],"position":{"start":{"line":1813,"column":1,"offset":50940},"end":{"line":1813,"column":98,"offset":51037},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":1815,"column":1,"offset":51041},"end":{"line":1815,"column":119,"offset":51159},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1815,"column":120,"offset":51160},"end":{"line":1815,"column":125,"offset":51165},"indent":[]}}],"position":{"start":{"line":1815,"column":119,"offset":51159},"end":{"line":1815,"column":126,"offset":51166},"indent":[]}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":1815,"column":126,"offset":51166},"end":{"line":1815,"column":160,"offset":51200},"indent":[]}}],"position":{"start":{"line":1815,"column":1,"offset":51041},"end":{"line":1815,"column":160,"offset":51200},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1817,"column":3,"offset":51206},"end":{"line":1817,"column":11,"offset":51214},"indent":[]}}],"position":{"start":{"line":1817,"column":1,"offset":51204},"end":{"line":1817,"column":13,"offset":51216},"indent":[]}}],"position":{"start":{"line":1817,"column":1,"offset":51204},"end":{"line":1817,"column":13,"offset":51216},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":1819,"column":1,"offset":51220},"end":{"line":1819,"column":25,"offset":51244},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1819,"column":25,"offset":51244},"end":{"line":1819,"column":27,"offset":51246},"indent":[]}},{"type":"text","value":"-10,-3,0,5,9","position":{"start":{"line":1819,"column":27,"offset":51246},"end":{"line":1819,"column":39,"offset":51258},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1819,"column":39,"offset":51258},"end":{"line":1819,"column":41,"offset":51260},"indent":[]}},{"type":"text","value":",","position":{"start":{"line":1819,"column":41,"offset":51260},"end":{"line":1819,"column":42,"offset":51261},"indent":[]}}],"position":{"start":{"line":1819,"column":1,"offset":51220},"end":{"line":1819,"column":42,"offset":51261},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":1821,"column":1,"offset":51265},"end":{"line":1821,"column":25,"offset":51289},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1821,"column":25,"offset":51289},"end":{"line":1821,"column":27,"offset":51291},"indent":[]}},{"type":"text","value":"0,-3,9,-10,null,5","position":{"start":{"line":1821,"column":27,"offset":51291},"end":{"line":1821,"column":44,"offset":51308},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1821,"column":44,"offset":51308},"end":{"line":1821,"column":46,"offset":51310},"indent":[]}},{"type":"text","value":", which represents the following height balanced BST:","position":{"start":{"line":1821,"column":46,"offset":51310},"end":{"line":1821,"column":99,"offset":51363},"indent":[]}}],"position":{"start":{"line":1821,"column":1,"offset":51265},"end":{"line":1821,"column":99,"offset":51363},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  0\n / \\\\","position":{"start":{"line":1823,"column":1,"offset":51367},"end":{"line":1824,"column":10,"offset":51385},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"-3 9\n/ /\n-10 5","position":{"start":{"line":1826,"column":1,"offset":51389},"end":{"line":1828,"column":6,"offset":51405},"indent":[1,1]}}],"position":{"start":{"line":1826,"column":1,"offset":51389},"end":{"line":1828,"column":6,"offset":51405},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1830,"column":2,"offset":51410},"end":{"line":1830,"column":8,"offset":51416},"indent":[]}}],"position":{"start":{"line":1830,"column":1,"offset":51409},"end":{"line":1830,"column":84,"offset":51492},"indent":[]}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":1830,"column":84,"offset":51492},"end":{"line":1830,"column":106,"offset":51514},"indent":[]}}],"position":{"start":{"line":1830,"column":1,"offset":51409},"end":{"line":1830,"column":106,"offset":51514},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1832,"column":3,"offset":51520},"end":{"line":1832,"column":144,"offset":51661},"indent":[]}}],"position":{"start":{"line":1832,"column":3,"offset":51520},"end":{"line":1832,"column":144,"offset":51661},"indent":[]}}],"position":{"start":{"line":1832,"column":1,"offset":51518},"end":{"line":1832,"column":144,"offset":51661},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":1834,"column":1,"offset":51665},"end":{"line":1834,"column":157,"offset":51821},"indent":[]}}],"position":{"start":{"line":1834,"column":1,"offset":51665},"end":{"line":1834,"column":157,"offset":51821},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":1836,"column":1,"offset":51825},"end":{"line":1836,"column":56,"offset":51880},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":51825},"end":{"line":1836,"column":56,"offset":51880},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":1838,"column":5,"offset":51888},"end":{"line":1838,"column":33,"offset":51916},"indent":[]}}],"position":{"start":{"line":1838,"column":5,"offset":51888},"end":{"line":1838,"column":33,"offset":51916},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":51884},"end":{"line":1838,"column":33,"offset":51916},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":1839,"column":5,"offset":51922},"end":{"line":1839,"column":43,"offset":51960},"indent":[]}}],"position":{"start":{"line":1839,"column":5,"offset":51922},"end":{"line":1839,"column":43,"offset":51960},"indent":[]}}],"position":{"start":{"line":1839,"column":1,"offset":51918},"end":{"line":1839,"column":43,"offset":51960},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":51884},"end":{"line":1839,"column":43,"offset":51960},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":1841,"column":3,"offset":51966},"end":{"line":1841,"column":13,"offset":51976},"indent":[]}}],"position":{"start":{"line":1841,"column":1,"offset":51964},"end":{"line":1841,"column":15,"offset":51978},"indent":[]}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":1841,"column":15,"offset":51978},"end":{"line":1841,"column":54,"offset":52017},"indent":[]}},{"type":"inlineCode","value":"O(height of tree)","position":{"start":{"line":1841,"column":54,"offset":52017},"end":{"line":1841,"column":73,"offset":52036},"indent":[]}},{"type":"text","value":"?","position":{"start":{"line":1841,"column":73,"offset":52036},"end":{"line":1841,"column":74,"offset":52037},"indent":[]}}],"position":{"start":{"line":1841,"column":1,"offset":51964},"end":{"line":1841,"column":74,"offset":52037},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1843,"column":3,"offset":52043},"end":{"line":1843,"column":13,"offset":52053},"indent":[]}}],"position":{"start":{"line":1843,"column":1,"offset":52041},"end":{"line":1843,"column":15,"offset":52055},"indent":[]}}],"position":{"start":{"line":1843,"column":1,"offset":52041},"end":{"line":1843,"column":15,"offset":52055},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null,"position":{"start":{"line":1845,"column":1,"offset":52059},"end":{"line":1845,"column":67,"offset":52125},"indent":[]}}],"position":{"start":{"line":1845,"column":1,"offset":52059},"end":{"line":1845,"column":67,"offset":52125},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1847,"column":3,"offset":52131},"end":{"line":1847,"column":9,"offset":52137},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":52129},"end":{"line":1847,"column":11,"offset":52139},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1847,"column":11,"offset":52139},"end":{"line":1847,"column":19,"offset":52147},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1847,"column":19,"offset":52147},"end":{"line":1847,"column":21,"offset":52149},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7","position":{"start":{"line":1847,"column":21,"offset":52149},"end":{"line":1847,"column":37,"offset":52165},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1847,"column":37,"offset":52165},"end":{"line":1847,"column":39,"offset":52167},"indent":[]}},{"type":"text","value":", key = 3\n","position":{"start":{"line":1847,"column":39,"offset":52167},"end":{"line":1848,"column":1,"offset":52178},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1848,"column":3,"offset":52180},"end":{"line":1848,"column":10,"offset":52187},"indent":[]}}],"position":{"start":{"line":1848,"column":1,"offset":52178},"end":{"line":1848,"column":12,"offset":52189},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1848,"column":12,"offset":52189},"end":{"line":1848,"column":13,"offset":52190},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1848,"column":13,"offset":52190},"end":{"line":1848,"column":15,"offset":52192},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7","position":{"start":{"line":1848,"column":15,"offset":52192},"end":{"line":1848,"column":34,"offset":52211},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1848,"column":34,"offset":52211},"end":{"line":1848,"column":36,"offset":52213},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1848,"column":36,"offset":52213},"end":{"line":1849,"column":1,"offset":52215},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1849,"column":3,"offset":52217},"end":{"line":1849,"column":15,"offset":52229},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":52215},"end":{"line":1849,"column":17,"offset":52231},"indent":[]}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":1849,"column":17,"offset":52231},"end":{"line":1850,"column":21,"offset":52327},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1850,"column":21,"offset":52327},"end":{"line":1850,"column":23,"offset":52329},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7","position":{"start":{"line":1850,"column":23,"offset":52329},"end":{"line":1850,"column":42,"offset":52348},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1850,"column":42,"offset":52348},"end":{"line":1850,"column":44,"offset":52350},"indent":[]}},{"type":"text","value":", shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":1850,"column":44,"offset":52350},"end":{"line":1851,"column":44,"offset":52420},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1851,"column":44,"offset":52420},"end":{"line":1851,"column":46,"offset":52422},"indent":[]}},{"type":"text","value":"5,2,6,null,4,null,7","position":{"start":{"line":1851,"column":46,"offset":52422},"end":{"line":1851,"column":65,"offset":52441},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1851,"column":65,"offset":52441},"end":{"line":1851,"column":67,"offset":52443},"indent":[]}},{"type":"text","value":" and it's also accepted.\n","position":{"start":{"line":1851,"column":67,"offset":52443},"end":{"line":1852,"column":1,"offset":52469},"indent":[1]}},{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null,"position":{"start":{"line":1852,"column":1,"offset":52469},"end":{"line":1852,"column":70,"offset":52538},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":52129},"end":{"line":1852,"column":70,"offset":52538},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1854,"column":3,"offset":52544},"end":{"line":1854,"column":13,"offset":52554},"indent":[]}}],"position":{"start":{"line":1854,"column":1,"offset":52542},"end":{"line":1854,"column":15,"offset":52556},"indent":[]}}],"position":{"start":{"line":1854,"column":1,"offset":52542},"end":{"line":1854,"column":15,"offset":52556},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1856,"column":3,"offset":52562},"end":{"line":1856,"column":9,"offset":52568},"indent":[]}}],"position":{"start":{"line":1856,"column":1,"offset":52560},"end":{"line":1856,"column":11,"offset":52570},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1856,"column":11,"offset":52570},"end":{"line":1856,"column":19,"offset":52578},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1856,"column":19,"offset":52578},"end":{"line":1856,"column":21,"offset":52580},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7","position":{"start":{"line":1856,"column":21,"offset":52580},"end":{"line":1856,"column":37,"offset":52596},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1856,"column":37,"offset":52596},"end":{"line":1856,"column":39,"offset":52598},"indent":[]}},{"type":"text","value":", key = 0\n","position":{"start":{"line":1856,"column":39,"offset":52598},"end":{"line":1857,"column":1,"offset":52609},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1857,"column":3,"offset":52611},"end":{"line":1857,"column":10,"offset":52618},"indent":[]}}],"position":{"start":{"line":1857,"column":1,"offset":52609},"end":{"line":1857,"column":12,"offset":52620},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1857,"column":12,"offset":52620},"end":{"line":1857,"column":13,"offset":52621},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1857,"column":13,"offset":52621},"end":{"line":1857,"column":15,"offset":52623},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7","position":{"start":{"line":1857,"column":15,"offset":52623},"end":{"line":1857,"column":31,"offset":52639},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1857,"column":31,"offset":52639},"end":{"line":1857,"column":33,"offset":52641},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1857,"column":33,"offset":52641},"end":{"line":1858,"column":1,"offset":52643},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1858,"column":3,"offset":52645},"end":{"line":1858,"column":15,"offset":52657},"indent":[]}}],"position":{"start":{"line":1858,"column":1,"offset":52643},"end":{"line":1858,"column":17,"offset":52659},"indent":[]}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":1858,"column":17,"offset":52659},"end":{"line":1858,"column":66,"offset":52708},"indent":[]}}],"position":{"start":{"line":1856,"column":1,"offset":52560},"end":{"line":1858,"column":66,"offset":52708},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1860,"column":3,"offset":52714},"end":{"line":1860,"column":13,"offset":52724},"indent":[]}}],"position":{"start":{"line":1860,"column":1,"offset":52712},"end":{"line":1860,"column":15,"offset":52726},"indent":[]}}],"position":{"start":{"line":1860,"column":1,"offset":52712},"end":{"line":1860,"column":15,"offset":52726},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1862,"column":3,"offset":52732},"end":{"line":1862,"column":9,"offset":52738},"indent":[]}}],"position":{"start":{"line":1862,"column":1,"offset":52730},"end":{"line":1862,"column":11,"offset":52740},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1862,"column":11,"offset":52740},"end":{"line":1862,"column":19,"offset":52748},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1862,"column":19,"offset":52748},"end":{"line":1862,"column":21,"offset":52750},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1862,"column":21,"offset":52750},"end":{"line":1862,"column":23,"offset":52752},"indent":[]}},{"type":"text","value":", key = 0\n","position":{"start":{"line":1862,"column":23,"offset":52752},"end":{"line":1863,"column":1,"offset":52763},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1863,"column":3,"offset":52765},"end":{"line":1863,"column":10,"offset":52772},"indent":[]}}],"position":{"start":{"line":1863,"column":1,"offset":52763},"end":{"line":1863,"column":12,"offset":52774},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1863,"column":12,"offset":52774},"end":{"line":1863,"column":13,"offset":52775},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1863,"column":13,"offset":52775},"end":{"line":1863,"column":15,"offset":52777},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1863,"column":15,"offset":52777},"end":{"line":1863,"column":17,"offset":52779},"indent":[]}}],"position":{"start":{"line":1862,"column":1,"offset":52730},"end":{"line":1863,"column":17,"offset":52779},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1865,"column":3,"offset":52785},"end":{"line":1865,"column":15,"offset":52797},"indent":[]}}],"position":{"start":{"line":1865,"column":1,"offset":52783},"end":{"line":1865,"column":17,"offset":52799},"indent":[]}}],"position":{"start":{"line":1865,"column":1,"offset":52783},"end":{"line":1865,"column":17,"offset":52799},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1867,"column":5,"offset":52807},"end":{"line":1867,"column":53,"offset":52855},"indent":[]}},{"type":"inlineCode","value":"[0, 104]","position":{"start":{"line":1867,"column":53,"offset":52855},"end":{"line":1867,"column":63,"offset":52865},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1867,"column":63,"offset":52865},"end":{"line":1867,"column":64,"offset":52866},"indent":[]}}],"position":{"start":{"line":1867,"column":5,"offset":52807},"end":{"line":1867,"column":64,"offset":52866},"indent":[]}}],"position":{"start":{"line":1867,"column":1,"offset":52803},"end":{"line":1867,"column":64,"offset":52866},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= Node.val <= 105","position":{"start":{"line":1868,"column":5,"offset":52872},"end":{"line":1868,"column":30,"offset":52897},"indent":[]}}],"position":{"start":{"line":1868,"column":5,"offset":52872},"end":{"line":1868,"column":30,"offset":52897},"indent":[]}}],"position":{"start":{"line":1868,"column":1,"offset":52868},"end":{"line":1868,"column":30,"offset":52897},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":1869,"column":5,"offset":52903},"end":{"line":1869,"column":21,"offset":52919},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"unique","position":{"start":{"line":1869,"column":23,"offset":52921},"end":{"line":1869,"column":29,"offset":52927},"indent":[]}}],"position":{"start":{"line":1869,"column":21,"offset":52919},"end":{"line":1869,"column":31,"offset":52929},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":1869,"column":31,"offset":52929},"end":{"line":1869,"column":38,"offset":52936},"indent":[]}}],"position":{"start":{"line":1869,"column":5,"offset":52903},"end":{"line":1869,"column":38,"offset":52936},"indent":[]}}],"position":{"start":{"line":1869,"column":1,"offset":52899},"end":{"line":1869,"column":38,"offset":52936},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"root","position":{"start":{"line":1870,"column":5,"offset":52942},"end":{"line":1870,"column":11,"offset":52948},"indent":[]}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":1870,"column":11,"offset":52948},"end":{"line":1870,"column":42,"offset":52979},"indent":[]}}],"position":{"start":{"line":1870,"column":5,"offset":52942},"end":{"line":1870,"column":42,"offset":52979},"indent":[]}}],"position":{"start":{"line":1870,"column":1,"offset":52938},"end":{"line":1870,"column":42,"offset":52979},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= key <= 105","position":{"start":{"line":1871,"column":5,"offset":52985},"end":{"line":1871,"column":25,"offset":53005},"indent":[]}}],"position":{"start":{"line":1871,"column":5,"offset":52985},"end":{"line":1871,"column":25,"offset":53005},"indent":[]}}],"position":{"start":{"line":1871,"column":1,"offset":52981},"end":{"line":1871,"column":25,"offset":53005},"indent":[]}}],"position":{"start":{"line":1867,"column":1,"offset":52803},"end":{"line":1871,"column":25,"offset":53005},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/delete-node-in-a-bst/","children":[{"type":"text","value":"Source","position":{"start":{"line":1873,"column":2,"offset":53010},"end":{"line":1873,"column":8,"offset":53016},"indent":[]}}],"position":{"start":{"line":1873,"column":1,"offset":53009},"end":{"line":1873,"column":62,"offset":53070},"indent":[]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","position":{"start":{"line":1873,"column":62,"offset":53070},"end":{"line":1873,"column":173,"offset":53181},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1873,"column":173,"offset":53181},"end":{"line":1874,"column":1,"offset":53183},"indent":[1]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","position":{"start":{"line":1874,"column":1,"offset":53183},"end":{"line":1874,"column":112,"offset":53294},"indent":[]}}],"position":{"start":{"line":1873,"column":1,"offset":53009},"end":{"line":1874,"column":112,"offset":53294},"indent":[1]}},{"type":"code","lang":"javascript","meta":null,"value":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};","position":{"start":{"line":1876,"column":1,"offset":53298},"end":{"line":1899,"column":4,"offset":53903},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1901,"column":2,"offset":53908},"end":{"line":1901,"column":142,"offset":54048},"indent":[]}}],"position":{"start":{"line":1901,"column":1,"offset":53907},"end":{"line":1901,"column":147,"offset":54053},"indent":[]}}],"position":{"start":{"line":1901,"column":1,"offset":53907},"end":{"line":1901,"column":147,"offset":54053},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1902,"column":1,"offset":54055}}}}