{"expireTime":9007200888440672000,"key":"transformer-remark-markdown-html-ast-6f999d659d89733c3a0f04a78559e1b1--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"What is a buffer?","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":21,"offset":21}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":21,"offset":21}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A buffer is an area of memory. JavaScript developers are not familiar with this concept, much less than C, C++ or Go developers (or any programmer that uses a system programming language), which interact with memory every day.","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":227,"offset":249}}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":227,"offset":249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It represents a fixed-size chunk of memory (can't be resized) allocated outside of the V8 JavaScript engine.","position":{"start":{"line":6,"column":1,"offset":251},"end":{"line":6,"column":109,"offset":359}}}],"position":{"start":{"line":6,"column":1,"offset":251},"end":{"line":6,"column":109,"offset":359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can think of a buffer like an array of integers, which each represent a byte of data.","position":{"start":{"line":8,"column":1,"offset":361},"end":{"line":8,"column":90,"offset":450}}}],"position":{"start":{"line":8,"column":1,"offset":361},"end":{"line":8,"column":90,"offset":450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is implemented by the Node.js ","position":{"start":{"line":10,"column":1,"offset":452},"end":{"line":10,"column":34,"offset":485}}},{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html"},"children":[{"type":"text","value":"Buffer class","position":{"start":{"line":10,"column":35,"offset":486},"end":{"line":10,"column":47,"offset":498}}}],"position":{"start":{"line":10,"column":34,"offset":485},"end":{"line":10,"column":84,"offset":535}}},{"type":"text","value":".","position":{"start":{"line":10,"column":84,"offset":535},"end":{"line":10,"column":85,"offset":536}}}],"position":{"start":{"line":10,"column":1,"offset":452},"end":{"line":10,"column":85,"offset":536}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Why do we need a buffer?","position":{"start":{"line":12,"column":4,"offset":541},"end":{"line":12,"column":28,"offset":565}}}],"position":{"start":{"line":12,"column":1,"offset":538},"end":{"line":12,"column":28,"offset":565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Buffers were introduced to help developers deal with binary data, in an ecosystem that traditionally only dealt with strings rather than binaries.","position":{"start":{"line":14,"column":1,"offset":567},"end":{"line":14,"column":147,"offset":713}}}],"position":{"start":{"line":14,"column":1,"offset":567},"end":{"line":14,"column":147,"offset":713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Buffers are deeply linked with streams. When a stream processor receives data faster than it can digest, it puts the data in a buffer.","position":{"start":{"line":16,"column":1,"offset":715},"end":{"line":16,"column":135,"offset":849}}}],"position":{"start":{"line":16,"column":1,"offset":715},"end":{"line":16,"column":135,"offset":849}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A simple visualization of a buffer is when you are watching a YouTube video and the red line goes beyond your visualization point: you are downloading data faster than you're viewing it, and your browser buffers it.","position":{"start":{"line":18,"column":1,"offset":851},"end":{"line":18,"column":216,"offset":1066}}}],"position":{"start":{"line":18,"column":1,"offset":851},"end":{"line":18,"column":216,"offset":1066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"How to create a buffer","position":{"start":{"line":20,"column":4,"offset":1071},"end":{"line":20,"column":26,"offset":1093}}}],"position":{"start":{"line":20,"column":1,"offset":1068},"end":{"line":20,"column":26,"offset":1093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A buffer is created using the ","position":{"start":{"line":22,"column":1,"offset":1095},"end":{"line":22,"column":31,"offset":1125}}},{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_buffer_from_buffer_alloc_and_buffer_allocunsafe"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from()"}],"position":{"start":{"line":22,"column":32,"offset":1126},"end":{"line":22,"column":47,"offset":1141}}}],"position":{"start":{"line":22,"column":31,"offset":1125},"end":{"line":22,"column":139,"offset":1233}}},{"type":"text","value":", ","position":{"start":{"line":22,"column":139,"offset":1233},"end":{"line":22,"column":141,"offset":1235}}},{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_alloc_size_fill_encoding"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.alloc()"}],"position":{"start":{"line":22,"column":142,"offset":1236},"end":{"line":22,"column":158,"offset":1252}}}],"position":{"start":{"line":22,"column":141,"offset":1235},"end":{"line":22,"column":247,"offset":1341}}},{"type":"text","value":", and ","position":{"start":{"line":22,"column":247,"offset":1341},"end":{"line":22,"column":253,"offset":1347}}},{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafe_size"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.allocUnsafe()"}],"position":{"start":{"line":22,"column":254,"offset":1348},"end":{"line":22,"column":276,"offset":1370}}}],"position":{"start":{"line":22,"column":253,"offset":1347},"end":{"line":22,"column":357,"offset":1451}}},{"type":"text","value":" methods.","position":{"start":{"line":22,"column":357,"offset":1451},"end":{"line":22,"column":366,"offset":1460}}}],"position":{"start":{"line":22,"column":1,"offset":1095},"end":{"line":22,"column":366,"offset":1460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\n"}],"position":{"start":{"line":24,"column":1,"offset":1462},"end":{"line":26,"column":4,"offset":1504}}}],"position":{"start":{"line":24,"column":1,"offset":1462},"end":{"line":26,"column":4,"offset":1504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_array"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from(array)"}],"position":{"start":{"line":28,"column":6,"offset":1511},"end":{"line":28,"column":26,"offset":1531}}}],"position":{"start":{"line":28,"column":5,"offset":1510},"end":{"line":28,"column":101,"offset":1606}}}],"position":{"start":{"line":28,"column":1,"offset":1506},"end":{"line":28,"column":101,"offset":1606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from(arrayBuffer[, byteOffset[, length]])"}],"position":{"start":{"line":29,"column":6,"offset":1612},"end":{"line":29,"column":56,"offset":1662}}}],"position":{"start":{"line":29,"column":5,"offset":1611},"end":{"line":29,"column":155,"offset":1761}}}],"position":{"start":{"line":29,"column":1,"offset":1607},"end":{"line":29,"column":155,"offset":1761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_buffer"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from(buffer)"}],"position":{"start":{"line":30,"column":6,"offset":1767},"end":{"line":30,"column":27,"offset":1788}}}],"position":{"start":{"line":30,"column":5,"offset":1766},"end":{"line":30,"column":103,"offset":1864}}}],"position":{"start":{"line":30,"column":1,"offset":1762},"end":{"line":30,"column":103,"offset":1864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_string_encoding"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from(string[, encoding])"}],"position":{"start":{"line":31,"column":6,"offset":1870},"end":{"line":31,"column":39,"offset":1903}}}],"position":{"start":{"line":31,"column":5,"offset":1869},"end":{"line":31,"column":124,"offset":1988}}}],"position":{"start":{"line":31,"column":1,"offset":1865},"end":{"line":31,"column":124,"offset":1988}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":1,"offset":1506},"end":{"line":31,"column":124,"offset":1988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also just initialize the buffer passing the size. This creates a 1KB buffer:","position":{"start":{"line":33,"column":1,"offset":1990},"end":{"line":33,"column":85,"offset":2074}}}],"position":{"start":{"line":33,"column":1,"offset":1990},"end":{"line":33,"column":85,"offset":2074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.alloc(1024);\n//or\nconst buf = Buffer.allocUnsafe(1024);\n"}],"position":{"start":{"line":35,"column":1,"offset":2076},"end":{"line":39,"column":4,"offset":2160}}}],"position":{"start":{"line":35,"column":1,"offset":2076},"end":{"line":39,"column":4,"offset":2160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While both ","position":{"start":{"line":41,"column":1,"offset":2162},"end":{"line":41,"column":12,"offset":2173}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alloc"}],"position":{"start":{"line":41,"column":12,"offset":2173},"end":{"line":41,"column":19,"offset":2180}}},{"type":"text","value":" and ","position":{"start":{"line":41,"column":19,"offset":2180},"end":{"line":41,"column":24,"offset":2185}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allocUnsafe"}],"position":{"start":{"line":41,"column":24,"offset":2185},"end":{"line":41,"column":37,"offset":2198}}},{"type":"text","value":" allocate a ","position":{"start":{"line":41,"column":37,"offset":2198},"end":{"line":41,"column":49,"offset":2210}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer"}],"position":{"start":{"line":41,"column":49,"offset":2210},"end":{"line":41,"column":57,"offset":2218}}},{"type":"text","value":" of the specified size in bytes, the ","position":{"start":{"line":41,"column":57,"offset":2218},"end":{"line":41,"column":94,"offset":2255}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer"}],"position":{"start":{"line":41,"column":94,"offset":2255},"end":{"line":41,"column":102,"offset":2263}}},{"type":"text","value":" created by ","position":{"start":{"line":41,"column":102,"offset":2263},"end":{"line":41,"column":114,"offset":2275}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alloc"}],"position":{"start":{"line":41,"column":114,"offset":2275},"end":{"line":41,"column":121,"offset":2282}}},{"type":"text","value":" will be ","position":{"start":{"line":41,"column":121,"offset":2282},"end":{"line":41,"column":130,"offset":2291}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"initialized","position":{"start":{"line":41,"column":131,"offset":2292},"end":{"line":41,"column":142,"offset":2303}}}],"position":{"start":{"line":41,"column":130,"offset":2291},"end":{"line":41,"column":143,"offset":2304}}},{"type":"text","value":" with zeroes and the one created by ","position":{"start":{"line":41,"column":143,"offset":2304},"end":{"line":41,"column":179,"offset":2340}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allocUnsafe"}],"position":{"start":{"line":41,"column":179,"offset":2340},"end":{"line":41,"column":192,"offset":2353}}},{"type":"text","value":" will be ","position":{"start":{"line":41,"column":192,"offset":2353},"end":{"line":41,"column":201,"offset":2362}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"uninitialized","position":{"start":{"line":41,"column":202,"offset":2363},"end":{"line":41,"column":215,"offset":2376}}}],"position":{"start":{"line":41,"column":201,"offset":2362},"end":{"line":41,"column":216,"offset":2377}}},{"type":"text","value":". This means that while ","position":{"start":{"line":41,"column":216,"offset":2377},"end":{"line":41,"column":240,"offset":2401}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allocUnsafe"}],"position":{"start":{"line":41,"column":240,"offset":2401},"end":{"line":41,"column":253,"offset":2414}}},{"type":"text","value":" would be quite fast in comparison to ","position":{"start":{"line":41,"column":253,"offset":2414},"end":{"line":41,"column":291,"offset":2452}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alloc"}],"position":{"start":{"line":41,"column":291,"offset":2452},"end":{"line":41,"column":298,"offset":2459}}},{"type":"text","value":", the allocated segment of memory may contain old data which could potentially be sensitive.","position":{"start":{"line":41,"column":298,"offset":2459},"end":{"line":41,"column":390,"offset":2551}}}],"position":{"start":{"line":41,"column":1,"offset":2162},"end":{"line":41,"column":390,"offset":2551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Older data, if present in the memory, can be accessed or leaked when the ","position":{"start":{"line":43,"column":1,"offset":2553},"end":{"line":43,"column":74,"offset":2626}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer"}],"position":{"start":{"line":43,"column":74,"offset":2626},"end":{"line":43,"column":82,"offset":2634}}},{"type":"text","value":" memory is read. This is what really makes ","position":{"start":{"line":43,"column":82,"offset":2634},"end":{"line":43,"column":125,"offset":2677}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allocUnsafe"}],"position":{"start":{"line":43,"column":125,"offset":2677},"end":{"line":43,"column":138,"offset":2690}}},{"type":"text","value":" unsafe and extra care must be taken while using it.","position":{"start":{"line":43,"column":138,"offset":2690},"end":{"line":43,"column":190,"offset":2742}}}],"position":{"start":{"line":43,"column":1,"offset":2553},"end":{"line":43,"column":190,"offset":2742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Using a buffer","position":{"start":{"line":45,"column":4,"offset":2747},"end":{"line":45,"column":18,"offset":2761}}}],"position":{"start":{"line":45,"column":1,"offset":2744},"end":{"line":45,"column":18,"offset":2761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Access the content of a buffer","position":{"start":{"line":47,"column":5,"offset":2767},"end":{"line":47,"column":35,"offset":2797}}}],"position":{"start":{"line":47,"column":1,"offset":2763},"end":{"line":47,"column":35,"offset":2797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A buffer, being an array of bytes, can be accessed like an array:","position":{"start":{"line":49,"column":1,"offset":2799},"end":{"line":49,"column":66,"offset":2864}}}],"position":{"start":{"line":49,"column":1,"offset":2799},"end":{"line":49,"column":66,"offset":2864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nconsole.log(buf[0]); //72\nconsole.log(buf[1]); //101\nconsole.log(buf[2]); //121\n"}],"position":{"start":{"line":51,"column":1,"offset":2866},"end":{"line":56,"column":4,"offset":2988}}}],"position":{"start":{"line":51,"column":1,"offset":2866},"end":{"line":56,"column":4,"offset":2988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Those numbers are the Unicode Code that identifies the character in the buffer position (H => 72, e => 101, y => 121)","position":{"start":{"line":58,"column":1,"offset":2990},"end":{"line":58,"column":118,"offset":3107}}}],"position":{"start":{"line":58,"column":1,"offset":2990},"end":{"line":58,"column":118,"offset":3107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can print the full content of the buffer using the ","position":{"start":{"line":60,"column":1,"offset":3109},"end":{"line":60,"column":56,"offset":3164}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toString()"}],"position":{"start":{"line":60,"column":56,"offset":3164},"end":{"line":60,"column":68,"offset":3176}}},{"type":"text","value":" method:","position":{"start":{"line":60,"column":68,"offset":3176},"end":{"line":60,"column":76,"offset":3184}}}],"position":{"start":{"line":60,"column":1,"offset":3109},"end":{"line":60,"column":76,"offset":3184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"console.log(buf.toString());\n"}],"position":{"start":{"line":62,"column":1,"offset":3186},"end":{"line":64,"column":4,"offset":3224}}}],"position":{"start":{"line":62,"column":1,"offset":3186},"end":{"line":64,"column":4,"offset":3224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice that if you initialize a buffer with a number that sets its size, you'll get access to pre-initialized memory that will contain random data, not an empty buffer!","position":{"start":{"line":66,"column":3,"offset":3228},"end":{"line":66,"column":171,"offset":3396}}}],"position":{"start":{"line":66,"column":3,"offset":3228},"end":{"line":66,"column":171,"offset":3396}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":1,"offset":3226},"end":{"line":66,"column":171,"offset":3396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Get the length of a buffer","position":{"start":{"line":68,"column":5,"offset":3402},"end":{"line":68,"column":31,"offset":3428}}}],"position":{"start":{"line":68,"column":1,"offset":3398},"end":{"line":68,"column":31,"offset":3428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":70,"column":1,"offset":3430},"end":{"line":70,"column":9,"offset":3438}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"length"}],"position":{"start":{"line":70,"column":9,"offset":3438},"end":{"line":70,"column":17,"offset":3446}}},{"type":"text","value":" property:","position":{"start":{"line":70,"column":17,"offset":3446},"end":{"line":70,"column":27,"offset":3456}}}],"position":{"start":{"line":70,"column":1,"offset":3430},"end":{"line":70,"column":27,"offset":3456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nconsole.log(buf.length);\n"}],"position":{"start":{"line":72,"column":1,"offset":3458},"end":{"line":75,"column":4,"offset":3525}}}],"position":{"start":{"line":72,"column":1,"offset":3458},"end":{"line":75,"column":4,"offset":3525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Iterate over the contents of a buffer","position":{"start":{"line":77,"column":5,"offset":3531},"end":{"line":77,"column":42,"offset":3568}}}],"position":{"start":{"line":77,"column":1,"offset":3527},"end":{"line":77,"column":42,"offset":3568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nfor (const item of buf) {\n    console.log(item); //72 101 121 33\n}\n"}],"position":{"start":{"line":79,"column":1,"offset":3570},"end":{"line":84,"column":4,"offset":3679}}}],"position":{"start":{"line":79,"column":1,"offset":3570},"end":{"line":84,"column":4,"offset":3679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Changing the content of a buffer","position":{"start":{"line":86,"column":5,"offset":3685},"end":{"line":86,"column":37,"offset":3717}}}],"position":{"start":{"line":86,"column":1,"offset":3681},"end":{"line":86,"column":37,"offset":3717}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can write to a buffer a whole string of data by using the ","position":{"start":{"line":88,"column":1,"offset":3719},"end":{"line":88,"column":63,"offset":3781}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"write()"}],"position":{"start":{"line":88,"column":63,"offset":3781},"end":{"line":88,"column":72,"offset":3790}}},{"type":"text","value":" method:","position":{"start":{"line":88,"column":72,"offset":3790},"end":{"line":88,"column":80,"offset":3798}}}],"position":{"start":{"line":88,"column":1,"offset":3719},"end":{"line":88,"column":80,"offset":3798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.alloc(4);\nbuf.write('Hey!');\n"}],"position":{"start":{"line":90,"column":1,"offset":3800},"end":{"line":93,"column":4,"offset":3857}}}],"position":{"start":{"line":90,"column":1,"offset":3800},"end":{"line":93,"column":4,"offset":3857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just like you can access a buffer with an array syntax, you can also set the contents of the buffer in the same way:","position":{"start":{"line":95,"column":1,"offset":3859},"end":{"line":95,"column":117,"offset":3975}}}],"position":{"start":{"line":95,"column":1,"offset":3859},"end":{"line":95,"column":117,"offset":3975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nbuf[1] = 111; //o\nconsole.log(buf.toString()); //Hoy!\n"}],"position":{"start":{"line":97,"column":1,"offset":3977},"end":{"line":101,"column":4,"offset":4073}}}],"position":{"start":{"line":97,"column":1,"offset":3977},"end":{"line":101,"column":4,"offset":4073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Copy a buffer","position":{"start":{"line":103,"column":5,"offset":4079},"end":{"line":103,"column":18,"offset":4092}}}],"position":{"start":{"line":103,"column":1,"offset":4075},"end":{"line":103,"column":18,"offset":4092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Copying a buffer is possible using the ","position":{"start":{"line":105,"column":1,"offset":4094},"end":{"line":105,"column":40,"offset":4133}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"copy()"}],"position":{"start":{"line":105,"column":40,"offset":4133},"end":{"line":105,"column":48,"offset":4141}}},{"type":"text","value":" method:","position":{"start":{"line":105,"column":48,"offset":4141},"end":{"line":105,"column":56,"offset":4149}}}],"position":{"start":{"line":105,"column":1,"offset":4094},"end":{"line":105,"column":56,"offset":4149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(4); //allocate 4 bytes\nbuf.copy(bufcopy);\n"}],"position":{"start":{"line":107,"column":1,"offset":4151},"end":{"line":111,"column":4,"offset":4262}}}],"position":{"start":{"line":107,"column":1,"offset":4151},"end":{"line":111,"column":4,"offset":4262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By default you copy the whole buffer. 3 more parameters let you define the starting position, the ending position, and the new buffer length:","position":{"start":{"line":113,"column":1,"offset":4264},"end":{"line":113,"column":142,"offset":4405}}}],"position":{"start":{"line":113,"column":1,"offset":4264},"end":{"line":113,"column":142,"offset":4405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(2); //allocate 2 bytes\nbuf.copy(bufcopy, 0, 0, 2);\nbufcopy.toString(); //'He'\n"}],"position":{"start":{"line":115,"column":1,"offset":4407},"end":{"line":120,"column":4,"offset":4554}}}],"position":{"start":{"line":115,"column":1,"offset":4407},"end":{"line":120,"column":4,"offset":4554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Slice a buffer","position":{"start":{"line":122,"column":5,"offset":4560},"end":{"line":122,"column":19,"offset":4574}}}],"position":{"start":{"line":122,"column":1,"offset":4556},"end":{"line":122,"column":19,"offset":4574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to create a partial visualization of a buffer, you can create a slice. A slice is not a copy: the original buffer is still the source of truth. If that changes, your slice changes.","position":{"start":{"line":124,"column":1,"offset":4576},"end":{"line":124,"column":193,"offset":4768}}}],"position":{"start":{"line":124,"column":1,"offset":4576},"end":{"line":124,"column":193,"offset":4768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":126,"column":1,"offset":4770},"end":{"line":126,"column":9,"offset":4778}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"slice()"}],"position":{"start":{"line":126,"column":9,"offset":4778},"end":{"line":126,"column":18,"offset":4787}}},{"type":"text","value":" method to create it. The first parameter is the starting position, and you can specify an optional second parameter with the end position:","position":{"start":{"line":126,"column":18,"offset":4787},"end":{"line":126,"column":157,"offset":4926}}}],"position":{"start":{"line":126,"column":1,"offset":4770},"end":{"line":126,"column":157,"offset":4926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nbuf.slice(0).toString(); //Hey!\nconst slice = buf.slice(0, 2);\nconsole.log(slice.toString()); //He\nbuf[1] = 111; //o\nconsole.log(slice.toString()); //Ho\n"}],"position":{"start":{"line":128,"column":1,"offset":4928},"end":{"line":135,"column":4,"offset":5123}}}],"position":{"start":{"line":128,"column":1,"offset":4928},"end":{"line":135,"column":4,"offset":5123}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":136,"column":1,"offset":5124}}}}