{"expireTime":9007200882761074000,"key":"transformer-remark-markdown-ast-ad428b38b8f26047d8bce3d16e3325d7--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Go To Sitemap: ","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":18,"offset":19},"indent":[]}},{"type":"link","title":null,"url":"./docs/sitemap/","children":[{"type":"text","value":"Go Now -->","position":{"start":{"line":2,"column":19,"offset":20},"end":{"line":2,"column":29,"offset":30},"indent":[]}}],"position":{"start":{"line":2,"column":18,"offset":19},"end":{"line":2,"column":47,"offset":48},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":47,"offset":48},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Doc Websites & Repos","position":{"start":{"line":4,"column":4,"offset":55},"end":{"line":4,"column":24,"offset":75},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":52},"end":{"line":4,"column":24,"offset":75},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/PYTHON_PRAC","children":[{"type":"text","value":"Python Practice","position":{"start":{"line":6,"column":6,"offset":84},"end":{"line":6,"column":21,"offset":99},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":83},"end":{"line":6,"column":61,"offset":139},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":83},"end":{"line":6,"column":61,"offset":139},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":79},"end":{"line":6,"column":61,"offset":139},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://lambda-resources.netlify.app/","children":[{"type":"text","value":"Lambda Bootcamp Website","position":{"start":{"line":7,"column":6,"offset":146},"end":{"line":7,"column":29,"offset":169},"indent":[]}}],"position":{"start":{"line":7,"column":5,"offset":145},"end":{"line":7,"column":69,"offset":209},"indent":[]}}],"position":{"start":{"line":7,"column":5,"offset":145},"end":{"line":7,"column":69,"offset":209},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":141},"end":{"line":7,"column":69,"offset":209},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/React_Notes_V3","children":[{"type":"text","value":"React Notes","position":{"start":{"line":8,"column":6,"offset":216},"end":{"line":8,"column":17,"offset":227},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":215},"end":{"line":8,"column":60,"offset":270},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":215},"end":{"line":8,"column":60,"offset":270},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":211},"end":{"line":8,"column":60,"offset":270},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Project-Showcase","children":[{"type":"text","value":"Project Showcase","position":{"start":{"line":9,"column":6,"offset":277},"end":{"line":9,"column":22,"offset":293},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":276},"end":{"line":9,"column":67,"offset":338},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":276},"end":{"line":9,"column":67,"offset":338},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":272},"end":{"line":9,"column":67,"offset":338},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/DS-ALGO-OFFICIAL","children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":10,"column":6,"offset":345},"end":{"line":10,"column":34,"offset":373},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":344},"end":{"line":10,"column":79,"offset":418},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":344},"end":{"line":10,"column":79,"offset":418},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":340},"end":{"line":10,"column":79,"offset":418},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Lambda-Resource-Static-Assets","children":[{"type":"text","value":"Lambda Site Static Content Server","position":{"start":{"line":11,"column":6,"offset":425},"end":{"line":11,"column":39,"offset":458},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":424},"end":{"line":11,"column":97,"offset":516},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":424},"end":{"line":11,"column":97,"offset":516},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":420},"end":{"line":11,"column":97,"offset":516},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/mini-project-showcase","children":[{"type":"text","value":"Mini-Project Showcase","position":{"start":{"line":12,"column":6,"offset":523},"end":{"line":12,"column":27,"offset":544},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":522},"end":{"line":12,"column":77,"offset":594},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":522},"end":{"line":12,"column":77,"offset":594},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":518},"end":{"line":12,"column":77,"offset":594},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Useful-Snippets-js","children":[{"type":"text","value":"Useful Snippets","position":{"start":{"line":13,"column":6,"offset":601},"end":{"line":13,"column":21,"offset":616},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":600},"end":{"line":13,"column":68,"offset":663},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":600},"end":{"line":13,"column":68,"offset":663},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":596},"end":{"line":13,"column":68,"offset":663},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Markdown-Templates","children":[{"type":"text","value":"Markdown Templates","position":{"start":{"line":14,"column":6,"offset":670},"end":{"line":14,"column":24,"offset":688},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":669},"end":{"line":14,"column":71,"offset":735},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":669},"end":{"line":14,"column":71,"offset":735},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":665},"end":{"line":14,"column":71,"offset":735},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/zumzi-chat-messenger","children":[{"type":"text","value":"Zumzi Video Conferencing App (mesibo api backend)","position":{"start":{"line":15,"column":6,"offset":742},"end":{"line":15,"column":55,"offset":791},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":741},"end":{"line":15,"column":104,"offset":840},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":741},"end":{"line":15,"column":104,"offset":840},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":737},"end":{"line":15,"column":104,"offset":840},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":79},"end":{"line":15,"column":104,"offset":840},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Core Concepts","position":{"start":{"line":17,"column":3,"offset":846},"end":{"line":17,"column":16,"offset":859},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":844},"end":{"line":17,"column":16,"offset":859},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"index","position":{"start":{"line":19,"column":3,"offset":865},"end":{"line":19,"column":8,"offset":870},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":863},"end":{"line":19,"column":8,"offset":870},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.","position":{"start":{"line":21,"column":1,"offset":874},"end":{"line":21,"column":175,"offset":1048},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":874},"end":{"line":21,"column":175,"offset":1048},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ","position":{"start":{"line":23,"column":1,"offset":1052},"end":{"line":23,"column":319,"offset":1370},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/","children":[{"type":"text","value":"Mozilla Developer Network's website","position":{"start":{"line":23,"column":320,"offset":1371},"end":{"line":23,"column":355,"offset":1406},"indent":[]}}],"position":{"start":{"line":23,"column":319,"offset":1370},"end":{"line":23,"column":388,"offset":1439},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":23,"column":388,"offset":1439},"end":{"line":23,"column":389,"offset":1440},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":23,"column":389,"offset":1440},"end":{"line":23,"column":391,"offset":1442},"indent":[]}},{"type":"text","value":"MDN","position":{"start":{"line":23,"column":391,"offset":1442},"end":{"line":23,"column":394,"offset":1445},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":23,"column":394,"offset":1445},"end":{"line":23,"column":396,"offset":1447},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":23,"column":396,"offset":1447},"end":{"line":23,"column":397,"offset":1448},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1052},"end":{"line":23,"column":397,"offset":1448},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prefer ","position":{"start":{"line":25,"column":4,"offset":1455},"end":{"line":25,"column":11,"offset":1462},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":25,"column":11,"offset":1462},"end":{"line":25,"column":18,"offset":1469},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":25,"column":18,"offset":1469},"end":{"line":25,"column":23,"offset":1474},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":25,"column":23,"offset":1474},"end":{"line":25,"column":28,"offset":1479},"indent":[]}},{"type":"text","value":" over ","position":{"start":{"line":25,"column":28,"offset":1479},"end":{"line":25,"column":34,"offset":1485},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":25,"column":34,"offset":1485},"end":{"line":25,"column":39,"offset":1490},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1452},"end":{"line":25,"column":39,"offset":1490},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ","position":{"start":{"line":27,"column":1,"offset":1494},"end":{"line":27,"column":99,"offset":1592},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":27,"column":99,"offset":1592},"end":{"line":27,"column":104,"offset":1597},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":27,"column":104,"offset":1597},"end":{"line":27,"column":105,"offset":1598},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1494},"end":{"line":27,"column":105,"offset":1598},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar myVariable = 5;","position":{"start":{"line":29,"column":1,"offset":1602},"end":{"line":31,"column":4,"offset":1632},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Both the ","position":{"start":{"line":33,"column":1,"offset":1636},"end":{"line":33,"column":10,"offset":1645},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":33,"column":10,"offset":1645},"end":{"line":33,"column":17,"offset":1652},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":33,"column":17,"offset":1652},"end":{"line":33,"column":22,"offset":1657},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":33,"column":22,"offset":1657},"end":{"line":33,"column":27,"offset":1662},"indent":[]}},{"type":"text","value":" statements also declare variables. They were introduced in ES6.","position":{"start":{"line":33,"column":27,"offset":1662},"end":{"line":33,"column":91,"offset":1726},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1636},"end":{"line":33,"column":91,"offset":1726},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":35,"column":1,"offset":1730},"end":{"line":35,"column":5,"offset":1734},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":35,"column":5,"offset":1734},"end":{"line":35,"column":12,"offset":1741},"indent":[]}},{"type":"text","value":" in cases where a variable is never re-assigned. Using ","position":{"start":{"line":35,"column":12,"offset":1741},"end":{"line":35,"column":67,"offset":1796},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":35,"column":67,"offset":1796},"end":{"line":35,"column":74,"offset":1803},"indent":[]}},{"type":"text","value":" makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.","position":{"start":{"line":35,"column":74,"offset":1803},"end":{"line":35,"column":211,"offset":1940},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1730},"end":{"line":35,"column":211,"offset":1940},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the variable will be re-assigned, use ","position":{"start":{"line":37,"column":1,"offset":1944},"end":{"line":37,"column":42,"offset":1985},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":37,"column":42,"offset":1985},"end":{"line":37,"column":47,"offset":1990},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":37,"column":47,"offset":1990},"end":{"line":37,"column":48,"offset":1991},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1944},"end":{"line":37,"column":48,"offset":1991},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We encourage the use of ","position":{"start":{"line":39,"column":1,"offset":1995},"end":{"line":39,"column":25,"offset":2019},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":39,"column":25,"offset":2019},"end":{"line":39,"column":32,"offset":2026},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":39,"column":32,"offset":2026},"end":{"line":39,"column":37,"offset":2031},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":39,"column":37,"offset":2031},"end":{"line":39,"column":42,"offset":2036},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":39,"column":42,"offset":2036},"end":{"line":39,"column":54,"offset":2048},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":39,"column":54,"offset":2048},"end":{"line":39,"column":59,"offset":2053},"indent":[]}},{"type":"text","value":". In addition to the restriction introduced by ","position":{"start":{"line":39,"column":59,"offset":2053},"end":{"line":39,"column":106,"offset":2100},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":39,"column":106,"offset":2100},"end":{"line":39,"column":113,"offset":2107},"indent":[]}},{"type":"text","value":", both ","position":{"start":{"line":39,"column":113,"offset":2107},"end":{"line":39,"column":120,"offset":2114},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":39,"column":120,"offset":2114},"end":{"line":39,"column":127,"offset":2121},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":39,"column":127,"offset":2121},"end":{"line":39,"column":132,"offset":2126},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":39,"column":132,"offset":2126},"end":{"line":39,"column":137,"offset":2131},"indent":[]}},{"type":"text","value":" are ","position":{"start":{"line":39,"column":137,"offset":2131},"end":{"line":39,"column":142,"offset":2136},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"block scoped","position":{"start":{"line":39,"column":143,"offset":2137},"end":{"line":39,"column":155,"offset":2149},"indent":[]}}],"position":{"start":{"line":39,"column":142,"offset":2136},"end":{"line":39,"column":156,"offset":2150},"indent":[]}},{"type":"text","value":" as opposed to ","position":{"start":{"line":39,"column":156,"offset":2150},"end":{"line":39,"column":171,"offset":2165},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function scoped","position":{"start":{"line":39,"column":172,"offset":2166},"end":{"line":39,"column":187,"offset":2181},"indent":[]}}],"position":{"start":{"line":39,"column":171,"offset":2165},"end":{"line":39,"column":188,"offset":2182},"indent":[]}},{"type":"text","value":". This scoping can help avoid unexpected bugs.","position":{"start":{"line":39,"column":188,"offset":2182},"end":{"line":39,"column":234,"offset":2228},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1995},"end":{"line":39,"column":234,"offset":2228},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":41,"column":4,"offset":2235},"end":{"line":41,"column":19,"offset":2250},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2232},"end":{"line":41,"column":19,"offset":2250},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:","position":{"start":{"line":43,"column":1,"offset":2254},"end":{"line":43,"column":121,"offset":2374},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2254},"end":{"line":43,"column":121,"offset":2374},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];","position":{"start":{"line":45,"column":1,"offset":2378},"end":{"line":50,"column":4,"offset":2481},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:","position":{"start":{"line":52,"column":1,"offset":2485},"end":{"line":52,"column":116,"offset":2600},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2485},"end":{"line":52,"column":116,"offset":2600},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations = cities.map((city) => {\n    const popMM = (city.pop / 1000000).toFixed(2);\n    return popMM + ' million';\n});\nconsole.log(formattedPopulations);","position":{"start":{"line":54,"column":1,"offset":2604},"end":{"line":60,"column":4,"offset":2792},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that we must also explicitly specify a ","position":{"start":{"line":62,"column":1,"offset":2796},"end":{"line":62,"column":45,"offset":2840},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":62,"column":45,"offset":2840},"end":{"line":62,"column":53,"offset":2848},"indent":[]}},{"type":"text","value":" for the function.","position":{"start":{"line":62,"column":53,"offset":2848},"end":{"line":62,"column":71,"offset":2866},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2796},"end":{"line":62,"column":71,"offset":2866},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, if we write a function body that is only a single line ","position":{"start":{"line":64,"column":1,"offset":2870},"end":{"line":64,"column":65,"offset":2934},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":64,"column":65,"offset":2934},"end":{"line":64,"column":67,"offset":2936},"indent":[]}},{"type":"text","value":"or single expression","position":{"start":{"line":64,"column":67,"offset":2936},"end":{"line":64,"column":87,"offset":2956},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":64,"column":87,"offset":2956},"end":{"line":64,"column":89,"offset":2958},"indent":[]}},{"type":"text","value":" we can use parentheses to delimit it:","position":{"start":{"line":64,"column":89,"offset":2958},"end":{"line":64,"column":127,"offset":2996},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2870},"end":{"line":64,"column":127,"offset":2996},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations2 = cities.map((city) => (city.pop / 1000000).toFixed(2) + ' million');","position":{"start":{"line":66,"column":1,"offset":3000},"end":{"line":68,"column":4,"offset":3109},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notably, we don't use ","position":{"start":{"line":70,"column":1,"offset":3113},"end":{"line":70,"column":23,"offset":3135},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":70,"column":23,"offset":3135},"end":{"line":70,"column":31,"offset":3143},"indent":[]}},{"type":"text","value":" as it's implied.","position":{"start":{"line":70,"column":31,"offset":3143},"end":{"line":70,"column":48,"offset":3160},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3113},"end":{"line":70,"column":48,"offset":3160},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Furthermore, if your function body is terse you can write it like so:","position":{"start":{"line":72,"column":1,"offset":3164},"end":{"line":72,"column":70,"offset":3233},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":3164},"end":{"line":72,"column":70,"offset":3233},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const pops = cities.map((city) => city.pop);\nconsole.log(pops);","position":{"start":{"line":74,"column":1,"offset":3237},"end":{"line":77,"column":4,"offset":3313},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:","position":{"start":{"line":79,"column":1,"offset":3317},"end":{"line":79,"column":110,"offset":3426},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":3317},"end":{"line":79,"column":110,"offset":3426},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const popsNoArrow = cities.map(function (city) {\n    return city.pop;\n});","position":{"start":{"line":81,"column":1,"offset":3430},"end":{"line":85,"column":4,"offset":3517},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Of greater benefit, though, is how arrow functions bind the ","position":{"start":{"line":87,"column":1,"offset":3521},"end":{"line":87,"column":61,"offset":3581},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":87,"column":61,"offset":3581},"end":{"line":87,"column":67,"offset":3587},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":87,"column":67,"offset":3587},"end":{"line":87,"column":75,"offset":3595},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":3521},"end":{"line":87,"column":75,"offset":3595},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The traditional JavaScript function declaration syntax ","position":{"start":{"line":89,"column":1,"offset":3599},"end":{"line":89,"column":56,"offset":3654},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":89,"column":56,"offset":3654},"end":{"line":89,"column":58,"offset":3656},"indent":[]}},{"type":"inlineCode","value":"function () {}","position":{"start":{"line":89,"column":58,"offset":3656},"end":{"line":89,"column":74,"offset":3672},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":89,"column":74,"offset":3672},"end":{"line":89,"column":76,"offset":3674},"indent":[]}},{"type":"text","value":" will bind ","position":{"start":{"line":89,"column":76,"offset":3674},"end":{"line":89,"column":87,"offset":3685},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":89,"column":87,"offset":3685},"end":{"line":89,"column":93,"offset":3691},"indent":[]}},{"type":"text","value":" in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:","position":{"start":{"line":89,"column":93,"offset":3691},"end":{"line":89,"column":211,"offset":3809},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3599},"end":{"line":89,"column":211,"offset":3809},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":91,"column":1,"offset":3813},"end":{"line":120,"column":4,"offset":4330},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The method ","position":{"start":{"line":122,"column":1,"offset":4334},"end":{"line":122,"column":12,"offset":4345},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":122,"column":12,"offset":4345},"end":{"line":122,"column":26,"offset":4359},"indent":[]}},{"type":"text","value":" iterates over ","position":{"start":{"line":122,"column":26,"offset":4359},"end":{"line":122,"column":41,"offset":4374},"indent":[]}},{"type":"inlineCode","value":"this.songs","position":{"start":{"line":122,"column":41,"offset":4374},"end":{"line":122,"column":53,"offset":4386},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":122,"column":53,"offset":4386},"end":{"line":122,"column":59,"offset":4392},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":122,"column":59,"offset":4392},"end":{"line":122,"column":70,"offset":4403},"indent":[]}},{"type":"text","value":". In this context, ","position":{"start":{"line":122,"column":70,"offset":4403},"end":{"line":122,"column":89,"offset":4422},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":122,"column":89,"offset":4422},"end":{"line":122,"column":95,"offset":4428},"indent":[]}},{"type":"text","value":" is bound to the object ","position":{"start":{"line":122,"column":95,"offset":4428},"end":{"line":122,"column":119,"offset":4452},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":122,"column":119,"offset":4452},"end":{"line":122,"column":121,"offset":4454},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":122,"column":121,"offset":4454},"end":{"line":122,"column":130,"offset":4463},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":122,"column":130,"offset":4463},"end":{"line":122,"column":132,"offset":4465},"indent":[]}},{"type":"text","value":" as expected. However, the anonymous function passed to ","position":{"start":{"line":122,"column":132,"offset":4465},"end":{"line":122,"column":188,"offset":4521},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":122,"column":188,"offset":4521},"end":{"line":122,"column":199,"offset":4532},"indent":[]}},{"type":"text","value":" binds its internal ","position":{"start":{"line":122,"column":199,"offset":4532},"end":{"line":122,"column":219,"offset":4552},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":122,"column":219,"offset":4552},"end":{"line":122,"column":225,"offset":4558},"indent":[]}},{"type":"text","value":" to the global object. As such, ","position":{"start":{"line":122,"column":225,"offset":4558},"end":{"line":122,"column":257,"offset":4590},"indent":[]}},{"type":"inlineCode","value":"this.printSong(song)","position":{"start":{"line":122,"column":257,"offset":4590},"end":{"line":122,"column":279,"offset":4612},"indent":[]}},{"type":"text","value":" calls the function declared at the top of the example, ","position":{"start":{"line":122,"column":279,"offset":4612},"end":{"line":122,"column":335,"offset":4668},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":122,"column":336,"offset":4669},"end":{"line":122,"column":339,"offset":4672},"indent":[]}}],"position":{"start":{"line":122,"column":335,"offset":4668},"end":{"line":122,"column":340,"offset":4673},"indent":[]}},{"type":"text","value":" the method on ","position":{"start":{"line":122,"column":340,"offset":4673},"end":{"line":122,"column":355,"offset":4688},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":122,"column":355,"offset":4688},"end":{"line":122,"column":364,"offset":4697},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":122,"column":364,"offset":4697},"end":{"line":122,"column":365,"offset":4698},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4334},"end":{"line":122,"column":365,"offset":4698},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ","position":{"start":{"line":124,"column":1,"offset":4702},"end":{"line":124,"column":119,"offset":4820},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"capturing the ","position":{"start":{"line":124,"column":121,"offset":4822},"end":{"line":124,"column":135,"offset":4836},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":124,"column":135,"offset":4836},"end":{"line":124,"column":141,"offset":4842},"indent":[]}},{"type":"text","value":" value of the enclosing context","position":{"start":{"line":124,"column":141,"offset":4842},"end":{"line":124,"column":172,"offset":4873},"indent":[]}}],"position":{"start":{"line":124,"column":119,"offset":4820},"end":{"line":124,"column":174,"offset":4875},"indent":[]}},{"type":"text","value":". Using an arrow function for ","position":{"start":{"line":124,"column":174,"offset":4875},"end":{"line":124,"column":204,"offset":4905},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":124,"column":204,"offset":4905},"end":{"line":124,"column":218,"offset":4919},"indent":[]}},{"type":"text","value":" has the expected result:","position":{"start":{"line":124,"column":218,"offset":4919},"end":{"line":124,"column":243,"offset":4944},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":4702},"end":{"line":124,"column":243,"offset":4944},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":126,"column":1,"offset":4948},"end":{"line":136,"column":4,"offset":5097},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For this reason, throughout the book we use arrow functions for all anonymous functions.","position":{"start":{"line":138,"column":1,"offset":5101},"end":{"line":138,"column":89,"offset":5189},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":5101},"end":{"line":138,"column":89,"offset":5189},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Modules","position":{"start":{"line":140,"column":4,"offset":5196},"end":{"line":140,"column":11,"offset":5203},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5193},"end":{"line":140,"column":11,"offset":5203},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ES6 formally supports modules using the ","position":{"start":{"line":142,"column":1,"offset":5207},"end":{"line":142,"column":41,"offset":5247},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":142,"column":41,"offset":5247},"end":{"line":142,"column":49,"offset":5255},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":142,"column":49,"offset":5255},"end":{"line":142,"column":50,"offset":5256},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":142,"column":50,"offset":5256},"end":{"line":142,"column":58,"offset":5264},"indent":[]}},{"type":"text","value":" syntax.","position":{"start":{"line":142,"column":58,"offset":5264},"end":{"line":142,"column":66,"offset":5272},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5207},"end":{"line":142,"column":66,"offset":5272},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Named exports","position":{"start":{"line":144,"column":3,"offset":5278},"end":{"line":144,"column":16,"offset":5291},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5276},"end":{"line":144,"column":18,"offset":5293},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5276},"end":{"line":144,"column":18,"offset":5293},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inside any file, you can use ","position":{"start":{"line":146,"column":1,"offset":5297},"end":{"line":146,"column":30,"offset":5326},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":146,"column":30,"offset":5326},"end":{"line":146,"column":38,"offset":5334},"indent":[]}},{"type":"text","value":" to specify a variable the module should expose. Here's an example of a file that exports two functions:","position":{"start":{"line":146,"column":38,"offset":5334},"end":{"line":146,"column":142,"offset":5438},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5297},"end":{"line":146,"column":142,"offset":5438},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const sayHi = () => console.log('Hi!');\nexport const sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');","position":{"start":{"line":148,"column":1,"offset":5442},"end":{"line":153,"column":4,"offset":5607},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, anywhere we wanted to use these functions we could use ","position":{"start":{"line":155,"column":1,"offset":5611},"end":{"line":155,"column":61,"offset":5671},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":155,"column":61,"offset":5671},"end":{"line":155,"column":69,"offset":5679},"indent":[]}},{"type":"text","value":". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:","position":{"start":{"line":155,"column":69,"offset":5679},"end":{"line":155,"column":226,"offset":5836},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5611},"end":{"line":155,"column":226,"offset":5836},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();","position":{"start":{"line":157,"column":1,"offset":5840},"end":{"line":162,"column":4,"offset":5919},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Importantly, the function that was ","position":{"start":{"line":164,"column":1,"offset":5923},"end":{"line":164,"column":36,"offset":5958},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":164,"column":37,"offset":5959},"end":{"line":164,"column":40,"offset":5962},"indent":[]}}],"position":{"start":{"line":164,"column":36,"offset":5958},"end":{"line":164,"column":41,"offset":5963},"indent":[]}},{"type":"text","value":" exported ","position":{"start":{"line":164,"column":41,"offset":5963},"end":{"line":164,"column":51,"offset":5973},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":164,"column":51,"offset":5973},"end":{"line":164,"column":53,"offset":5975},"indent":[]}},{"type":"inlineCode","value":"saySomething","position":{"start":{"line":164,"column":53,"offset":5975},"end":{"line":164,"column":67,"offset":5989},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":164,"column":67,"offset":5989},"end":{"line":164,"column":69,"offset":5991},"indent":[]}},{"type":"text","value":" is unavailable outside of the module.","position":{"start":{"line":164,"column":69,"offset":5991},"end":{"line":164,"column":107,"offset":6029},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5923},"end":{"line":164,"column":107,"offset":6029},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Also note that we supply a ","position":{"start":{"line":166,"column":1,"offset":6033},"end":{"line":166,"column":28,"offset":6060},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"relative path","position":{"start":{"line":166,"column":30,"offset":6062},"end":{"line":166,"column":43,"offset":6075},"indent":[]}}],"position":{"start":{"line":166,"column":28,"offset":6060},"end":{"line":166,"column":45,"offset":6077},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":166,"column":45,"offset":6077},"end":{"line":166,"column":49,"offset":6081},"indent":[]}},{"type":"inlineCode","value":"from","position":{"start":{"line":166,"column":49,"offset":6081},"end":{"line":166,"column":55,"offset":6087},"indent":[]}},{"type":"text","value":", indicating that the ES6 module is a local file as opposed to an npm package.","position":{"start":{"line":166,"column":55,"offset":6087},"end":{"line":166,"column":133,"offset":6165},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":6033},"end":{"line":166,"column":133,"offset":6165},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of inserting an ","position":{"start":{"line":168,"column":1,"offset":6169},"end":{"line":168,"column":25,"offset":6193},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":168,"column":25,"offset":6193},"end":{"line":168,"column":33,"offset":6201},"indent":[]}},{"type":"text","value":" before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:","position":{"start":{"line":168,"column":33,"offset":6201},"end":{"line":168,"column":151,"offset":6319},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":6169},"end":{"line":168,"column":151,"offset":6319},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nexport { sayHi, sayBye };","position":{"start":{"line":170,"column":1,"offset":6323},"end":{"line":177,"column":4,"offset":6503},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ","position":{"start":{"line":179,"column":1,"offset":6507},"end":{"line":179,"column":116,"offset":6622},"indent":[]}},{"type":"inlineCode","value":"import * as <Namespace>","position":{"start":{"line":179,"column":116,"offset":6622},"end":{"line":179,"column":141,"offset":6647},"indent":[]}},{"type":"text","value":" syntax:","position":{"start":{"line":179,"column":141,"offset":6647},"end":{"line":179,"column":149,"offset":6655},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":6507},"end":{"line":179,"column":149,"offset":6655},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();","position":{"start":{"line":181,"column":1,"offset":6659},"end":{"line":189,"column":4,"offset":6786},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Default export","position":{"start":{"line":191,"column":3,"offset":6792},"end":{"line":191,"column":17,"offset":6806},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6790},"end":{"line":191,"column":19,"offset":6808},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6790},"end":{"line":191,"column":19,"offset":6808},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The other type of export is a default export. A module can only contain one default export:","position":{"start":{"line":193,"column":1,"offset":6812},"end":{"line":193,"column":92,"offset":6903},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":6812},"end":{"line":193,"column":92,"offset":6903},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;","position":{"start":{"line":195,"column":1,"offset":6907},"end":{"line":204,"column":4,"offset":7127},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:","position":{"start":{"line":206,"column":1,"offset":7131},"end":{"line":206,"column":148,"offset":7278},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":7131},"end":{"line":206,"column":148,"offset":7278},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();","position":{"start":{"line":208,"column":1,"offset":7282},"end":{"line":213,"column":4,"offset":7373},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ","position":{"start":{"line":215,"column":1,"offset":7377},"end":{"line":215,"column":107,"offset":7483},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":215,"column":107,"offset":7483},"end":{"line":215,"column":118,"offset":7494},"indent":[]}},{"type":"text","value":", you can import ","position":{"start":{"line":215,"column":118,"offset":7494},"end":{"line":215,"column":135,"offset":7511},"indent":[]}},{"type":"inlineCode","value":"ReactDOM","position":{"start":{"line":215,"column":135,"offset":7511},"end":{"line":215,"column":145,"offset":7521},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":215,"column":145,"offset":7521},"end":{"line":215,"column":146,"offset":7522},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":215,"column":146,"offset":7522},"end":{"line":215,"column":148,"offset":7524},"indent":[]}},{"type":"text","value":"a default export","position":{"start":{"line":215,"column":148,"offset":7524},"end":{"line":215,"column":164,"offset":7540},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":215,"column":164,"offset":7540},"end":{"line":215,"column":166,"offset":7542},"indent":[]}},{"type":"text","value":" like this:","position":{"start":{"line":215,"column":166,"offset":7542},"end":{"line":215,"column":177,"offset":7553},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":7377},"end":{"line":215,"column":177,"offset":7553},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import ReactDOM from 'react-dom';\n\nReactDOM.render();","position":{"start":{"line":217,"column":1,"offset":7557},"end":{"line":221,"column":4,"offset":7624},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or, if you're only going to use the ","position":{"start":{"line":223,"column":1,"offset":7628},"end":{"line":223,"column":37,"offset":7664},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":223,"column":37,"offset":7664},"end":{"line":223,"column":47,"offset":7674},"indent":[]}},{"type":"text","value":" function, you can import the named ","position":{"start":{"line":223,"column":47,"offset":7674},"end":{"line":223,"column":83,"offset":7710},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":223,"column":83,"offset":7710},"end":{"line":223,"column":93,"offset":7720},"indent":[]}},{"type":"text","value":" function like this:","position":{"start":{"line":223,"column":93,"offset":7720},"end":{"line":223,"column":113,"offset":7740},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":7628},"end":{"line":223,"column":113,"offset":7740},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { render } from 'react-dom';\n\nrender();","position":{"start":{"line":225,"column":1,"offset":7744},"end":{"line":229,"column":4,"offset":7804},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To achieve this flexibility, the export implementation for ","position":{"start":{"line":231,"column":1,"offset":7808},"end":{"line":231,"column":60,"offset":7867},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":231,"column":60,"offset":7867},"end":{"line":231,"column":71,"offset":7878},"indent":[]}},{"type":"text","value":" looks something like this:","position":{"start":{"line":231,"column":71,"offset":7878},"end":{"line":231,"column":98,"offset":7905},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7808},"end":{"line":231,"column":98,"offset":7905},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const render = (component, target) => {};\n\nconst ReactDOM = {\n    render\n};\n\nexport default ReactDOM;","position":{"start":{"line":233,"column":1,"offset":7909},"end":{"line":241,"column":4,"offset":8035},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to play around with the module syntax, check out the folder ","position":{"start":{"line":243,"column":1,"offset":8039},"end":{"line":243,"column":73,"offset":8111},"indent":[]}},{"type":"inlineCode","value":"code/webpack/es6-modules","position":{"start":{"line":243,"column":73,"offset":8111},"end":{"line":243,"column":99,"offset":8137},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":243,"column":99,"offset":8137},"end":{"line":243,"column":100,"offset":8138},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":8039},"end":{"line":243,"column":100,"offset":8138},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more reading on ES6 modules, see this article from Mozilla: \"","position":{"start":{"line":245,"column":1,"offset":8142},"end":{"line":245,"column":66,"offset":8207},"indent":[]}},{"type":"link","title":null,"url":"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/","children":[{"type":"text","value":"ES6 in Depth: Modules","position":{"start":{"line":245,"column":67,"offset":8208},"end":{"line":245,"column":88,"offset":8229},"indent":[]}}],"position":{"start":{"line":245,"column":66,"offset":8207},"end":{"line":245,"column":146,"offset":8287},"indent":[]}},{"type":"text","value":"\".","position":{"start":{"line":245,"column":146,"offset":8287},"end":{"line":245,"column":148,"offset":8289},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":8142},"end":{"line":245,"column":148,"offset":8289},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":247,"column":4,"offset":8296},"end":{"line":247,"column":21,"offset":8313},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":8293},"end":{"line":247,"column":21,"offset":8313},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":249,"column":1,"offset":8317},"end":{"line":249,"column":8,"offset":8324},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":249,"column":8,"offset":8324},"end":{"line":249,"column":25,"offset":8341},"indent":[]}},{"type":"text","value":" often throughout the book. We use it in areas where we want to create a modified version of an existing object.","position":{"start":{"line":249,"column":25,"offset":8341},"end":{"line":249,"column":137,"offset":8453},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":8317},"end":{"line":249,"column":137,"offset":8453},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":251,"column":1,"offset":8457},"end":{"line":251,"column":18,"offset":8474},"indent":[]}},{"type":"text","value":" accepts any number of objects as arguments. When the function receives two arguments, it ","position":{"start":{"line":251,"column":18,"offset":8474},"end":{"line":251,"column":108,"offset":8564},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"copies","position":{"start":{"line":251,"column":109,"offset":8565},"end":{"line":251,"column":115,"offset":8571},"indent":[]}}],"position":{"start":{"line":251,"column":108,"offset":8564},"end":{"line":251,"column":116,"offset":8572},"indent":[]}},{"type":"text","value":" the properties of the second object onto the first, like so:","position":{"start":{"line":251,"column":116,"offset":8572},"end":{"line":251,"column":177,"offset":8633},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":8457},"end":{"line":251,"column":177,"offset":8633},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);","position":{"start":{"line":253,"column":1,"offset":8637},"end":{"line":258,"column":4,"offset":8768},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is idiomatic to pass in three arguments to ","position":{"start":{"line":260,"column":1,"offset":8772},"end":{"line":260,"column":47,"offset":8818},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":260,"column":47,"offset":8818},"end":{"line":260,"column":64,"offset":8835},"indent":[]}},{"type":"text","value":". The first argument is a new JavaScript object, the one that ","position":{"start":{"line":260,"column":64,"offset":8835},"end":{"line":260,"column":126,"offset":8897},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":260,"column":126,"offset":8897},"end":{"line":260,"column":143,"offset":8914},"indent":[]}},{"type":"text","value":" will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:","position":{"start":{"line":260,"column":143,"offset":8914},"end":{"line":260,"column":280,"offset":9051},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":8772},"end":{"line":260,"column":280,"offset":9051},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const coffeeWithMilk = Object.assign({}, coffee, { milk: true });","position":{"start":{"line":262,"column":1,"offset":9055},"end":{"line":264,"column":4,"offset":9132},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":266,"column":1,"offset":9136},"end":{"line":266,"column":18,"offset":9153},"indent":[]}},{"type":"text","value":" is a handy method for working with \"immutable\" JavaScript objects.","position":{"start":{"line":266,"column":18,"offset":9153},"end":{"line":266,"column":85,"offset":9220},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":9136},"end":{"line":266,"column":85,"offset":9220},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Template literals","position":{"start":{"line":268,"column":4,"offset":9227},"end":{"line":268,"column":21,"offset":9244},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":9224},"end":{"line":268,"column":21,"offset":9244},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5 JavaScript, you'd interpolate variables into strings like this:","position":{"start":{"line":270,"column":1,"offset":9248},"end":{"line":270,"column":71,"offset":9318},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":9248},"end":{"line":270,"column":71,"offset":9318},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"var greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';","position":{"start":{"line":272,"column":1,"offset":9322},"end":{"line":274,"column":4,"offset":9408},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6 template literals, we can create the same string like this:","position":{"start":{"line":276,"column":1,"offset":9412},"end":{"line":276,"column":69,"offset":9480},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":9412},"end":{"line":276,"column":69,"offset":9480},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const greeting = `Hello, ${user}! It is ${degF} degrees outside.`;","position":{"start":{"line":278,"column":1,"offset":9484},"end":{"line":280,"column":4,"offset":9562},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The spread operator ","position":{"start":{"line":282,"column":4,"offset":9569},"end":{"line":282,"column":24,"offset":9589},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":282,"column":24,"offset":9589},"end":{"line":282,"column":26,"offset":9591},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":282,"column":26,"offset":9591},"end":{"line":282,"column":31,"offset":9596},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":282,"column":31,"offset":9596},"end":{"line":282,"column":33,"offset":9598},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9566},"end":{"line":282,"column":33,"offset":9598},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In arrays, the ellipsis ","position":{"start":{"line":284,"column":1,"offset":9602},"end":{"line":284,"column":25,"offset":9626},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":284,"column":25,"offset":9626},"end":{"line":284,"column":30,"offset":9631},"indent":[]}},{"type":"text","value":" operator will ","position":{"start":{"line":284,"column":30,"offset":9631},"end":{"line":284,"column":45,"offset":9646},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"expand","position":{"start":{"line":284,"column":46,"offset":9647},"end":{"line":284,"column":52,"offset":9653},"indent":[]}}],"position":{"start":{"line":284,"column":45,"offset":9646},"end":{"line":284,"column":53,"offset":9654},"indent":[]}},{"type":"text","value":" the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.","position":{"start":{"line":284,"column":53,"offset":9654},"end":{"line":284,"column":200,"offset":9801},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":9602},"end":{"line":284,"column":200,"offset":9801},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example:","position":{"start":{"line":286,"column":1,"offset":9805},"end":{"line":286,"column":20,"offset":9824},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":9805},"end":{"line":286,"column":20,"offset":9824},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);","position":{"start":{"line":288,"column":1,"offset":9828},"end":{"line":294,"column":4,"offset":9940},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice how this is different than if we wrote:","position":{"start":{"line":296,"column":1,"offset":9944},"end":{"line":296,"column":47,"offset":9990},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":9944},"end":{"line":296,"column":47,"offset":9990},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const d = [a, b, 7, 8, 9];\nconsole.log(d);","position":{"start":{"line":298,"column":1,"offset":9994},"end":{"line":301,"column":4,"offset":10049},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Enhanced object literals","position":{"start":{"line":303,"column":4,"offset":10056},"end":{"line":303,"column":28,"offset":10080},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":10053},"end":{"line":303,"column":28,"offset":10080},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, all objects were required to have explicit key and value declarations:","position":{"start":{"line":305,"column":1,"offset":10084},"end":{"line":305,"column":79,"offset":10162},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":10084},"end":{"line":305,"column":79,"offset":10162},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const explicit = {\n    getState: getState,\n    dispatch: dispatch\n};","position":{"start":{"line":307,"column":1,"offset":10166},"end":{"line":312,"column":4,"offset":10249},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, you can use this terser syntax whenever the property name and variable name are the same:","position":{"start":{"line":314,"column":1,"offset":10253},"end":{"line":314,"column":98,"offset":10350},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":10253},"end":{"line":314,"column":98,"offset":10350},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const implicit = {\n    getState,\n    dispatch\n};","position":{"start":{"line":316,"column":1,"offset":10354},"end":{"line":321,"column":4,"offset":10417},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.","position":{"start":{"line":323,"column":1,"offset":10421},"end":{"line":323,"column":161,"offset":10581},"indent":[]}}],"position":{"start":{"line":323,"column":1,"offset":10421},"end":{"line":323,"column":161,"offset":10581},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Default arguments","position":{"start":{"line":325,"column":4,"offset":10588},"end":{"line":325,"column":21,"offset":10605},"indent":[]}}],"position":{"start":{"line":325,"column":1,"offset":10585},"end":{"line":325,"column":21,"offset":10605},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6, you can specify a default value for an argument in the case that it is ","position":{"start":{"line":327,"column":1,"offset":10609},"end":{"line":327,"column":82,"offset":10690},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":327,"column":82,"offset":10690},"end":{"line":327,"column":93,"offset":10701},"indent":[]}},{"type":"text","value":" when the function is called.","position":{"start":{"line":327,"column":93,"offset":10701},"end":{"line":327,"column":122,"offset":10730},"indent":[]}}],"position":{"start":{"line":327,"column":1,"offset":10609},"end":{"line":327,"column":122,"offset":10730},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This:","position":{"start":{"line":329,"column":1,"offset":10734},"end":{"line":329,"column":6,"offset":10739},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":10734},"end":{"line":329,"column":6,"offset":10739},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}","position":{"start":{"line":331,"column":1,"offset":10743},"end":{"line":338,"column":4,"offset":10860},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Can be written as this:","position":{"start":{"line":340,"column":1,"offset":10864},"end":{"line":340,"column":24,"offset":10887},"indent":[]}}],"position":{"start":{"line":340,"column":1,"offset":10864},"end":{"line":340,"column":24,"offset":10887},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function divide(a, b = 1) {\n    return a / b;\n}","position":{"start":{"line":342,"column":1,"offset":10891},"end":{"line":346,"column":4,"offset":10952},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In both cases, using the function looks like this:","position":{"start":{"line":348,"column":1,"offset":10956},"end":{"line":348,"column":51,"offset":11006},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":10956},"end":{"line":348,"column":51,"offset":11006},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);","position":{"start":{"line":350,"column":1,"offset":11010},"end":{"line":356,"column":4,"offset":11077},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Whenever the argument ","position":{"start":{"line":358,"column":1,"offset":11081},"end":{"line":358,"column":23,"offset":11103},"indent":[]}},{"type":"inlineCode","value":"b","position":{"start":{"line":358,"column":23,"offset":11103},"end":{"line":358,"column":26,"offset":11106},"indent":[]}},{"type":"text","value":" in the example above is ","position":{"start":{"line":358,"column":26,"offset":11106},"end":{"line":358,"column":51,"offset":11131},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":358,"column":51,"offset":11131},"end":{"line":358,"column":62,"offset":11142},"indent":[]}},{"type":"text","value":", the default argument is used. Note that ","position":{"start":{"line":358,"column":62,"offset":11142},"end":{"line":358,"column":104,"offset":11184},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":358,"column":104,"offset":11184},"end":{"line":358,"column":110,"offset":11190},"indent":[]}},{"type":"text","value":" will not use the default argument:","position":{"start":{"line":358,"column":110,"offset":11190},"end":{"line":358,"column":145,"offset":11225},"indent":[]}}],"position":{"start":{"line":358,"column":1,"offset":11081},"end":{"line":358,"column":145,"offset":11225},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, null);","position":{"start":{"line":360,"column":1,"offset":11229},"end":{"line":362,"column":4,"offset":11258},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Destructuring assignments","position":{"start":{"line":364,"column":4,"offset":11265},"end":{"line":364,"column":29,"offset":11290},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":11262},"end":{"line":364,"column":29,"offset":11290},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For arrays","position":{"start":{"line":366,"column":5,"offset":11298},"end":{"line":366,"column":15,"offset":11308},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":11294},"end":{"line":366,"column":15,"offset":11308},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, extracting and assigning multiple elements from an array looked like this:","position":{"start":{"line":368,"column":1,"offset":11312},"end":{"line":368,"column":83,"offset":11394},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":11312},"end":{"line":368,"column":83,"offset":11394},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];","position":{"start":{"line":370,"column":1,"offset":11398},"end":{"line":374,"column":4,"offset":11507},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, we can use the destructuring syntax to accomplish the same task like this:","position":{"start":{"line":376,"column":1,"offset":11511},"end":{"line":376,"column":83,"offset":11593},"indent":[]}}],"position":{"start":{"line":376,"column":1,"offset":11511},"end":{"line":376,"column":83,"offset":11593},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const [veg1, veg2] = ['asparagus', 'broccoli', 'onion'];\nconsole.log(veg1);\nconsole.log(veg2);","position":{"start":{"line":378,"column":1,"offset":11597},"end":{"line":382,"column":4,"offset":11705},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ","position":{"start":{"line":384,"column":1,"offset":11709},"end":{"line":384,"column":134,"offset":11842},"indent":[]}},{"type":"inlineCode","value":"'onion'","position":{"start":{"line":384,"column":134,"offset":11842},"end":{"line":384,"column":143,"offset":11851},"indent":[]}},{"type":"text","value":" is ignored and has no variable bound to it.","position":{"start":{"line":384,"column":143,"offset":11851},"end":{"line":384,"column":187,"offset":11895},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":11709},"end":{"line":384,"column":187,"offset":11895},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For objects","position":{"start":{"line":386,"column":5,"offset":11903},"end":{"line":386,"column":16,"offset":11914},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":11899},"end":{"line":386,"column":16,"offset":11914},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can do something similar for extracting object properties into variables:","position":{"start":{"line":388,"column":1,"offset":11918},"end":{"line":388,"column":77,"offset":11994},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":11918},"end":{"line":388,"column":77,"offset":11994},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const smoothie = {\n    fats: ['avocado', 'peanut butter', 'greek yogurt'],\n    liquids: ['almond milk'],\n    greens: ['spinach'],\n    fruits: ['blueberry', 'banana']\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);","position":{"start":{"line":390,"column":1,"offset":11998},"end":{"line":402,"column":4,"offset":12271},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameter context matching","position":{"start":{"line":404,"column":5,"offset":12279},"end":{"line":404,"column":31,"offset":12305},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":12275},"end":{"line":404,"column":31,"offset":12305},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:","position":{"start":{"line":406,"column":1,"offset":12309},"end":{"line":406,"column":121,"offset":12429},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":12309},"end":{"line":406,"column":121,"offset":12429},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const containsSpinach = ({ greens }) => {\n    if (greens.find((g) => g === 'spinach')) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\ncontainsSpinach(smoothie);","position":{"start":{"line":408,"column":1,"offset":12433},"end":{"line":418,"column":4,"offset":12634},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We do this often with functional React components:","position":{"start":{"line":420,"column":1,"offset":12638},"end":{"line":420,"column":51,"offset":12688},"indent":[]}}],"position":{"start":{"line":420,"column":1,"offset":12638},"end":{"line":420,"column":51,"offset":12688},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const IngredientList = ({ ingredients, onClick }) => (\n    <ul className=\"IngredientList\">\n        {ingredients.map((i) => (\n            <li key={i.id} onClick={() => onClick(i.id)} className=\"item\">\n                {i.name}\n            </li>\n        ))}\n    </ul>\n);","position":{"start":{"line":422,"column":1,"offset":12692},"end":{"line":432,"column":4,"offset":12979},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here, we use destructuring to extract the props into variables ","position":{"start":{"line":434,"column":1,"offset":12983},"end":{"line":434,"column":64,"offset":13046},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":434,"column":64,"offset":13046},"end":{"line":434,"column":66,"offset":13048},"indent":[]}},{"type":"inlineCode","value":"ingredients","position":{"start":{"line":434,"column":66,"offset":13048},"end":{"line":434,"column":79,"offset":13061},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":434,"column":79,"offset":13061},"end":{"line":434,"column":84,"offset":13066},"indent":[]}},{"type":"inlineCode","value":"onClick","position":{"start":{"line":434,"column":84,"offset":13066},"end":{"line":434,"column":93,"offset":13075},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":434,"column":93,"offset":13075},"end":{"line":434,"column":95,"offset":13077},"indent":[]}},{"type":"text","value":" that we then use inside the component's function body.","position":{"start":{"line":434,"column":95,"offset":13077},"end":{"line":434,"column":150,"offset":13132},"indent":[]}}],"position":{"start":{"line":434,"column":1,"offset":12983},"end":{"line":434,"column":150,"offset":13132},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":435,"column":1,"offset":13134}}}}