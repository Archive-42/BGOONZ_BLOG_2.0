{
    "expireTime": 9007200888440671000,
    "key": "transformer-remark-markdown-ast-8d8d4a8f8745d8c58d5a5d0be31779df--",
    "val": {
        "type": "root",
        "children": [
            {
                "type": "heading",
                "depth": 1,
                "children": [
                    {
                        "type": "text",
                        "value": "Frequency and the fast Fourier transform",
                        "position": { "start": { "line": 2, "column": 3, "offset": 3 }, "end": { "line": 2, "column": 43, "offset": 43 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 2, "column": 1, "offset": 1 }, "end": { "line": 2, "column": 43, "offset": 43 }, "indent": [] }
            },
            {
                "type": "blockquote",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "If you want to find the secrets of the universe, think in terms of energy,\nfrequency and vibration.",
                                "position": {
                                    "start": { "line": 4, "column": 3, "offset": 47 },
                                    "end": { "line": 5, "column": 27, "offset": 148 },
                                    "indent": [3]
                                }
                            }
                        ],
                        "position": { "start": { "line": 4, "column": 3, "offset": 47 }, "end": { "line": 5, "column": 27, "offset": 148 }, "indent": [3] }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "â€” Nikola Tesla",
                                "position": {
                                    "start": { "line": 7, "column": 3, "offset": 153 },
                                    "end": { "line": 7, "column": 17, "offset": 167 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 7, "column": 3, "offset": 153 }, "end": { "line": 7, "column": 17, "offset": 167 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 4, "column": 1, "offset": 45 }, "end": { "line": 7, "column": 17, "offset": 167 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "This chapter was written in collaboration with SW's father, PW van der Walt.",
                                "position": {
                                    "start": { "line": 9, "column": 2, "offset": 170 },
                                    "end": { "line": 9, "column": 78, "offset": 246 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 9, "column": 1, "offset": 169 }, "end": { "line": 9, "column": 79, "offset": 247 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 9, "column": 1, "offset": 169 }, "end": { "line": 9, "column": 79, "offset": 247 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "Introducing frequency",
                        "position": { "start": { "line": 11, "column": 4, "offset": 252 }, "end": { "line": 11, "column": 25, "offset": 273 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 11, "column": 1, "offset": 249 }, "end": { "line": 11, "column": 25, "offset": 273 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We'll start by setting up some plotting styles and importing the usual\nsuspects:",
                        "position": { "start": { "line": 13, "column": 1, "offset": 275 }, "end": { "line": 14, "column": 10, "offset": 355 }, "indent": [1] }
                    }
                ],
                "position": { "start": { "line": 13, "column": 1, "offset": 275 }, "end": { "line": 14, "column": 10, "offset": 355 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "# Make plots appear inline, set custom plotting style\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.style.use('style/elegant.mplstyle')",
                "position": {
                    "start": { "line": 16, "column": 1, "offset": 357 },
                    "end": { "line": 21, "column": 4, "offset": 515 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "import numpy as np",
                "position": { "start": { "line": 23, "column": 1, "offset": 517 }, "end": { "line": 25, "column": 4, "offset": 549 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The discrete",
                        "position": { "start": { "line": 27, "column": 1, "offset": 551 }, "end": { "line": 27, "column": 13, "offset": 563 }, "indent": [] }
                    },
                    {
                        "type": "footnoteReference",
                        "identifier": "discrete",
                        "label": "discrete",
                        "position": { "start": { "line": 27, "column": 13, "offset": 563 }, "end": { "line": 27, "column": 24, "offset": 574 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " Fourier transform (DFT) is a mathematical technique\nto convert temporal or spatial data into ",
                        "position": { "start": { "line": 27, "column": 24, "offset": 574 }, "end": { "line": 28, "column": 42, "offset": 668 }, "indent": [1] }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "frequency domain",
                                "position": {
                                    "start": { "line": 28, "column": 43, "offset": 669 },
                                    "end": { "line": 28, "column": 59, "offset": 685 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 28, "column": 42, "offset": 668 }, "end": { "line": 28, "column": 60, "offset": 686 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " data.\n",
                        "position": { "start": { "line": 28, "column": 60, "offset": 686 }, "end": { "line": 29, "column": 1, "offset": 693 }, "indent": [1] }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "Frequency",
                                "position": {
                                    "start": { "line": 29, "column": 2, "offset": 694 },
                                    "end": { "line": 29, "column": 11, "offset": 703 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 29, "column": 1, "offset": 693 }, "end": { "line": 29, "column": 12, "offset": 704 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " is a familiar concept, due to its colloquial occurrence in\nthe English language: the lowest notes your headphones can rumble out\nare around 20 Hertz, whereas middle C on a piano lies around 261.6\nHertz. Hertz (Hz), or oscillations per second, in this case literally\nrefers to the number of times per second at which the membrane inside\nthe headphone moves to-and-fro. That, in turn, creates compressed\npulses of air which, upon arrival at your eardrum, induces a vibration\nat the same frequency. So, if you take a simple periodic function, $\\sin(10 \\times 2 \\pi t)$, you can view it as a wave:",
                        "position": {
                            "start": { "line": 29, "column": 12, "offset": 704 },
                            "end": { "line": 36, "column": 121, "offset": 1298 },
                            "indent": [1, 1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 27, "column": 1, "offset": 551 },
                    "end": { "line": 36, "column": 121, "offset": 1298 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "f = 10  # Frequency, in cycles per second, or Hertz\nf_s = 100  # Sampling rate, or number of measurements per second\n\nt = np.linspace(0, 2, 2 * f_s, endpoint=False)\nx = np.sin(f * 2 * np.pi * t)\n\nfig, ax = plt.subplots()\nax.plot(t, x)\nax.set_xlabel('Time [s]')\nax.set_ylabel('Signal amplitude');",
                "position": {
                    "start": { "line": 38, "column": 1, "offset": 1300 },
                    "end": { "line": 49, "column": 4, "offset": 1609 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"A simple periodic function in time\" -->",
                "position": { "start": { "line": 51, "column": 1, "offset": 1611 }, "end": { "line": 51, "column": 59, "offset": 1669 }, "indent": [] }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "discrete",
                "label": "discrete",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "The discrete Fourier transform operates on sampled data,\nin contrast to the standard Fourier transform which is\ndefined for continuous functions.",
                                "position": {
                                    "start": { "line": 54, "column": 5, "offset": 1688 },
                                    "end": { "line": 56, "column": 38, "offset": 1841 },
                                    "indent": [5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 54, "column": 5, "offset": 1688 },
                            "end": { "line": 56, "column": 38, "offset": 1841 },
                            "indent": [5, 5]
                        }
                    }
                ],
                "position": { "start": { "line": 53, "column": 1, "offset": 1671 }, "end": { "line": 56, "column": 42, "offset": 1845 }, "indent": [5, 5, 5] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Or you can equivalently think of it as a repeating signal of\n",
                        "position": { "start": { "line": 58, "column": 1, "offset": 1843 }, "end": { "line": 59, "column": 1, "offset": 1904 }, "indent": [1] }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "frequency",
                                "position": {
                                    "start": { "line": 59, "column": 2, "offset": 1905 },
                                    "end": { "line": 59, "column": 11, "offset": 1914 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 59, "column": 1, "offset": 1904 }, "end": { "line": 59, "column": 12, "offset": 1915 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " 10 Hertz (it repeats once every $1/10$ secondsâ€”a length of\ntime we call its ",
                        "position": {
                            "start": { "line": 59, "column": 12, "offset": 1915 },
                            "end": { "line": 60, "column": 18, "offset": 1992 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "period",
                                "position": {
                                    "start": { "line": 60, "column": 19, "offset": 1993 },
                                    "end": { "line": 60, "column": 25, "offset": 1999 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 60, "column": 18, "offset": 1992 }, "end": { "line": 60, "column": 26, "offset": 2000 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": "). Although we naturally associate frequency\nwith time, it can equally well be applied to space. E.g., a\nphoto of a textile patterns exhibits high ",
                        "position": {
                            "start": { "line": 60, "column": 26, "offset": 2000 },
                            "end": { "line": 62, "column": 43, "offset": 2147 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "spatial frequency",
                                "position": {
                                    "start": { "line": 62, "column": 44, "offset": 2148 },
                                    "end": { "line": 62, "column": 61, "offset": 2165 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 62, "column": 43, "offset": 2147 }, "end": { "line": 62, "column": 62, "offset": 2166 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": ", whereas\nthe sky or other smooth objects have low spatial frequency.",
                        "position": {
                            "start": { "line": 62, "column": 62, "offset": 2166 },
                            "end": { "line": 63, "column": 60, "offset": 2235 },
                            "indent": [1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 58, "column": 1, "offset": 1843 },
                    "end": { "line": 63, "column": 60, "offset": 2235 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Let us now examine our sinusoid through application of the discrete Fourier\ntransform:",
                        "position": { "start": { "line": 65, "column": 1, "offset": 2237 }, "end": { "line": 66, "column": 11, "offset": 2323 }, "indent": [1] }
                    }
                ],
                "position": { "start": { "line": 65, "column": 1, "offset": 2237 }, "end": { "line": 66, "column": 11, "offset": 2323 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from scipy import fftpack\n\nX = fftpack.fft(x)\nfreqs = fftpack.fftfreq(len(x)) * f_s\n\nfig, ax = plt.subplots()\n\nax.stem(freqs, np.abs(X))\nax.set_xlabel('Frequency in Hertz [Hz]')\nax.set_ylabel('Frequency Domain (Spectrum) Magnitude')\nax.set_xlim(-f_s / 2, f_s / 2)\nax.set_ylim(-5, 110)",
                "position": {
                    "start": { "line": 68, "column": 1, "offset": 2325 },
                    "end": { "line": 81, "column": 4, "offset": 2623 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Frequencies that make up our periodic signal above\" -->",
                "position": { "start": { "line": 83, "column": 1, "offset": 2625 }, "end": { "line": 83, "column": 75, "offset": 2699 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We see that the output of the FFT is a one-dimensional array of the\nsame shape as the input, containing complex values. All values are\nzero, except for two entries. Traditionally, we visualize the\nmagnitude of the result as a ",
                        "position": {
                            "start": { "line": 85, "column": 1, "offset": 2701 },
                            "end": { "line": 88, "column": 30, "offset": 2927 },
                            "indent": [1, 1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "stem plot",
                                "position": {
                                    "start": { "line": 88, "column": 31, "offset": 2928 },
                                    "end": { "line": 88, "column": 40, "offset": 2937 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 88, "column": 30, "offset": 2927 }, "end": { "line": 88, "column": 41, "offset": 2938 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": ", in which the height of each\nstem corresponds to the underlying value.",
                        "position": {
                            "start": { "line": 88, "column": 41, "offset": 2938 },
                            "end": { "line": 89, "column": 42, "offset": 3009 },
                            "indent": [1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 85, "column": 1, "offset": 2701 },
                    "end": { "line": 89, "column": 42, "offset": 3009 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "(We explain why you see positive and negative frequencies later on\nin the sidebox titled \"Discrete Fourier transforms\". You may also\nrefer to that section for a more in-depth overview of the underlying\nmathematics.)",
                        "position": {
                            "start": { "line": 91, "column": 1, "offset": 3011 },
                            "end": { "line": 94, "column": 14, "offset": 3226 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 91, "column": 1, "offset": 3011 }, "end": { "line": 94, "column": 14, "offset": 3226 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The Fourier transform takes us from the ",
                        "position": { "start": { "line": 96, "column": 1, "offset": 3228 }, "end": { "line": 96, "column": 41, "offset": 3268 }, "indent": [] }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "time",
                                "position": {
                                    "start": { "line": 96, "column": 42, "offset": 3269 },
                                    "end": { "line": 96, "column": 46, "offset": 3273 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 96, "column": 41, "offset": 3268 }, "end": { "line": 96, "column": 47, "offset": 3274 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " to the ",
                        "position": { "start": { "line": 96, "column": 47, "offset": 3274 }, "end": { "line": 96, "column": 55, "offset": 3282 }, "indent": [] }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "frequency",
                                "position": {
                                    "start": { "line": 96, "column": 56, "offset": 3283 },
                                    "end": { "line": 96, "column": 65, "offset": 3292 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 96, "column": 55, "offset": 3282 }, "end": { "line": 96, "column": 66, "offset": 3293 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": "\ndomain, and this turns out to have a massive number of applications.\nThe ",
                        "position": {
                            "start": { "line": 96, "column": 66, "offset": 3293 },
                            "end": { "line": 98, "column": 5, "offset": 3367 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "fast Fourier transform",
                                "position": {
                                    "start": { "line": 98, "column": 6, "offset": 3368 },
                                    "end": { "line": 98, "column": 28, "offset": 3390 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 98, "column": 5, "offset": 3367 }, "end": { "line": 98, "column": 29, "offset": 3391 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " is an algorithm for computing the\ndiscrete Fourier transform; it achieves its high speed by storing and\nre-using results of computations as it progresses.",
                        "position": {
                            "start": { "line": 98, "column": 29, "offset": 3391 },
                            "end": { "line": 100, "column": 51, "offset": 3546 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 96, "column": 1, "offset": 3228 },
                    "end": { "line": 100, "column": 51, "offset": 3546 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "In this chapter, we examine a few applications of the discrete Fourier\ntransform to demonstrate that the FFT can be applied to\nmultidimensional data (not just 1D measurements) to achieve a variety\nof goals.",
                        "position": {
                            "start": { "line": 102, "column": 1, "offset": 3548 },
                            "end": { "line": 105, "column": 10, "offset": 3754 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 102, "column": 1, "offset": 3548 }, "end": { "line": 105, "column": 10, "offset": 3754 }, "indent": [1, 1, 1] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "Illustration: a birdsong spectrogram",
                        "position": {
                            "start": { "line": 107, "column": 4, "offset": 3759 },
                            "end": { "line": 107, "column": 40, "offset": 3795 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 107, "column": 1, "offset": 3756 }, "end": { "line": 107, "column": 40, "offset": 3795 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Let's start with one of the most common applications, converting a sound signal (consisting of variations of air pressure over time) to a ",
                        "position": {
                            "start": { "line": 109, "column": 1, "offset": 3797 },
                            "end": { "line": 109, "column": 139, "offset": 3935 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "spectrogram",
                                "position": {
                                    "start": { "line": 109, "column": 140, "offset": 3936 },
                                    "end": { "line": 109, "column": 151, "offset": 3947 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 109, "column": 139, "offset": 3935 },
                            "end": { "line": 109, "column": 152, "offset": 3948 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".\nYou might have seen spectrograms on your music player's equalizer view, or even on an old-school stereo.",
                        "position": {
                            "start": { "line": 109, "column": 152, "offset": 3948 },
                            "end": { "line": 110, "column": 105, "offset": 4054 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 109, "column": 1, "offset": 3797 }, "end": { "line": 110, "column": 105, "offset": 4054 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "../images/sergey_gerasimuk_numark-eq-2600-IMG_0236.JPG",
                        "alt": "The Numark EQ2600 Stereo Equalizer; image used with permission from the author, Sergey Gerasimuk. Source: http://sgerasimuk.blogspot.com/2014/06/numark-eq-2600-10-band-stereo-graphic.html",
                        "position": {
                            "start": { "line": 112, "column": 1, "offset": 4056 },
                            "end": { "line": 112, "column": 247, "offset": 4302 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 112, "column": 1, "offset": 4056 }, "end": { "line": 112, "column": 247, "offset": 4302 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Listen to the following snippet of nightingale birdsong (released under CC BY 4.0 at\n",
                        "position": {
                            "start": { "line": 114, "column": 1, "offset": 4304 },
                            "end": { "line": 115, "column": 1, "offset": 4389 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "http://www.orangefreesounds.com/nightingale-sound/",
                        "children": [
                            {
                                "type": "text",
                                "value": "http://www.orangefreesounds.com/nightingale-sound/",
                                "position": {
                                    "start": { "line": 115, "column": 1, "offset": 4389 },
                                    "end": { "line": 115, "column": 51, "offset": 4439 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 115, "column": 1, "offset": 4389 },
                            "end": { "line": 115, "column": 51, "offset": 4439 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "):",
                        "position": {
                            "start": { "line": 115, "column": 51, "offset": 4439 },
                            "end": { "line": 115, "column": 53, "offset": 4441 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 114, "column": 1, "offset": 4304 }, "end": { "line": 115, "column": 53, "offset": 4441 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from IPython.display import Audio\nAudio('data/nightingale.wav')",
                "position": { "start": { "line": 117, "column": 1, "offset": 4443 }, "end": { "line": 120, "column": 4, "offset": 4520 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "If you are reading the paper version of this book, you'll have to use\nyour imagination! It goes something like this:\nchee-chee-woorrrr-hee-hee cheet-wheet-hoorrr-chi\nrrr-whi-wheo-wheo-wheo-wheo-wheo-wheo.",
                        "position": {
                            "start": { "line": 122, "column": 1, "offset": 4522 },
                            "end": { "line": 125, "column": 39, "offset": 4726 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 122, "column": 1, "offset": 4522 }, "end": { "line": 125, "column": 39, "offset": 4726 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Since we realise that not everyone is fluent in bird-speak, perhaps\nit's best if we visualize the measurementsâ€”better known as \"the\nsignal\"â€”instead.",
                        "position": {
                            "start": { "line": 127, "column": 1, "offset": 4728 },
                            "end": { "line": 129, "column": 17, "offset": 4876 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 127, "column": 1, "offset": 4728 }, "end": { "line": 129, "column": 17, "offset": 4876 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We load the audio file, which gives us\nthe sampling rate (number of measurements per second) as well as audio\ndata as an ",
                        "position": {
                            "start": { "line": 131, "column": 1, "offset": 4878 },
                            "end": { "line": 133, "column": 12, "offset": 4999 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "(N, 2)",
                        "position": {
                            "start": { "line": 133, "column": 12, "offset": 4999 },
                            "end": { "line": 133, "column": 20, "offset": 5007 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " arrayâ€”two columns because this is a stereo\nrecording.",
                        "position": {
                            "start": { "line": 133, "column": 20, "offset": 5007 },
                            "end": { "line": 134, "column": 11, "offset": 5061 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 131, "column": 1, "offset": 4878 }, "end": { "line": 134, "column": 11, "offset": 5061 }, "indent": [1, 1, 1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from scipy.io import wavfile\n\nrate, audio = wavfile.read('data/nightingale.wav')",
                "position": {
                    "start": { "line": 136, "column": 1, "offset": 5063 },
                    "end": { "line": 140, "column": 4, "offset": 5157 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We convert to mono by averaging the left and right channels.",
                        "position": {
                            "start": { "line": 142, "column": 1, "offset": 5159 },
                            "end": { "line": 142, "column": 61, "offset": 5219 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 142, "column": 1, "offset": 5159 }, "end": { "line": 142, "column": 61, "offset": 5219 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "audio = np.mean(audio, axis=1)",
                "position": { "start": { "line": 144, "column": 1, "offset": 5221 }, "end": { "line": 146, "column": 4, "offset": 5265 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Then, calculate the length of the snippet and plot the audio.",
                        "position": {
                            "start": { "line": 148, "column": 1, "offset": 5267 },
                            "end": { "line": 148, "column": 62, "offset": 5328 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 148, "column": 1, "offset": 5267 }, "end": { "line": 148, "column": 62, "offset": 5328 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "N = audio.shape[0]\nL = N / rate\n\nprint(f'Audio length: {L:.2f} seconds')\n\nf, ax = plt.subplots()\nax.plot(np.arange(N) / rate, audio)\nax.set_xlabel('Time [s]')\nax.set_ylabel('Amplitude [unknown]');",
                "position": {
                    "start": { "line": 150, "column": 1, "offset": 5330 },
                    "end": { "line": 160, "column": 4, "offset": 5540 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Audio waveform plot of birdsong\" -->",
                "position": { "start": { "line": 162, "column": 1, "offset": 5542 }, "end": { "line": 162, "column": 56, "offset": 5597 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Well, that's not very satisfying, is it? If I sent this voltage to a\nspeaker, I might hear a bird chirping, but I can't very well imagine\nhow it would sound like in my head. Is there a better way of ",
                        "position": {
                            "start": { "line": 164, "column": 1, "offset": 5599 },
                            "end": { "line": 166, "column": 62, "offset": 5798 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "seeing",
                                "position": {
                                    "start": { "line": 166, "column": 63, "offset": 5799 },
                                    "end": { "line": 166, "column": 69, "offset": 5805 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 166, "column": 62, "offset": 5798 },
                            "end": { "line": 166, "column": 70, "offset": 5806 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nwhat is going on?",
                        "position": {
                            "start": { "line": 166, "column": 70, "offset": 5806 },
                            "end": { "line": 167, "column": 18, "offset": 5824 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 164, "column": 1, "offset": 5599 }, "end": { "line": 167, "column": 18, "offset": 5824 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "There is, and it is called the discrete Fourier transform, where\ndiscrete refers to the recording consisting of time-spaced sound\nmeasurements, in contrast to a continual recording as, e.g., on\nmagnetic tape (remember casettes?). The discrete Fourier\ntransform is often computed using the ",
                        "position": {
                            "start": { "line": 169, "column": 1, "offset": 5826 },
                            "end": { "line": 173, "column": 39, "offset": 6115 },
                            "indent": [1, 1, 1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "fast Fourier transform",
                                "position": {
                                    "start": { "line": 173, "column": 40, "offset": 6116 },
                                    "end": { "line": 173, "column": 62, "offset": 6138 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 173, "column": 39, "offset": 6115 },
                            "end": { "line": 173, "column": 63, "offset": 6139 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " (FFT)\nalgorithm, a name informally used to refer to the DFT itself. The\nDFT tells us which frequencies or \"notes\" to expect in our signal.",
                        "position": {
                            "start": { "line": 173, "column": 63, "offset": 6139 },
                            "end": { "line": 175, "column": 67, "offset": 6278 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 169, "column": 1, "offset": 5826 },
                    "end": { "line": 175, "column": 67, "offset": 6278 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Of course, a bird sings many notes throughout the song, so we'd also\nlike to know ",
                        "position": {
                            "start": { "line": 177, "column": 1, "offset": 6280 },
                            "end": { "line": 178, "column": 14, "offset": 6362 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "when",
                                "position": {
                                    "start": { "line": 178, "column": 15, "offset": 6363 },
                                    "end": { "line": 178, "column": 19, "offset": 6367 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 178, "column": 14, "offset": 6362 },
                            "end": { "line": 178, "column": 20, "offset": 6368 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " each note occurs. The Fourier transform takes a\nsignal in the time domain (i.e., a set of measurements over time) and\nturns it into a spectrumâ€”a set of frequencies with corresponding\n(complex",
                        "position": {
                            "start": { "line": 178, "column": 20, "offset": 6368 },
                            "end": { "line": 181, "column": 9, "offset": 6560 },
                            "indent": [1, 1, 1]
                        }
                    },
                    {
                        "type": "footnoteReference",
                        "identifier": "complex",
                        "label": "complex",
                        "position": {
                            "start": { "line": 181, "column": 9, "offset": 6560 },
                            "end": { "line": 181, "column": 19, "offset": 6570 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ") values. The spectrum does not contain any information about\ntime! ",
                        "position": {
                            "start": { "line": 181, "column": 19, "offset": 6570 },
                            "end": { "line": 182, "column": 7, "offset": 6638 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "footnoteReference",
                        "identifier": "time",
                        "label": "time",
                        "position": {
                            "start": { "line": 182, "column": 7, "offset": 6638 },
                            "end": { "line": 182, "column": 14, "offset": 6645 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 177, "column": 1, "offset": 6280 },
                    "end": { "line": 182, "column": 14, "offset": 6645 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "complex",
                "label": "complex",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "The Fourier transform essentially tells us how to combine\na set of sinusoids of varying frequency to form the input\nsignal. The spectrum consists of complex numbersâ€”one for\neach sinusoid. A complex number encodes two things: a\nmagnitude and an angle. The magnitude is the strength of\nthe sinusoid in the signal, and the angle how much it is\nshifted in time. At this point, we only care about the\nmagnitude, which we calculate using ",
                                "position": {
                                    "start": { "line": 185, "column": 5, "offset": 6663 },
                                    "end": { "line": 192, "column": 41, "offset": 7123 },
                                    "indent": [5, 5, 5, 5, 5, 5, 5]
                                }
                            },
                            {
                                "type": "inlineCode",
                                "value": "np.abs",
                                "position": {
                                    "start": { "line": 192, "column": 41, "offset": 7123 },
                                    "end": { "line": 192, "column": 49, "offset": 7131 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": ".",
                                "position": {
                                    "start": { "line": 192, "column": 49, "offset": 7131 },
                                    "end": { "line": 192, "column": 50, "offset": 7132 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 185, "column": 5, "offset": 6663 },
                            "end": { "line": 192, "column": 50, "offset": 7132 },
                            "indent": [5, 5, 5, 5, 5, 5, 5]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 184, "column": 1, "offset": 6647 },
                    "end": { "line": 192, "column": 54, "offset": 7136 },
                    "indent": [5, 5, 5, 5, 5, 5, 5, 5]
                }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "time",
                "label": "time",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "For more on techniques for calculating both (approximate) frequencies\nand time of occurrence, read up on wavelet analysis.",
                                "position": {
                                    "start": { "line": 195, "column": 5, "offset": 7147 },
                                    "end": { "line": 196, "column": 57, "offset": 7273 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 195, "column": 5, "offset": 7147 },
                            "end": { "line": 196, "column": 57, "offset": 7273 },
                            "indent": [5]
                        }
                    }
                ],
                "position": { "start": { "line": 194, "column": 1, "offset": 7134 }, "end": { "line": 196, "column": 61, "offset": 7277 }, "indent": [5, 5] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "So, to find both the frequencies and the time at which they were sung,\nwe'll need to be somewhat clever. Our strategy is as follows:\ntake the audio signal, split it into small, overlapping slices, and\napply the Fourier transform to each (a technique known as the Short\nTime Fourier Transform).",
                        "position": {
                            "start": { "line": 198, "column": 1, "offset": 7275 },
                            "end": { "line": 202, "column": 25, "offset": 7568 },
                            "indent": [1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 198, "column": 1, "offset": 7275 },
                    "end": { "line": 202, "column": 25, "offset": 7568 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We'll split the signal into slices of 1024 samplesâ€”that's about 0.02\nseconds of audio. Why we choose 1024 and not 1000 we'll explain in a\nsecond when we examine performance. The slices will overlap by 100\nsamples as shown here:",
                        "position": {
                            "start": { "line": 204, "column": 1, "offset": 7570 },
                            "end": { "line": 207, "column": 23, "offset": 7797 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 204, "column": 1, "offset": 7570 }, "end": { "line": 207, "column": 23, "offset": 7797 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "../figures/generated/sliding_window.png",
                        "alt": "A sliding window operation",
                        "position": {
                            "start": { "line": 209, "column": 1, "offset": 7799 },
                            "end": { "line": 209, "column": 71, "offset": 7869 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 209, "column": 1, "offset": 7799 }, "end": { "line": 209, "column": 71, "offset": 7869 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Start by chopping up the signal into slices of 1024 samples, each\nslice overlapping the previous by 100 samples. The resulting ",
                        "position": {
                            "start": { "line": 211, "column": 1, "offset": 7871 },
                            "end": { "line": 212, "column": 62, "offset": 7998 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "slices",
                        "position": {
                            "start": { "line": 212, "column": 62, "offset": 7998 },
                            "end": { "line": 212, "column": 70, "offset": 8006 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nobject contains one slice per row.",
                        "position": {
                            "start": { "line": 212, "column": 70, "offset": 8006 },
                            "end": { "line": 213, "column": 35, "offset": 8041 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 211, "column": 1, "offset": 7871 }, "end": { "line": 213, "column": 35, "offset": 8041 }, "indent": [1, 1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from skimage import util\n\nM = 1024\n\nslices = util.view_as_windows(audio, window_shape=(M,), step=100)\nprint(f'Audio shape: {audio.shape}, Sliced audio shape: {slices.shape}')",
                "position": {
                    "start": { "line": 215, "column": 1, "offset": 8043 },
                    "end": { "line": 222, "column": 4, "offset": 8231 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Generate a windowing function (see the section on windowing for a\ndiscussion of the underlying assumptions and interpretations of each)\nand multiply it with the signal:",
                        "position": {
                            "start": { "line": 224, "column": 1, "offset": 8233 },
                            "end": { "line": 226, "column": 33, "offset": 8401 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 224, "column": 1, "offset": 8233 }, "end": { "line": 226, "column": 33, "offset": 8401 }, "indent": [1, 1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "win = np.hanning(M + 1)[:-1]\nslices = slices * win",
                "position": { "start": { "line": 228, "column": 1, "offset": 8403 }, "end": { "line": 231, "column": 4, "offset": 8467 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "It's more convenient to have one slice per column, so we take the transpose:",
                        "position": {
                            "start": { "line": 233, "column": 1, "offset": 8469 },
                            "end": { "line": 233, "column": 77, "offset": 8545 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 233, "column": 1, "offset": 8469 }, "end": { "line": 233, "column": 77, "offset": 8545 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "slices = slices.T\nprint('Shape of `slices`:', slices.shape)",
                "position": { "start": { "line": 235, "column": 1, "offset": 8547 }, "end": { "line": 238, "column": 4, "offset": 8620 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For each slice, calculate the discrete Fourier transform. The DFT\nreturns both positive and negative frequencies (more on that in\n\"Frequencies and their ordering\"), so we slice out the positive M / 2\nfrequencies for now.",
                        "position": {
                            "start": { "line": 240, "column": 1, "offset": 8622 },
                            "end": { "line": 243, "column": 21, "offset": 8842 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 240, "column": 1, "offset": 8622 }, "end": { "line": 243, "column": 21, "offset": 8842 }, "indent": [1, 1, 1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "spectrum = np.fft.fft(slices, axis=0)[:M // 2 + 1:-1]\nspectrum = np.abs(spectrum)",
                "position": { "start": { "line": 245, "column": 1, "offset": 8844 }, "end": { "line": 248, "column": 4, "offset": 8939 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "(As a quick aside, you'll note that we use ",
                        "position": {
                            "start": { "line": 250, "column": 1, "offset": 8941 },
                            "end": { "line": 250, "column": 44, "offset": 8984 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "scipy.fftpack.fft",
                        "position": {
                            "start": { "line": 250, "column": 44, "offset": 8984 },
                            "end": { "line": 250, "column": 63, "offset": 9003 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and\n",
                        "position": {
                            "start": { "line": 250, "column": 63, "offset": 9003 },
                            "end": { "line": 251, "column": 1, "offset": 9008 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "np.fft",
                        "position": { "start": { "line": 251, "column": 1, "offset": 9008 }, "end": { "line": 251, "column": 9, "offset": 9016 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " interchangeably. NumPy provides basic FFT functionality,\nwhich SciPy extends further, but both include an ",
                        "position": {
                            "start": { "line": 251, "column": 9, "offset": 9016 },
                            "end": { "line": 252, "column": 50, "offset": 9123 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "fft",
                        "position": {
                            "start": { "line": 252, "column": 50, "offset": 9123 },
                            "end": { "line": 252, "column": 55, "offset": 9128 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " function, based\non the Fortran FFTPACK.)",
                        "position": {
                            "start": { "line": 252, "column": 55, "offset": 9128 },
                            "end": { "line": 253, "column": 25, "offset": 9169 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 250, "column": 1, "offset": 8941 }, "end": { "line": 253, "column": 25, "offset": 9169 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The spectrum can contain both very large and very small values.\nTaking the log compresses the range significantly.",
                        "position": {
                            "start": { "line": 255, "column": 1, "offset": 9171 },
                            "end": { "line": 256, "column": 51, "offset": 9285 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 255, "column": 1, "offset": 9171 }, "end": { "line": 256, "column": 51, "offset": 9285 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Here we do a log plot of the ratio of the signal divided by the maximum signal.\nThe specific unit used for the ratio is the decibel, $20\nlog_{10}\\left(\\mathrm{amplitude ratio}\\right)$.",
                        "position": {
                            "start": { "line": 258, "column": 1, "offset": 9287 },
                            "end": { "line": 260, "column": 48, "offset": 9471 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 258, "column": 1, "offset": 9287 }, "end": { "line": 260, "column": 48, "offset": 9471 }, "indent": [1, 1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "f, ax = plt.subplots(figsize=(4.8, 2.4))\n\nS = np.abs(spectrum)\nS = 20 * np.log10(S / np.max(S))\n\nax.imshow(S, origin='lower', cmap='viridis',\n          extent=(0, L, 0, rate / 2 / 1000))\nax.axis('tight')\nax.set_ylabel('Frequency [kHz]')\nax.set_xlabel('Time [s]');",
                "position": {
                    "start": { "line": 262, "column": 1, "offset": 9473 },
                    "end": { "line": 273, "column": 4, "offset": 9750 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Birdsong spectrogram\" -->",
                "position": { "start": { "line": 275, "column": 1, "offset": 9752 }, "end": { "line": 275, "column": 45, "offset": 9796 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Much better! We can now see the frequencies vary over time, and it\ncorresponds to the way the audio sounds. See if you can match my\nearlier description: chee-chee-woorrrr-hee-hee cheet-wheet-hoorrr-chi\nrrr-whi-wheo-wheo-wheo-wheo-wheo-wheo (I didn't transcribe the section\nfrom 3 to 5 secondsâ€”that's another bird).",
                        "position": {
                            "start": { "line": 277, "column": 1, "offset": 9798 },
                            "end": { "line": 281, "column": 42, "offset": 10112 },
                            "indent": [1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 277, "column": 1, "offset": 9798 },
                    "end": { "line": 281, "column": 42, "offset": 10112 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "SciPy already includes an implementation of this\nprocedure as ",
                        "position": {
                            "start": { "line": 283, "column": 1, "offset": 10114 },
                            "end": { "line": 284, "column": 14, "offset": 10176 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "scipy.signal.spectrogram",
                        "position": {
                            "start": { "line": 284, "column": 14, "offset": 10176 },
                            "end": { "line": 284, "column": 40, "offset": 10202 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ", which can be invoked as\nfollows:",
                        "position": {
                            "start": { "line": 284, "column": 40, "offset": 10202 },
                            "end": { "line": 285, "column": 9, "offset": 10236 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 283, "column": 1, "offset": 10114 }, "end": { "line": 285, "column": 9, "offset": 10236 }, "indent": [1, 1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from scipy import signal\n\nfreqs, times, Sx = signal.spectrogram(audio, fs=rate, window='hanning',\n                                      nperseg=1024, noverlap=M - 100,\n                                      detrend=False, scaling='spectrum')\n\nf, ax = plt.subplots(figsize=(4.8, 2.4))\nax.pcolormesh(times, freqs / 1000, 10 * np.log10(Sx), cmap='viridis')\nax.set_ylabel('Frequency [kHz]')\nax.set_xlabel('Time [s]');",
                "position": {
                    "start": { "line": 287, "column": 1, "offset": 10238 },
                    "end": { "line": 298, "column": 4, "offset": 10664 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"SciPy built-in rendition of birdsong spectrogram\" -->",
                "position": { "start": { "line": 300, "column": 1, "offset": 10666 }, "end": { "line": 300, "column": 73, "offset": 10738 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The only differences are that SciPy returns the spectrum magnitude\nsquared (which turns measured voltage into measured energy), and\nmultiplies it by some normalization factors",
                        "position": {
                            "start": { "line": 302, "column": 1, "offset": 10740 },
                            "end": { "line": 304, "column": 44, "offset": 10915 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "footnoteReference",
                        "identifier": "scaling",
                        "label": "scaling",
                        "position": {
                            "start": { "line": 304, "column": 44, "offset": 10915 },
                            "end": { "line": 304, "column": 54, "offset": 10925 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 304, "column": 54, "offset": 10925 },
                            "end": { "line": 304, "column": 55, "offset": 10926 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 302, "column": 1, "offset": 10740 }, "end": { "line": 304, "column": 55, "offset": 10926 }, "indent": [1, 1] }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "scaling",
                "label": "scaling",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "SciPy goes to some effort to preserve the energy in the\nspectrum. Therefore, when taking only half the components\n(for N even), it multiplies the remaining components,\napart from the first and last components, by two (those\ntwo components are \"shared\" by the two halves of the\nspectrum). It also normalizes the window by dividing it\nby its sum.",
                                "position": {
                                    "start": { "line": 307, "column": 5, "offset": 10944 },
                                    "end": { "line": 313, "column": 16, "offset": 11312 },
                                    "indent": [5, 5, 5, 5, 5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 307, "column": 5, "offset": 10944 },
                            "end": { "line": 313, "column": 16, "offset": 11312 },
                            "indent": [5, 5, 5, 5, 5, 5]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 306, "column": 1, "offset": 10928 },
                    "end": { "line": 313, "column": 20, "offset": 11316 },
                    "indent": [5, 5, 5, 5, 5, 5, 5]
                }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "History",
                        "position": {
                            "start": { "line": 315, "column": 4, "offset": 11317 },
                            "end": { "line": 315, "column": 11, "offset": 11324 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 315, "column": 1, "offset": 11314 }, "end": { "line": 315, "column": 11, "offset": 11324 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Tracing the exact origins of the Fourier transform is tricky. Some\nrelated procedures go as far back as Babylonian times, but it was the\nhot topics of calculating asteroid orbits and solving the heat (flow)\nequation that led to several breakthroughs in the early 1800s. Whom\nexactly among Clairaut, Lagrange, Euler, Gauss and D'Alembert we\nshould thank is not exactly clear, but Gauss was the first to describe\nthe fast Fourier transform (an algorithm for computing the discrete\nFourier transform, popularized by Cooley and Tukey in 1965). Joseph\nFourier, after whom the transform is named, first claimed that\n",
                        "position": {
                            "start": { "line": 317, "column": 1, "offset": 11326 },
                            "end": { "line": 326, "column": 1, "offset": 11936 },
                            "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "arbitrary",
                                "position": {
                                    "start": { "line": 326, "column": 2, "offset": 11937 },
                                    "end": { "line": 326, "column": 11, "offset": 11946 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 326, "column": 1, "offset": 11936 },
                            "end": { "line": 326, "column": 12, "offset": 11947 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " periodic ",
                        "position": {
                            "start": { "line": 326, "column": 12, "offset": 11947 },
                            "end": { "line": 326, "column": 22, "offset": 11957 },
                            "indent": []
                        }
                    },
                    {
                        "type": "footnoteReference",
                        "identifier": "periodic",
                        "label": "periodic",
                        "position": {
                            "start": { "line": 326, "column": 22, "offset": 11957 },
                            "end": { "line": 326, "column": 33, "offset": 11968 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " functions can be expressed as a sum of\ntrigonometric functions.",
                        "position": {
                            "start": { "line": 326, "column": 33, "offset": 11968 },
                            "end": { "line": 327, "column": 25, "offset": 12032 },
                            "indent": [1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 317, "column": 1, "offset": 11326 },
                    "end": { "line": 327, "column": 25, "offset": 12032 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "periodic",
                "label": "periodic",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "The period can, in fact, also be infinite! The general\ncontinuous Fourier transform provides for this\npossibility. Discrete Fourier transforms are generally\ndefined over a finite interval, and this is implicitly\nthe period of the time domain function that is\ntransformed. In other words, if you do the inverse\ndiscrete Fourier transform, you ",
                                "position": {
                                    "start": { "line": 330, "column": 5, "offset": 12051 },
                                    "end": { "line": 336, "column": 37, "offset": 12417 },
                                    "indent": [5, 5, 5, 5, 5, 5]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "always",
                                        "position": {
                                            "start": { "line": 336, "column": 38, "offset": 12418 },
                                            "end": { "line": 336, "column": 44, "offset": 12424 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 336, "column": 37, "offset": 12417 },
                                    "end": { "line": 336, "column": 45, "offset": 12425 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " get a periodic\nsignal out.",
                                "position": {
                                    "start": { "line": 336, "column": 45, "offset": 12425 },
                                    "end": { "line": 337, "column": 16, "offset": 12456 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 330, "column": 5, "offset": 12051 },
                            "end": { "line": 337, "column": 16, "offset": 12456 },
                            "indent": [5, 5, 5, 5, 5, 5, 5]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 329, "column": 1, "offset": 12034 },
                    "end": { "line": 337, "column": 20, "offset": 12460 },
                    "indent": [5, 5, 5, 5, 5, 5, 5, 5]
                }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "Implementation",
                        "position": {
                            "start": { "line": 339, "column": 4, "offset": 12461 },
                            "end": { "line": 339, "column": 18, "offset": 12475 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 339, "column": 1, "offset": 12458 }, "end": { "line": 339, "column": 18, "offset": 12475 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The discrete Fourier transform functionality in SciPy lives in the\n`scipy.fftpack",
                        "position": {
                            "start": { "line": 341, "column": 1, "offset": 12477 },
                            "end": { "line": 342, "column": 15, "offset": 12558 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "",
                        "position": {
                            "start": { "line": 342, "column": 15, "offset": 12558 },
                            "end": { "line": 342, "column": 17, "offset": 12560 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " module. Among other things, it provides the\nfollowing DFT-related functionality:",
                        "position": {
                            "start": { "line": 342, "column": 17, "offset": 12560 },
                            "end": { "line": 343, "column": 37, "offset": 12641 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 341, "column": 1, "offset": 12477 }, "end": { "line": 343, "column": 37, "offset": 12641 }, "indent": [1, 1] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "fft",
                                        "position": {
                                            "start": { "line": 345, "column": 5, "offset": 12647 },
                                            "end": { "line": 345, "column": 10, "offset": 12652 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 345, "column": 10, "offset": 12652 },
                                            "end": { "line": 345, "column": 12, "offset": 12654 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "fft2",
                                        "position": {
                                            "start": { "line": 345, "column": 12, "offset": 12654 },
                                            "end": { "line": 345, "column": 18, "offset": 12660 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 345, "column": 18, "offset": 12660 },
                                            "end": { "line": 345, "column": 20, "offset": 12662 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "fftn",
                                        "position": {
                                            "start": { "line": 345, "column": 20, "offset": 12662 },
                                            "end": { "line": 345, "column": 26, "offset": 12668 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ": Compute the discrete Fourier transform using\nthe Fast Fourier Transform algorithm in 1, 2, or ",
                                        "position": {
                                            "start": { "line": 345, "column": 26, "offset": 12668 },
                                            "end": { "line": 346, "column": 54, "offset": 12768 },
                                            "indent": [5]
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "n",
                                        "position": {
                                            "start": { "line": 346, "column": 54, "offset": 12768 },
                                            "end": { "line": 346, "column": 57, "offset": 12771 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " dimensions.",
                                        "position": {
                                            "start": { "line": 346, "column": 57, "offset": 12771 },
                                            "end": { "line": 346, "column": 69, "offset": 12783 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 345, "column": 5, "offset": 12647 },
                                    "end": { "line": 346, "column": 69, "offset": 12783 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 345, "column": 1, "offset": 12643 },
                            "end": { "line": 346, "column": 69, "offset": 12783 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "ifft",
                                        "position": {
                                            "start": { "line": 347, "column": 5, "offset": 12788 },
                                            "end": { "line": 347, "column": 11, "offset": 12794 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 347, "column": 11, "offset": 12794 },
                                            "end": { "line": 347, "column": 13, "offset": 12796 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "ifft2",
                                        "position": {
                                            "start": { "line": 347, "column": 13, "offset": 12796 },
                                            "end": { "line": 347, "column": 20, "offset": 12803 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 347, "column": 20, "offset": 12803 },
                                            "end": { "line": 347, "column": 22, "offset": 12805 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "ifftn",
                                        "position": {
                                            "start": { "line": 347, "column": 22, "offset": 12805 },
                                            "end": { "line": 347, "column": 29, "offset": 12812 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ": Compute the inverse of the DFT",
                                        "position": {
                                            "start": { "line": 347, "column": 29, "offset": 12812 },
                                            "end": { "line": 347, "column": 61, "offset": 12844 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 347, "column": 5, "offset": 12788 },
                                    "end": { "line": 347, "column": 61, "offset": 12844 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 347, "column": 1, "offset": 12784 },
                            "end": { "line": 347, "column": 61, "offset": 12844 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "dct",
                                        "position": {
                                            "start": { "line": 348, "column": 5, "offset": 12849 },
                                            "end": { "line": 348, "column": 10, "offset": 12854 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 348, "column": 10, "offset": 12854 },
                                            "end": { "line": 348, "column": 12, "offset": 12856 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "idct",
                                        "position": {
                                            "start": { "line": 348, "column": 12, "offset": 12856 },
                                            "end": { "line": 348, "column": 18, "offset": 12862 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 348, "column": 18, "offset": 12862 },
                                            "end": { "line": 348, "column": 20, "offset": 12864 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "dst",
                                        "position": {
                                            "start": { "line": 348, "column": 20, "offset": 12864 },
                                            "end": { "line": 348, "column": 25, "offset": 12869 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 348, "column": 25, "offset": 12869 },
                                            "end": { "line": 348, "column": 27, "offset": 12871 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "idst",
                                        "position": {
                                            "start": { "line": 348, "column": 27, "offset": 12871 },
                                            "end": { "line": 348, "column": 33, "offset": 12877 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ": Compute the cosine and sine transforms, and their inverses.",
                                        "position": {
                                            "start": { "line": 348, "column": 33, "offset": 12877 },
                                            "end": { "line": 348, "column": 94, "offset": 12938 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 348, "column": 5, "offset": 12849 },
                                    "end": { "line": 348, "column": 94, "offset": 12938 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 348, "column": 1, "offset": 12845 },
                            "end": { "line": 348, "column": 94, "offset": 12938 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "fftshift",
                                        "position": {
                                            "start": { "line": 349, "column": 5, "offset": 12943 },
                                            "end": { "line": 349, "column": 15, "offset": 12953 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 349, "column": 15, "offset": 12953 },
                                            "end": { "line": 349, "column": 17, "offset": 12955 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "ifftshift",
                                        "position": {
                                            "start": { "line": 349, "column": 17, "offset": 12955 },
                                            "end": { "line": 349, "column": 28, "offset": 12966 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ": Shift the zero-frequency component to the center of the spectrum and back, respectively (more about that soon).",
                                        "position": {
                                            "start": { "line": 349, "column": 28, "offset": 12966 },
                                            "end": { "line": 349, "column": 141, "offset": 13079 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 349, "column": 5, "offset": 12943 },
                                    "end": { "line": 349, "column": 141, "offset": 13079 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 349, "column": 1, "offset": 12939 },
                            "end": { "line": 349, "column": 141, "offset": 13079 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "fftfreq",
                                        "position": {
                                            "start": { "line": 350, "column": 5, "offset": 13084 },
                                            "end": { "line": 350, "column": 14, "offset": 13093 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ": Return the discrete Fourier transform sample frequencies.",
                                        "position": {
                                            "start": { "line": 350, "column": 14, "offset": 13093 },
                                            "end": { "line": 350, "column": 73, "offset": 13152 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 350, "column": 5, "offset": 13084 },
                                    "end": { "line": 350, "column": 73, "offset": 13152 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 350, "column": 1, "offset": 13080 },
                            "end": { "line": 350, "column": 73, "offset": 13152 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "rfft",
                                        "position": {
                                            "start": { "line": 351, "column": 5, "offset": 13157 },
                                            "end": { "line": 351, "column": 11, "offset": 13163 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ": Compute the DFT of a real sequence, exploiting the symmetry of the resulting spectrum for increased performance. Also used by ",
                                        "position": {
                                            "start": { "line": 351, "column": 11, "offset": 13163 },
                                            "end": { "line": 351, "column": 139, "offset": 13291 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "fft",
                                        "position": {
                                            "start": { "line": 351, "column": 139, "offset": 13291 },
                                            "end": { "line": 351, "column": 144, "offset": 13296 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " internally when applicable.",
                                        "position": {
                                            "start": { "line": 351, "column": 144, "offset": 13296 },
                                            "end": { "line": 351, "column": 172, "offset": 13324 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 351, "column": 5, "offset": 13157 },
                                    "end": { "line": 351, "column": 172, "offset": 13324 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 351, "column": 1, "offset": 13153 },
                            "end": { "line": 351, "column": 172, "offset": 13324 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 345, "column": 1, "offset": 12643 },
                    "end": { "line": 351, "column": 172, "offset": 13324 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "This is complemented by the following functions in NumPy:",
                        "position": {
                            "start": { "line": 353, "column": 1, "offset": 13326 },
                            "end": { "line": 353, "column": 58, "offset": 13383 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 353, "column": 1, "offset": 13326 }, "end": { "line": 353, "column": 58, "offset": 13383 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "np.hanning",
                                        "position": {
                                            "start": { "line": 355, "column": 5, "offset": 13389 },
                                            "end": { "line": 355, "column": 17, "offset": 13401 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 355, "column": 17, "offset": 13401 },
                                            "end": { "line": 355, "column": 19, "offset": 13403 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "np.hamming",
                                        "position": {
                                            "start": { "line": 355, "column": 19, "offset": 13403 },
                                            "end": { "line": 355, "column": 31, "offset": 13415 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 355, "column": 31, "offset": 13415 },
                                            "end": { "line": 355, "column": 33, "offset": 13417 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "np.bartlett",
                                        "position": {
                                            "start": { "line": 355, "column": 33, "offset": 13417 },
                                            "end": { "line": 355, "column": 46, "offset": 13430 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", ",
                                        "position": {
                                            "start": { "line": 355, "column": 46, "offset": 13430 },
                                            "end": { "line": 355, "column": 48, "offset": 13432 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "np.blackman",
                                        "position": {
                                            "start": { "line": 355, "column": 48, "offset": 13432 },
                                            "end": { "line": 355, "column": 61, "offset": 13445 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ",\n",
                                        "position": {
                                            "start": { "line": 355, "column": 61, "offset": 13445 },
                                            "end": { "line": 356, "column": 5, "offset": 13451 },
                                            "indent": [5]
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "np.kaiser",
                                        "position": {
                                            "start": { "line": 356, "column": 5, "offset": 13451 },
                                            "end": { "line": 356, "column": 16, "offset": 13462 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ": Tapered windowing functions.",
                                        "position": {
                                            "start": { "line": 356, "column": 16, "offset": 13462 },
                                            "end": { "line": 356, "column": 46, "offset": 13492 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 355, "column": 5, "offset": 13389 },
                                    "end": { "line": 356, "column": 46, "offset": 13492 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 355, "column": 1, "offset": 13385 },
                            "end": { "line": 356, "column": 46, "offset": 13492 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 355, "column": 1, "offset": 13385 }, "end": { "line": 356, "column": 46, "offset": 13492 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "It is also used to perform fast convolutions of large inputs by\n",
                        "position": {
                            "start": { "line": 358, "column": 1, "offset": 13494 },
                            "end": { "line": 359, "column": 1, "offset": 13558 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "scipy.signal.fftconvolve",
                        "position": {
                            "start": { "line": 359, "column": 1, "offset": 13558 },
                            "end": { "line": 359, "column": 27, "offset": 13584 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 359, "column": 27, "offset": 13584 },
                            "end": { "line": 359, "column": 28, "offset": 13585 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 358, "column": 1, "offset": 13494 }, "end": { "line": 359, "column": 28, "offset": 13585 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "SciPy wraps the Fortran FFTPACK libraryâ€”it is not the fastest out\nthere, but unlike packages such as FFTW, it has a permissive free\nsoftware license.",
                        "position": {
                            "start": { "line": 361, "column": 1, "offset": 13587 },
                            "end": { "line": 363, "column": 18, "offset": 13736 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 361, "column": 1, "offset": 13587 }, "end": { "line": 363, "column": 18, "offset": 13736 }, "indent": [1, 1] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "Choosing the length of the discrete Fourier transform (DFT)",
                        "position": {
                            "start": { "line": 365, "column": 4, "offset": 13741 },
                            "end": { "line": 365, "column": 63, "offset": 13800 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 365, "column": 1, "offset": 13738 }, "end": { "line": 365, "column": 63, "offset": 13800 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "A naive calculation of the DFT takes $\\mathcal{O}\\left(N^2\\right)$ operations ",
                        "position": {
                            "start": { "line": 367, "column": 1, "offset": 13802 },
                            "end": { "line": 367, "column": 79, "offset": 13880 },
                            "indent": []
                        }
                    },
                    {
                        "type": "footnoteReference",
                        "identifier": "big_o",
                        "label": "big_o",
                        "position": {
                            "start": { "line": 367, "column": 79, "offset": 13880 },
                            "end": { "line": 367, "column": 87, "offset": 13888 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".\nHow come? Well, you have $N$\n(complex) sinusoids of different frequencies ($2 \\pi f \\times 0, 2 \\pi f \\times\n1, 2 \\pi f \\times 3, ..., 2 \\pi f \\times (N - 1)$), and you want to see how\nstrongly your signal corresponds to each. Starting with the first,\nyou take the dot product with the signal (which, in itself, entails $N$\nmultiplication operations). Repeating this operation $N$ times, once\nfor each sinusoid, then gives $N^2$ operations.",
                        "position": {
                            "start": { "line": 367, "column": 87, "offset": 13888 },
                            "end": { "line": 374, "column": 48, "offset": 14330 },
                            "indent": [1, 1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 367, "column": 1, "offset": 13802 },
                    "end": { "line": 374, "column": 48, "offset": 14330 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "big_o",
                "label": "big_o",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "In computer science, the computational cost of an algorithm\nis often expressed in \"Big O\" notation. The notation gives\nus an indication of how an algorithm's execution time scales\nwith an increasing number of elements. If an algorithm is $\\mathcal{O}(N)$,\nit means its execution time increases linearly with\nthe number of input elements (for example, searching for a\ngiven value in an unsorted list is $\\mathcal{O}\\left(N\\right)$). Bubble sort is\nan example of an $O\\left(N^2\\right)$ algorithm; the exact number of\noperations performed may, hypothetically, be $N + \\frac{1}{2} N^2$,\nmeaning that the computational cost grows quadratically with\nthe number of input elements.",
                                "position": {
                                    "start": { "line": 377, "column": 5, "offset": 14346 },
                                    "end": { "line": 387, "column": 34, "offset": 15059 },
                                    "indent": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 377, "column": 5, "offset": 14346 },
                            "end": { "line": 387, "column": 34, "offset": 15059 },
                            "indent": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 376, "column": 1, "offset": 14332 },
                    "end": { "line": 387, "column": 38, "offset": 15063 },
                    "indent": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Now, contrast that with the fast Fourier transform, which is $\\mathcal{O}\\left(N \\log N\\right)$ in\nthe ideal case due to the clever re-use of\ncalculationsâ€”a great improvement! However, the classical Cooley-Tukey\nalgorithm implemented in FFTPACK (and used by SciPy) recursively breaks up the transform\ninto smaller (prime-sized) pieces and only shows this improvement for\n\"smooth\" input lengths (an input length is considered smooth when its\nlargest prime factor is small). For large prime-sized pieces, the\nBluestein or Rader algorithms can be used in conjunction with the\nCooley-Tukey algorithm, but this optimization is not implemented in\nFFTPACK.",
                        "position": {
                            "start": { "line": 389, "column": 1, "offset": 15061 },
                            "end": { "line": 398, "column": 9, "offset": 15710 },
                            "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                        }
                    },
                    {
                        "type": "footnoteReference",
                        "identifier": "fast",
                        "label": "fast",
                        "position": {
                            "start": { "line": 398, "column": 9, "offset": 15710 },
                            "end": { "line": 398, "column": 16, "offset": 15717 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 389, "column": 1, "offset": 15061 },
                    "end": { "line": 398, "column": 16, "offset": 15717 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Let us illustrate:",
                        "position": {
                            "start": { "line": 400, "column": 1, "offset": 15719 },
                            "end": { "line": 400, "column": 19, "offset": 15737 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 400, "column": 1, "offset": 15719 }, "end": { "line": 400, "column": 19, "offset": 15737 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "import time\n\nfrom scipy import fftpack\nfrom sympy import factorint\n\nK = 1000\nlengths = range(250, 260)\n\n# Calculate the smoothness for all input lengths\nsmoothness = [max(factorint(i).keys()) for i in lengths]\n\n\nexec_times = []\nfor i in lengths:\n    z = np.random.random(i)\n\n    # For each input length i, execute the FFT K times\n    # and store the execution time\n\n    times = []\n    for k in range(K):\n        tic = time.monotonic()\n        fftpack.fft(z)\n        toc = time.monotonic()\n        times.append(toc - tic)\n\n    # For each input length, remember the *minimum* execution time\n    exec_times.append(min(times))\n\n\nf, (ax0, ax1) = plt.subplots(2, 1, sharex=True)\nax0.stem(lengths, np.array(exec_times) * 10**6)\nax0.set_ylabel('Execution time (Âµs)')\n\nax1.stem(lengths, smoothness)\nax1.set_ylabel('Smoothness of input length\\n(lower is better)')\nax1.set_xlabel('Length of input');",
                "position": {
                    "start": { "line": 402, "column": 1, "offset": 15739 },
                    "end": { "line": 440, "column": 4, "offset": 16641 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"FFT execution time vs smoothness for different input lengths\" -->",
                "position": { "start": { "line": 442, "column": 1, "offset": 16643 }, "end": { "line": 442, "column": 85, "offset": 16727 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The intuition is that, for smooth input lengths, the FFT can be broken up\ninto many small pieces. After performing the FFT on the first piece,\nthose results can be reused in subsequent computations. This explains\nwhy we chose a length of 1024 for our audio slices earlierâ€”it has a\nsmoothness of only 2, resulting in the optimal \"radix-2 Cooley-Tukey\"\nalgorithm, which computes the FFT using only $(N/2) \\log_2 N = 5120$ complex\nmultiplications, instead of $N^2 = 1048576$. Choosing $N = 2^m$\nalways ensures a maximally smooth $N$ (and, thus, the fastest FFT).",
                        "position": {
                            "start": { "line": 444, "column": 1, "offset": 16729 },
                            "end": { "line": 451, "column": 68, "offset": 17288 },
                            "indent": [1, 1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 444, "column": 1, "offset": 16729 },
                    "end": { "line": 451, "column": 68, "offset": 17288 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "fast",
                "label": "fast",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "While ideally we don't want to reimplement existing\nalgorithms, sometimes it becomes necessary in order to obtain\nthe best execution speeds possible, and tools\nlike ",
                                "position": {
                                    "start": { "line": 454, "column": 5, "offset": 17303 },
                                    "end": { "line": 457, "column": 10, "offset": 17480 },
                                    "indent": [5, 5, 5]
                                }
                            },
                            {
                                "type": "link",
                                "title": null,
                                "url": "http://cython.org",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Cython",
                                        "position": {
                                            "start": { "line": 457, "column": 11, "offset": 17481 },
                                            "end": { "line": 457, "column": 17, "offset": 17487 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 457, "column": 10, "offset": 17480 },
                                    "end": { "line": 457, "column": 37, "offset": 17507 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "â€”which compiles Python to\nCâ€”and ",
                                "position": {
                                    "start": { "line": 457, "column": 37, "offset": 17507 },
                                    "end": { "line": 458, "column": 11, "offset": 17543 },
                                    "indent": [5]
                                }
                            },
                            {
                                "type": "link",
                                "title": null,
                                "url": "http://numba.pydata.org",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Numba",
                                        "position": {
                                            "start": { "line": 458, "column": 12, "offset": 17544 },
                                            "end": { "line": 458, "column": 17, "offset": 17549 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 458, "column": 11, "offset": 17543 },
                                    "end": { "line": 458, "column": 43, "offset": 17575 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "â€”which does\njust-in-time compilation of Python codeâ€”make life a lot\neasier (and faster!). If you are able to use GPL-licenced\nsoftware, you may consider\nusing ",
                                "position": {
                                    "start": { "line": 458, "column": 43, "offset": 17575 },
                                    "end": { "line": 462, "column": 11, "offset": 17750 },
                                    "indent": [5, 5, 5, 5]
                                }
                            },
                            {
                                "type": "link",
                                "title": null,
                                "url": "https://github.com/hgomersall/pyFFTW",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "PyFFTW",
                                        "position": {
                                            "start": { "line": 462, "column": 12, "offset": 17751 },
                                            "end": { "line": 462, "column": 18, "offset": 17757 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 462, "column": 11, "offset": 17750 },
                                    "end": { "line": 462, "column": 57, "offset": 17796 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " for\nfaster FFTs.",
                                "position": {
                                    "start": { "line": 462, "column": 57, "offset": 17796 },
                                    "end": { "line": 463, "column": 17, "offset": 17817 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 454, "column": 5, "offset": 17303 },
                            "end": { "line": 463, "column": 17, "offset": 17817 },
                            "indent": [5, 5, 5, 5, 5, 5, 5, 5, 5]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 453, "column": 1, "offset": 17290 },
                    "end": { "line": 463, "column": 21, "offset": 17821 },
                    "indent": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "More discrete Fourier transform concepts",
                        "position": {
                            "start": { "line": 465, "column": 4, "offset": 17822 },
                            "end": { "line": 465, "column": 44, "offset": 17862 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 465, "column": 1, "offset": 17819 }, "end": { "line": 465, "column": 44, "offset": 17862 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Next, we present a couple of common concepts worth knowing before\noperating heavy Fourier transform machinery, whereafter we tackle\nanother real-world problem: analyzing target detection in radar data.",
                        "position": {
                            "start": { "line": 467, "column": 1, "offset": 17864 },
                            "end": { "line": 469, "column": 70, "offset": 18065 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 467, "column": 1, "offset": 17864 }, "end": { "line": 469, "column": 70, "offset": 18065 }, "indent": [1, 1] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Frequencies and their ordering",
                        "position": {
                            "start": { "line": 471, "column": 5, "offset": 18071 },
                            "end": { "line": 471, "column": 35, "offset": 18101 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 471, "column": 1, "offset": 18067 }, "end": { "line": 471, "column": 35, "offset": 18101 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For historical reasons, most implementations return an array where\nfrequencies vary from low-to-high-to-low (see the box \"Discrete\nFourier transforms\" for further explanation of frequencies). E.g., when we do the real\nFourier transform of a signal of all ones, an input that has no\nvariation and therefore only has the slowest, constant Fourier\ncomponent (also known as the \"DC\" or Direct Current componentâ€”just\nelectronics jargon for \"mean of the signal\"), we see this DC component\nappearing as the first entry:",
                        "position": {
                            "start": { "line": 473, "column": 1, "offset": 18103 },
                            "end": { "line": 480, "column": 30, "offset": 18615 },
                            "indent": [1, 1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 473, "column": 1, "offset": 18103 },
                    "end": { "line": 480, "column": 30, "offset": 18615 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from scipy import fftpack\nN = 10\n\nfftpack.fft(np.ones(N))  # The first component is np.mean(x) * N",
                "position": {
                    "start": { "line": 482, "column": 1, "offset": 18617 },
                    "end": { "line": 487, "column": 4, "offset": 18729 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "When we try the FFT on a rapidly changing signal, we see a high\nfrequency component appear:",
                        "position": {
                            "start": { "line": 489, "column": 1, "offset": 18731 },
                            "end": { "line": 490, "column": 28, "offset": 18822 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 489, "column": 1, "offset": 18731 }, "end": { "line": 490, "column": 28, "offset": 18822 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "z = np.ones(10)\nz[::2] = -1\n\nprint(f'Applying FFT to {z}')\nfftpack.fft(z)",
                "position": {
                    "start": { "line": 492, "column": 1, "offset": 18824 },
                    "end": { "line": 498, "column": 4, "offset": 18911 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Note that the FFT returns a complex spectrum which, in the case of\nreal inputs, is conjugate symmetrical (i.e., symmetric in the real\npart, and anti-symmetric in the imaginary part):",
                        "position": {
                            "start": { "line": 500, "column": 1, "offset": 18913 },
                            "end": { "line": 502, "column": 49, "offset": 19095 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 500, "column": 1, "offset": 18913 }, "end": { "line": 502, "column": 49, "offset": 19095 }, "indent": [1, 1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "x = np.array([1, 5, 12, 7, 3, 0, 4, 3, 2, 8])\nX = fftpack.fft(x)\n\nwith np.printoptions(precision=2):\n    print(\"Real part:     \", X.real)\n    print(\"Imaginary part:\", X.imag)",
                "position": {
                    "start": { "line": 504, "column": 1, "offset": 19097 },
                    "end": { "line": 511, "column": 4, "offset": 19285 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "(And, again, recall that the first component is ",
                        "position": {
                            "start": { "line": 513, "column": 1, "offset": 19287 },
                            "end": { "line": 513, "column": 49, "offset": 19335 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "np.mean(x) * N",
                        "position": {
                            "start": { "line": 513, "column": 49, "offset": 19335 },
                            "end": { "line": 513, "column": 65, "offset": 19351 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".)",
                        "position": {
                            "start": { "line": 513, "column": 65, "offset": 19351 },
                            "end": { "line": 513, "column": 67, "offset": 19353 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 513, "column": 1, "offset": 19287 }, "end": { "line": 513, "column": 67, "offset": 19353 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The ",
                        "position": {
                            "start": { "line": 515, "column": 1, "offset": 19355 },
                            "end": { "line": 515, "column": 5, "offset": 19359 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "fftfreq",
                        "position": {
                            "start": { "line": 515, "column": 5, "offset": 19359 },
                            "end": { "line": 515, "column": 14, "offset": 19368 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " function tells us which frequencies we are looking at\nspecifically:",
                        "position": {
                            "start": { "line": 515, "column": 14, "offset": 19368 },
                            "end": { "line": 516, "column": 14, "offset": 19436 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 515, "column": 1, "offset": 19355 }, "end": { "line": 516, "column": 14, "offset": 19436 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "fftpack.fftfreq(10)",
                "position": { "start": { "line": 518, "column": 1, "offset": 19438 }, "end": { "line": 520, "column": 4, "offset": 19471 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The result tells us that our maximum component occured at a frequency\nof 0.5 cycles per sample. This agrees with the input, where a\nminus-one-plus-one cycle repeated every second sample.",
                        "position": {
                            "start": { "line": 522, "column": 1, "offset": 19473 },
                            "end": { "line": 524, "column": 55, "offset": 19659 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 522, "column": 1, "offset": 19473 }, "end": { "line": 524, "column": 55, "offset": 19659 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Sometimes, it is convenient to view the spectrum organized slightly\ndifferently, from high-negative to low to-high-positive (for now, we\nwon't dive too deeply into the concept of negative frequency, other\nthan saying a real-world sine wave is produced by a combination of\npositive and negative frequencies). We re-shuffle the spectrum using\nthe ",
                        "position": {
                            "start": { "line": 526, "column": 1, "offset": 19661 },
                            "end": { "line": 531, "column": 5, "offset": 20006 },
                            "indent": [1, 1, 1, 1, 1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "fftshift",
                        "position": {
                            "start": { "line": 531, "column": 5, "offset": 20006 },
                            "end": { "line": 531, "column": 15, "offset": 20016 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " function.",
                        "position": {
                            "start": { "line": 531, "column": 15, "offset": 20016 },
                            "end": { "line": 531, "column": 25, "offset": 20026 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 526, "column": 1, "offset": 19661 },
                    "end": { "line": 531, "column": 25, "offset": 20026 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "blockquote",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "strong",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Discrete Fourier transforms {.callout}",
                                        "position": {
                                            "start": { "line": 533, "column": 5, "offset": 20032 },
                                            "end": { "line": 533, "column": 43, "offset": 20070 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 533, "column": 3, "offset": 20030 },
                                    "end": { "line": 533, "column": 45, "offset": 20072 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 533, "column": 3, "offset": 20030 },
                            "end": { "line": 533, "column": 45, "offset": 20072 },
                            "indent": []
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "The Discrete Fourier Transform (DFT) converts a sequence of $N$\nequally spaced real or complex samples $x",
                                "position": {
                                    "start": { "line": 535, "column": 3, "offset": 20077 },
                                    "end": { "line": 536, "column": 44, "offset": 20184 },
                                    "indent": [3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "{0},x",
                                        "position": {
                                            "start": { "line": 536, "column": 45, "offset": 20185 },
                                            "end": { "line": 536, "column": 50, "offset": 20190 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 536, "column": 44, "offset": 20184 },
                                    "end": { "line": 536, "column": 51, "offset": 20191 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "{1},\\ldots, x",
                                "position": {
                                    "start": { "line": 536, "column": 51, "offset": 20191 },
                                    "end": { "line": 536, "column": 64, "offset": 20204 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "{N-1}$ of\na function $x(t)$ of time (or another variable, depending on the\napplication) into a sequence of $N$ complex numbers $X",
                                        "position": {
                                            "start": { "line": 536, "column": 65, "offset": 20205 },
                                            "end": { "line": 538, "column": 57, "offset": 20338 },
                                            "indent": [3, 3]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 536, "column": 64, "offset": 20204 },
                                    "end": { "line": 538, "column": 58, "offset": 20339 },
                                    "indent": [3, 3]
                                }
                            },
                            {
                                "type": "text",
                                "value": "{k}$ by the\nsummation",
                                "position": {
                                    "start": { "line": 538, "column": 58, "offset": 20339 },
                                    "end": { "line": 539, "column": 12, "offset": 20362 },
                                    "indent": [3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 535, "column": 3, "offset": 20077 },
                            "end": { "line": 539, "column": 12, "offset": 20362 },
                            "indent": [3, 3, 3, 3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "$$\nX",
                                "position": {
                                    "start": { "line": 541, "column": 3, "offset": 20367 },
                                    "end": { "line": 542, "column": 4, "offset": 20373 },
                                    "indent": [3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "{k}=\\sum",
                                        "position": {
                                            "start": { "line": 542, "column": 5, "offset": 20374 },
                                            "end": { "line": 542, "column": 13, "offset": 20382 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 542, "column": 4, "offset": 20373 },
                                    "end": { "line": 542, "column": 14, "offset": 20383 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "{n=0}^{N-1}x_{n}e^{-j2\\pi kn/N},",
                                "position": {
                                    "start": { "line": 542, "column": 14, "offset": 20383 },
                                    "end": { "line": 542, "column": 46, "offset": 20415 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": ";",
                                "position": {
                                    "start": { "line": 542, "column": 46, "offset": 20415 },
                                    "end": { "line": 542, "column": 48, "offset": 20417 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "k=0,1,\\ldots,\nN-1.\n$$",
                                "position": {
                                    "start": { "line": 542, "column": 48, "offset": 20417 },
                                    "end": { "line": 544, "column": 5, "offset": 20442 },
                                    "indent": [3, 3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 541, "column": 3, "offset": 20367 },
                            "end": { "line": 544, "column": 5, "offset": 20442 },
                            "indent": [3, 3, 3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "With the numbers $X",
                                "position": {
                                    "start": { "line": 546, "column": 3, "offset": 20447 },
                                    "end": { "line": 546, "column": 22, "offset": 20466 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "{k}$ known, the inverse DFT _exactly",
                                        "position": {
                                            "start": { "line": 546, "column": 23, "offset": 20467 },
                                            "end": { "line": 546, "column": 59, "offset": 20503 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 546, "column": 22, "offset": 20466 },
                                    "end": { "line": 546, "column": 60, "offset": 20504 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " recovers the\nsample values $x_{n}$ through the summation",
                                "position": {
                                    "start": { "line": 546, "column": 60, "offset": 20504 },
                                    "end": { "line": 547, "column": 46, "offset": 20563 },
                                    "indent": [3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 546, "column": 3, "offset": 20447 },
                            "end": { "line": 547, "column": 46, "offset": 20563 },
                            "indent": [3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "$$x",
                                "position": {
                                    "start": { "line": 549, "column": 3, "offset": 20568 },
                                    "end": { "line": 549, "column": 6, "offset": 20571 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "{n}=\\frac{1}{N}\\sum",
                                        "position": {
                                            "start": { "line": 549, "column": 7, "offset": 20572 },
                                            "end": { "line": 549, "column": 26, "offset": 20591 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 549, "column": 6, "offset": 20571 },
                                    "end": { "line": 549, "column": 27, "offset": 20592 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "{k=0}^{N-1}X_{k}e^{j2\\pi kn/N}.$$",
                                "position": {
                                    "start": { "line": 549, "column": 27, "offset": 20592 },
                                    "end": { "line": 549, "column": 60, "offset": 20625 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 549, "column": 3, "offset": 20568 },
                            "end": { "line": 549, "column": 60, "offset": 20625 },
                            "indent": []
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "Keeping in mind that $e^{j\\theta}=\\cos\\theta+j\\sin\\theta,$ the last\nequation shows that the DFT has decomposed the sequence $x",
                                "position": {
                                    "start": { "line": 551, "column": 3, "offset": 20630 },
                                    "end": { "line": 552, "column": 61, "offset": 20758 },
                                    "indent": [3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "{n}$ into a\ncomplex discrete Fourier series with coefficients $X",
                                        "position": {
                                            "start": { "line": 552, "column": 62, "offset": 20759 },
                                            "end": { "line": 553, "column": 55, "offset": 20825 },
                                            "indent": [3]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 552, "column": 61, "offset": 20758 },
                                    "end": { "line": 553, "column": 56, "offset": 20826 },
                                    "indent": [3]
                                }
                            },
                            {
                                "type": "text",
                                "value": "{k}$. Comparing\nthe DFT with a continuous complex Fourier series",
                                "position": {
                                    "start": { "line": 553, "column": 56, "offset": 20826 },
                                    "end": { "line": 554, "column": 51, "offset": 20892 },
                                    "indent": [3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 551, "column": 3, "offset": 20630 },
                            "end": { "line": 554, "column": 51, "offset": 20892 },
                            "indent": [3, 3, 3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "$$x(t)=\\sum",
                                "position": {
                                    "start": { "line": 556, "column": 3, "offset": 20897 },
                                    "end": { "line": 556, "column": 14, "offset": 20908 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "{n=-\\infty}^{\\infty}c",
                                        "position": {
                                            "start": { "line": 556, "column": 15, "offset": 20909 },
                                            "end": { "line": 556, "column": 36, "offset": 20930 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 556, "column": 14, "offset": 20908 },
                                    "end": { "line": 556, "column": 37, "offset": 20931 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "{n}e^{jn\\omega_{0}t},$$",
                                "position": {
                                    "start": { "line": 556, "column": 37, "offset": 20931 },
                                    "end": { "line": 556, "column": 60, "offset": 20954 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 556, "column": 3, "offset": 20897 },
                            "end": { "line": 556, "column": 60, "offset": 20954 },
                            "indent": []
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "the DFT is a ",
                                "position": {
                                    "start": { "line": 558, "column": 3, "offset": 20959 },
                                    "end": { "line": 558, "column": 16, "offset": 20972 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "finite",
                                        "position": {
                                            "start": { "line": 558, "column": 17, "offset": 20973 },
                                            "end": { "line": 558, "column": 23, "offset": 20979 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 558, "column": 16, "offset": 20972 },
                                    "end": { "line": 558, "column": 24, "offset": 20980 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " series with $N$ terms defined at the equally\nspaced discrete instances of the ",
                                "position": {
                                    "start": { "line": 558, "column": 24, "offset": 20980 },
                                    "end": { "line": 559, "column": 36, "offset": 21061 },
                                    "indent": [3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "angle",
                                        "position": {
                                            "start": { "line": 559, "column": 37, "offset": 21062 },
                                            "end": { "line": 559, "column": 42, "offset": 21067 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 559, "column": 36, "offset": 21061 },
                                    "end": { "line": 559, "column": 43, "offset": 21068 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " $(\\omega",
                                "position": {
                                    "start": { "line": 559, "column": 43, "offset": 21068 },
                                    "end": { "line": 559, "column": 52, "offset": 21077 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "{0}t",
                                        "position": {
                                            "start": { "line": 559, "column": 53, "offset": 21078 },
                                            "end": { "line": 559, "column": 57, "offset": 21082 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 559, "column": 52, "offset": 21077 },
                                    "end": { "line": 559, "column": 58, "offset": 21083 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "{n})=2\\pi\\frac{k}{N}$\nin the interval $[0,2\\pi)$,\ni.e. ",
                                "position": {
                                    "start": { "line": 559, "column": 58, "offset": 21083 },
                                    "end": { "line": 561, "column": 8, "offset": 21142 },
                                    "indent": [3, 3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "including",
                                        "position": {
                                            "start": { "line": 561, "column": 9, "offset": 21143 },
                                            "end": { "line": 561, "column": 18, "offset": 21152 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 561, "column": 8, "offset": 21142 },
                                    "end": { "line": 561, "column": 19, "offset": 21153 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " $0$ and ",
                                "position": {
                                    "start": { "line": 561, "column": 19, "offset": 21153 },
                                    "end": { "line": 561, "column": 28, "offset": 21162 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "excluding",
                                        "position": {
                                            "start": { "line": 561, "column": 29, "offset": 21163 },
                                            "end": { "line": 561, "column": 38, "offset": 21172 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 561, "column": 28, "offset": 21162 },
                                    "end": { "line": 561, "column": 39, "offset": 21173 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " $2\\pi$.\nThis automatically normalizes the DFT so that time does\nnot appear explicitly in the forward or inverse transform.",
                                "position": {
                                    "start": { "line": 561, "column": 39, "offset": 21173 },
                                    "end": { "line": 563, "column": 61, "offset": 21300 },
                                    "indent": [3, 3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 558, "column": 3, "offset": 20959 },
                            "end": { "line": 563, "column": 61, "offset": 21300 },
                            "indent": [3, 3, 3, 3, 3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "If the original function $x(t)$ is limited in frequency to less than\nhalf of the sampling frequency (the so-called ",
                                "position": {
                                    "start": { "line": 565, "column": 3, "offset": 21305 },
                                    "end": { "line": 566, "column": 49, "offset": 21422 },
                                    "indent": [3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Nyquist frequency",
                                        "position": {
                                            "start": { "line": 566, "column": 50, "offset": 21423 },
                                            "end": { "line": 566, "column": 67, "offset": 21440 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 566, "column": 49, "offset": 21422 },
                                    "end": { "line": 566, "column": 68, "offset": 21441 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "),\ninterpolation between sample values produced by the inverse DFT will\nusually give a faithful reconstruction of $x(t)$. If $x(t)$ is ",
                                "position": {
                                    "start": { "line": 566, "column": 68, "offset": 21441 },
                                    "end": { "line": 568, "column": 66, "offset": 21580 },
                                    "indent": [3, 3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "not",
                                        "position": {
                                            "start": { "line": 568, "column": 67, "offset": 21581 },
                                            "end": { "line": 568, "column": 70, "offset": 21584 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 568, "column": 66, "offset": 21580 },
                                    "end": { "line": 568, "column": 71, "offset": 21585 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "\nlimited as such, the inverse DFT can, in general, not be used to\nreconstruct $x(t)$ by interpolation. Note that this limit does not\nimply that there are ",
                                "position": {
                                    "start": { "line": 568, "column": 71, "offset": 21585 },
                                    "end": { "line": 571, "column": 24, "offset": 21745 },
                                    "indent": [3, 3, 3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "no",
                                        "position": {
                                            "start": { "line": 571, "column": 25, "offset": 21746 },
                                            "end": { "line": 571, "column": 27, "offset": 21748 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 571, "column": 24, "offset": 21745 },
                                    "end": { "line": 571, "column": 28, "offset": 21749 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " methods that can do such a\nreconstructionâ€”see, e.g., compressed sensing, or finite rate of\ninnovation sampling.",
                                "position": {
                                    "start": { "line": 571, "column": 28, "offset": 21749 },
                                    "end": { "line": 573, "column": 23, "offset": 21865 },
                                    "indent": [3, 3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 565, "column": 3, "offset": 21305 },
                            "end": { "line": 573, "column": 23, "offset": 21865 },
                            "indent": [3, 3, 3, 3, 3, 3, 3, 3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "The function $e^{j2\\pi k/N}=\\left(e^{j2\\pi/N}\\right)^{k}=w^{k}$ takes on\ndiscrete values between $0$ and $2\\pi\\frac{N-1}{N}$ on the unit circle in\nthe complex plane. The function $e^{j2\\pi kn/N}=w^{kn}$ encircles the\norigin $n\\frac{N-1}{N}$ times, thus generating harmonics of the fundamental\nsinusoid for which $n=1$.",
                                "position": {
                                    "start": { "line": 575, "column": 3, "offset": 21870 },
                                    "end": { "line": 579, "column": 28, "offset": 22196 },
                                    "indent": [3, 3, 3, 3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 575, "column": 3, "offset": 21870 },
                            "end": { "line": 579, "column": 28, "offset": 22196 },
                            "indent": [3, 3, 3, 3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "The way in which we defined the DFT leads to a few subtleties\nwhen $n>\\frac{N}{2}$, for even $N$ ",
                                "position": {
                                    "start": { "line": 581, "column": 3, "offset": 22201 },
                                    "end": { "line": 582, "column": 38, "offset": 22300 },
                                    "indent": [3]
                                }
                            },
                            {
                                "type": "footnoteReference",
                                "identifier": "odd_n",
                                "label": "odd_n",
                                "position": {
                                    "start": { "line": 582, "column": 38, "offset": 22300 },
                                    "end": { "line": 582, "column": 46, "offset": 22308 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": ". The function $e^{j2\\pi kn/N}$ is plotted\nfor increasing values of $k$ in the figure below,\nfor the cases $n=1$ to $n=N-1$ for $N=16$. When $k$ increases from $k$\nto $k+1$, the angle increases by $\\frac{2\\pi n}{N}$. When $n=1$,\nthe step is $\\frac{2\\pi}{N}$. When $n=N-1$, the angle\nincreases by $2\\pi\\frac{N-1}{N}=2\\pi-\\frac{2\\pi}{N}$. Since $2\\pi$\nis precisely once around the circle, the step equates to $-\\frac{2\\pi}{N}$,\ni.e. in the direction of a negative\nfrequency. The components up to $N/2$ represent ",
                                "position": {
                                    "start": { "line": 582, "column": 46, "offset": 22308 },
                                    "end": { "line": 590, "column": 51, "offset": 22834 },
                                    "indent": [3, 3, 3, 3, 3, 3, 3, 3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "positive",
                                        "position": {
                                            "start": { "line": 590, "column": 52, "offset": 22835 },
                                            "end": { "line": 590, "column": 60, "offset": 22843 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 590, "column": 51, "offset": 22834 },
                                    "end": { "line": 590, "column": 61, "offset": 22844 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " frequency\ncomponents, those above $N/2$ up to $N-1$ represent ",
                                "position": {
                                    "start": { "line": 590, "column": 61, "offset": 22844 },
                                    "end": { "line": 591, "column": 55, "offset": 22909 },
                                    "indent": [3]
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "negative",
                                        "position": {
                                            "start": { "line": 591, "column": 56, "offset": 22910 },
                                            "end": { "line": 591, "column": 64, "offset": 22918 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 591, "column": 55, "offset": 22909 },
                                    "end": { "line": 591, "column": 65, "offset": 22919 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": "\nfrequencies. The angle increment for the component $N/2$\nfor $N$ even advances precisely halfway around the circle for\neach increment in $k$ and can therefore be interpreted as either a\npositive or a negative frequency. This component of the DFT represents\nthe Nyquist Frequency, i.e. half of the sampling frequency, and is\nuseful to orientate oneself when looking at DFT graphics.",
                                "position": {
                                    "start": { "line": 591, "column": 65, "offset": 22919 },
                                    "end": { "line": 597, "column": 60, "offset": 23313 },
                                    "indent": [3, 3, 3, 3, 3, 3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 581, "column": 3, "offset": 22201 },
                            "end": { "line": 597, "column": 60, "offset": 23313 },
                            "indent": [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "The FFT in turn is simply a special and highly efficient algorithm for\ncalculating the DFT. Whereas a straightforward calculation of the DFT\ntakes of the order of $N^{2}$ calculations to compute, the FFT\nalgorithm requires of the order $N\\log N$ calculations. The FFT was\nthe key to the wide-spread use of the DFT in real-time applications\nand was included in a list of the top $10$ algorithms of the $20^{th}$\ncentury by the IEEE journal Computing in Science & Engineering in the\nyear $2000$.",
                                "position": {
                                    "start": { "line": 599, "column": 3, "offset": 23318 },
                                    "end": { "line": 606, "column": 15, "offset": 23825 },
                                    "indent": [3, 3, 3, 3, 3, 3, 3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 599, "column": 3, "offset": 23318 },
                            "end": { "line": 606, "column": 15, "offset": 23825 },
                            "indent": [3, 3, 3, 3, 3, 3, 3]
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "../figures/unit_circle_samples.png",
                                "alt": "Unit circle samples",
                                "position": {
                                    "start": { "line": 608, "column": 3, "offset": 23830 },
                                    "end": { "line": 608, "column": 61, "offset": 23888 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 608, "column": 3, "offset": 23830 },
                            "end": { "line": 608, "column": 61, "offset": 23888 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 533, "column": 1, "offset": 20028 },
                    "end": { "line": 608, "column": 61, "offset": 23888 },
                    "indent": [
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                    ]
                }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "odd_n",
                "label": "odd_n",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "We leave it as an exercise for the reader to picture the\nsituation for $N$ odd. In this chapter, all examples use\neven-order DFTs.",
                                "position": {
                                    "start": { "line": 611, "column": 5, "offset": 23904 },
                                    "end": { "line": 613, "column": 21, "offset": 24042 },
                                    "indent": [5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 611, "column": 5, "offset": 23904 },
                            "end": { "line": 613, "column": 21, "offset": 24042 },
                            "indent": [5, 5]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 610, "column": 1, "offset": 23890 },
                    "end": { "line": 613, "column": 25, "offset": 24046 },
                    "indent": [5, 5, 5]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Let's examine the frequency components in a noisy image. Note that,\nwhile a static image has no time-varying component, its values do vary\nacross ",
                        "position": {
                            "start": { "line": 615, "column": 1, "offset": 24044 },
                            "end": { "line": 617, "column": 8, "offset": 24190 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "space",
                                "position": {
                                    "start": { "line": 617, "column": 9, "offset": 24191 },
                                    "end": { "line": 617, "column": 14, "offset": 24196 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 617, "column": 8, "offset": 24190 },
                            "end": { "line": 617, "column": 15, "offset": 24197 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". The DFT applies equally to either case.",
                        "position": {
                            "start": { "line": 617, "column": 15, "offset": 24197 },
                            "end": { "line": 617, "column": 56, "offset": 24238 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 615, "column": 1, "offset": 24044 }, "end": { "line": 617, "column": 56, "offset": 24238 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "First, load and display the image:",
                        "position": {
                            "start": { "line": 619, "column": 1, "offset": 24240 },
                            "end": { "line": 619, "column": 35, "offset": 24274 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 619, "column": 1, "offset": 24240 }, "end": { "line": 619, "column": 35, "offset": 24274 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from skimage import io\nimage = io.imread('images/moonlanding.png')\nM, N = image.shape\n\nf, ax = plt.subplots(figsize=(4.8, 4.8))\nax.imshow(image)\n\nprint((M, N), image.dtype)",
                "position": {
                    "start": { "line": 621, "column": 1, "offset": 24276 },
                    "end": { "line": 630, "column": 4, "offset": 24462 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"A noisy image of the moon landing\" -->",
                "position": { "start": { "line": 632, "column": 1, "offset": 24464 }, "end": { "line": 632, "column": 58, "offset": 24521 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Do not adjust your monitor! The image you are seeing is real,\nalthough clearly distorted by either the measurement or transmission\nequipment.",
                        "position": {
                            "start": { "line": 634, "column": 1, "offset": 24523 },
                            "end": { "line": 636, "column": 11, "offset": 24664 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 634, "column": 1, "offset": 24523 }, "end": { "line": 636, "column": 11, "offset": 24664 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "To examine the spectrum of the image, we use ",
                        "position": {
                            "start": { "line": 638, "column": 1, "offset": 24666 },
                            "end": { "line": 638, "column": 46, "offset": 24711 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "fftn",
                        "position": {
                            "start": { "line": 638, "column": 46, "offset": 24711 },
                            "end": { "line": 638, "column": 52, "offset": 24717 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " (instead of ",
                        "position": {
                            "start": { "line": 638, "column": 52, "offset": 24717 },
                            "end": { "line": 638, "column": 65, "offset": 24730 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "fft",
                        "position": {
                            "start": { "line": 638, "column": 65, "offset": 24730 },
                            "end": { "line": 638, "column": 70, "offset": 24735 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ")\nto compute the DFT, since it has more than one dimension. The\ntwo-dimensional FFT is equivalent to taking the 1-D FFT across rows\nand then across columns (or vice versa).",
                        "position": {
                            "start": { "line": 638, "column": 70, "offset": 24735 },
                            "end": { "line": 641, "column": 41, "offset": 24907 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 638, "column": 1, "offset": 24666 },
                    "end": { "line": 641, "column": 41, "offset": 24907 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "F = fftpack.fftn(image)\n\nF_magnitude = np.abs(F)\nF_magnitude = fftpack.fftshift(F_magnitude)",
                "position": {
                    "start": { "line": 643, "column": 1, "offset": 24909 },
                    "end": { "line": 649, "column": 4, "offset": 25016 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Again, we take the log of the spectrum to compress the range of\nvalues, before displaying:",
                        "position": {
                            "start": { "line": 651, "column": 1, "offset": 25018 },
                            "end": { "line": 652, "column": 27, "offset": 25108 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 651, "column": 1, "offset": 25018 }, "end": { "line": 652, "column": 27, "offset": 25108 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "f, ax = plt.subplots(figsize=(4.8, 4.8))\n\nax.imshow(np.log(1 + F_magnitude), cmap='viridis',\n          extent=(-N // 2, N // 2, -M // 2, M // 2))\nax.set_title('Spectrum magnitude');",
                "position": {
                    "start": { "line": 654, "column": 1, "offset": 25110 },
                    "end": { "line": 660, "column": 4, "offset": 25305 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Spectrum of the noisy moon landing image (magnitude)\" -->",
                "position": { "start": { "line": 662, "column": 1, "offset": 25307 }, "end": { "line": 662, "column": 77, "offset": 25383 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Note the high values around the origin (middle) of the spectrumâ€”these\ncoefficients describe the low frequencies or smooth parts of the\nimage; a vague canvas of the photo. Higher frequency components,\nspread throughout the spectrum, fill in the edges and detail. Peaks\naround higher frequencies correspond to the periodic noise.",
                        "position": {
                            "start": { "line": 664, "column": 1, "offset": 25385 },
                            "end": { "line": 668, "column": 60, "offset": 25712 },
                            "indent": [1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 664, "column": 1, "offset": 25385 },
                    "end": { "line": 668, "column": 60, "offset": 25712 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "From the photo, we can see that the noise (measurement artifacts) is\nhighly periodic, so we hope to remove it by zeroing out the\ncorresponding parts of the spectrum.",
                        "position": {
                            "start": { "line": 670, "column": 1, "offset": 25714 },
                            "end": { "line": 672, "column": 37, "offset": 25879 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 670, "column": 1, "offset": 25714 }, "end": { "line": 672, "column": 37, "offset": 25879 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The image with those peaks suppressed indeed looks quite different!",
                        "position": {
                            "start": { "line": 674, "column": 1, "offset": 25881 },
                            "end": { "line": 674, "column": 68, "offset": 25948 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 674, "column": 1, "offset": 25881 }, "end": { "line": 674, "column": 68, "offset": 25948 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "# Set block around center of spectrum to zero\nK = 40\nF_magnitude[M // 2 - K: M // 2 + K, N // 2 - K: N // 2 + K] = 0\n\n# Find all peaks higher than the 98th percentile\npeaks = F_magnitude < np.percentile(F_magnitude, 98)\n\n# Shift the peaks back to align with the original spectrum\npeaks = fftpack.ifftshift(peaks)\n\n# Make a copy of the original (complex) spectrum\nF_dim = F.copy()\n\n# Set those peak coefficients to zero\nF_dim = F_dim * peaks.astype(int)\n\n# Do the inverse Fourier transform to get back to an image\n# Since we started with a real image, we only look at the real part of\n# the output.\nimage_filtered = np.real(fftpack.ifft2(F_dim))\n\nf, (ax0, ax1) = plt.subplots(2, 1, figsize=(4.8, 7))\nax0.imshow(fftpack.fftshift(np.log10(1 + np.abs(F_dim))), cmap='viridis')\nax0.set_title('Spectrum after suppression')\n\nax1.imshow(image_filtered)\nax1.set_title('Reconstructed image');",
                "position": {
                    "start": { "line": 676, "column": 1, "offset": 25950 },
                    "end": { "line": 704, "column": 4, "offset": 26846 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Filtered moon landing image and its spectrum\" -->",
                "position": { "start": { "line": 706, "column": 1, "offset": 26848 }, "end": { "line": 706, "column": 69, "offset": 26916 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Windowing",
                        "position": {
                            "start": { "line": 708, "column": 5, "offset": 26922 },
                            "end": { "line": 708, "column": 14, "offset": 26931 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 708, "column": 1, "offset": 26918 }, "end": { "line": 708, "column": 14, "offset": 26931 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "If we examine the Fourier transform of a rectangular pulse, we see\nsignificant sidelobes in the spectrum:",
                        "position": {
                            "start": { "line": 710, "column": 1, "offset": 26933 },
                            "end": { "line": 711, "column": 39, "offset": 27038 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 710, "column": 1, "offset": 26933 }, "end": { "line": 711, "column": 39, "offset": 27038 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "x = np.zeros(500)\nx[100:150] = 1\n\nX = fftpack.fft(x)\n\nf, (ax0, ax1) = plt.subplots(2, 1, sharex=True)\n\nax0.plot(x)\nax0.set_ylim(-0.1, 1.1)\n\nax1.plot(fftpack.fftshift(np.abs(X)))\nax1.set_ylim(-5, 55);",
                "position": {
                    "start": { "line": 713, "column": 1, "offset": 27040 },
                    "end": { "line": 726, "column": 4, "offset": 27253 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Spectrum of a rectangular pulse (magnitude)\" -->",
                "position": { "start": { "line": 728, "column": 1, "offset": 27255 }, "end": { "line": 728, "column": 68, "offset": 27322 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "In theory, you would need a combination of infinitely many sinusoids\n(frequencies) to represent any abrupt transition; the coefficients would\ntypically have the same sidelobe structure as seen here for the pulse.",
                        "position": {
                            "start": { "line": 730, "column": 1, "offset": 27324 },
                            "end": { "line": 732, "column": 71, "offset": 27536 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 730, "column": 1, "offset": 27324 }, "end": { "line": 732, "column": 71, "offset": 27536 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Importantly, the discrete Fourier transform assumes that the input\nsignal is periodic. If the signal is not, the assumption is simply\nthat, right at the end of the signal, it jumps back to its beginning\nvalue. Consider the function, $x(t)$, shown here:",
                        "position": {
                            "start": { "line": 734, "column": 1, "offset": 27538 },
                            "end": { "line": 737, "column": 50, "offset": 27790 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 734, "column": 1, "offset": 27538 },
                    "end": { "line": 737, "column": 50, "offset": 27790 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<img src=\"../figures/periodic.png\"/>\n<!-- caption text=\"Eight samples have been taken of a given\n function with effective length $T_{eff}$.  With the discrete Fourier\n transform assuming periodicity, it creates a step discontinuity\n between the first and last samples.\" -->",
                "position": {
                    "start": { "line": 739, "column": 1, "offset": 27792 },
                    "end": { "line": 743, "column": 42, "offset": 28065 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We only measure the signal for a short time, labeled $T_{eff}$. The\nFourier transform assumes that $x(8) = x(0)$, and that the signal is\ncontinued as the dashed, rather than the solid line. This introduces\na big jump at the edge, with the expected oscillation in the spectrum:",
                        "position": {
                            "start": { "line": 745, "column": 1, "offset": 28067 },
                            "end": { "line": 748, "column": 71, "offset": 28343 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 745, "column": 1, "offset": 28067 },
                    "end": { "line": 748, "column": 71, "offset": 28343 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "t = np.linspace(0, 1, 500)\nx = np.sin(49 * np.pi * t)\n\nX = fftpack.fft(x)\n\nf, (ax0, ax1) = plt.subplots(2, 1)\n\nax0.plot(x)\nax0.set_ylim(-1.1, 1.1)\n\nax1.plot(fftpack.fftfreq(len(t)), np.abs(X))\nax1.set_ylim(0, 190);",
                "position": {
                    "start": { "line": 750, "column": 1, "offset": 28345 },
                    "end": { "line": 763, "column": 4, "offset": 28573 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Spectrum oscillation due to signal edge discontinuity\" -->",
                "position": { "start": { "line": 765, "column": 1, "offset": 28575 }, "end": { "line": 765, "column": 78, "offset": 28652 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Instead of the expected two lines, the peaks are spread out in the\nspectrum.",
                        "position": {
                            "start": { "line": 767, "column": 1, "offset": 28654 },
                            "end": { "line": 768, "column": 10, "offset": 28730 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 767, "column": 1, "offset": 28654 }, "end": { "line": 768, "column": 10, "offset": 28730 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We can counter this effect by a process called ",
                        "position": {
                            "start": { "line": 770, "column": 1, "offset": 28732 },
                            "end": { "line": 770, "column": 48, "offset": 28779 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "windowing",
                                "position": {
                                    "start": { "line": 770, "column": 49, "offset": 28780 },
                                    "end": { "line": 770, "column": 58, "offset": 28789 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 770, "column": 48, "offset": 28779 },
                            "end": { "line": 770, "column": 59, "offset": 28790 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". The\noriginal function is multiplied with a window function such as the\nKaiser window $K(N,\\beta)$. Here we visualize it for $\\beta$ ranging\nfrom 0 to 100:",
                        "position": {
                            "start": { "line": 770, "column": 59, "offset": 28790 },
                            "end": { "line": 773, "column": 15, "offset": 28946 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 770, "column": 1, "offset": 28732 },
                    "end": { "line": 773, "column": 15, "offset": 28946 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "f, ax = plt.subplots()\n\nN = 10\nbeta_max = 5\ncolormap = plt.cm.plasma\n\nnorm = plt.Normalize(vmin=0, vmax=beta_max)\n\nlines = [\n    ax.plot(np.kaiser(100, beta), color=colormap(norm(beta)))\n    for beta in np.linspace(0, beta_max, N)\n    ]\n\nsm = plt.cm.ScalarMappable(cmap=colormap, norm=norm)\n\nsm._A = []\n\nplt.colorbar(sm).set_label(r'Kaiser $\\beta$');",
                "position": {
                    "start": { "line": 775, "column": 1, "offset": 28948 },
                    "end": { "line": 794, "column": 4, "offset": 29312 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"The Kaiser window for various values of $\\beta$\" -->",
                "position": { "start": { "line": 796, "column": 1, "offset": 29314 }, "end": { "line": 796, "column": 72, "offset": 29385 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "By changing the parameter $\\beta$, the shape of the window can be\nchanged from rectangular ($\\beta=0$, no windowing) to a window that\nproduces signals that smoothly increase from zero and decrease to zero\nat the endpoints of the sampled interval, producing very low side\nlobes ($\\beta$ typically between 5 and 10) ",
                        "position": {
                            "start": { "line": 798, "column": 1, "offset": 29387 },
                            "end": { "line": 802, "column": 44, "offset": 29701 },
                            "indent": [1, 1, 1, 1]
                        }
                    },
                    {
                        "type": "footnoteReference",
                        "identifier": "choosing_a_window",
                        "label": "choosing_a_window",
                        "position": {
                            "start": { "line": 802, "column": 44, "offset": 29701 },
                            "end": { "line": 802, "column": 64, "offset": 29721 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 802, "column": 64, "offset": 29721 },
                            "end": { "line": 802, "column": 65, "offset": 29722 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 798, "column": 1, "offset": 29387 },
                    "end": { "line": 802, "column": 65, "offset": 29722 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "footnoteDefinition",
                "identifier": "choosing_a_window",
                "label": "choosing_a_window",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "The classical windowing functions include Hann,\nHamming, and Blackman. They differ in their\nsidelobe levels and in the broadening of the\nmain lobe (in the Fourier domain). A modern and\nflexible window function that is close to\noptimal for most applications is the Kaiser\nwindowâ€”a good approximation to the optimal\nprolate spheroid window, which concentrates the\nmost energy into the main lobe. The Kaiser\nwindow can be tuned to suit the particular\napplication, as illustrated in the main text, by\nadjusting the parameter $\\beta$.",
                                "position": {
                                    "start": { "line": 805, "column": 5, "offset": 29750 },
                                    "end": { "line": 816, "column": 37, "offset": 30323 },
                                    "indent": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 805, "column": 5, "offset": 29750 },
                            "end": { "line": 816, "column": 37, "offset": 30323 },
                            "indent": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 804, "column": 1, "offset": 29724 },
                    "end": { "line": 816, "column": 41, "offset": 30327 },
                    "indent": [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
                }
            },
            {
                "type": "html",
                "value": "<!--\n*For online notebook, use something like:*\n\n#```\n# @interact(beta=(0, 20.))\n# def window(beta):\n#    x = np.kaiser(1000, beta)\n#    f, axes = plt.subplots(1, 2, figsize=(4.8, 2.4))\n#    axes[0].plot(x)\n#    axes[1].plot(fftpack.fftshift(np.abs(np.fft.fft(x, 10000))))\n#    axes[1].set_xlim(2*2480, 2*2520)\n#    plt.show()\n#```\n-->",
                "position": {
                    "start": { "line": 818, "column": 1, "offset": 30325 },
                    "end": { "line": 831, "column": 4, "offset": 30660 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The effect of windowing our previous example is noticeable:",
                        "position": {
                            "start": { "line": 833, "column": 1, "offset": 30662 },
                            "end": { "line": 833, "column": 60, "offset": 30721 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 833, "column": 1, "offset": 30662 }, "end": { "line": 833, "column": 60, "offset": 30721 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "win = np.kaiser(len(t), 5)\nx_win = x * win\n\nX_win = fftpack.fft(x_win)\n\nf, (ax0, ax1) = plt.subplots(2, 1)\n\nax0.plot(x_win)\nax0.set_ylim(-1.1, 1.1)\n\nax1.plot(fftpack.fftfreq(len(t)), np.abs(X_win))\nax1.set_ylim(0, 190);",
                "position": {
                    "start": { "line": 835, "column": 1, "offset": 30723 },
                    "end": { "line": 848, "column": 4, "offset": 30956 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Spectrum of a windowed signal (magnitude)\" -->",
                "position": { "start": { "line": 850, "column": 1, "offset": 30958 }, "end": { "line": 850, "column": 66, "offset": 31023 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "Real-world Application: Analyzing Radar Data",
                        "position": {
                            "start": { "line": 852, "column": 4, "offset": 31028 },
                            "end": { "line": 852, "column": 48, "offset": 31072 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 852, "column": 1, "offset": 31025 }, "end": { "line": 852, "column": 48, "offset": 31072 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Linearly modulated FMCW (Frequency-Modulated Continuous-Wave) radars\nmake extensive use of the FFT algorithm for signal processing and\nprovide examples of various applications of the FFT. We will use actual\ndata from an FMCW radar to demonstrate one such an application: target\ndetection.",
                        "position": {
                            "start": { "line": 854, "column": 1, "offset": 31074 },
                            "end": { "line": 858, "column": 11, "offset": 31362 },
                            "indent": [1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 854, "column": 1, "offset": 31074 },
                    "end": { "line": 858, "column": 11, "offset": 31362 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Roughly, an FMCW radar works like this (see box \"A\nsimple FMCW radar system\" for more detail):",
                        "position": {
                            "start": { "line": 860, "column": 1, "offset": 31364 },
                            "end": { "line": 861, "column": 44, "offset": 31458 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 860, "column": 1, "offset": 31364 }, "end": { "line": 861, "column": 44, "offset": 31458 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "A signal with changing frequency is generated. This signal is\ntransmitted by an antenna, after which it travels outwards, away from the\nradar. When it hits an object, part of the signal is reflected back\nto the radar, where it is received, multiplied by a copy of the\ntransmitted signal, and sampled, turning it into\nnumbers that are packed into an array. Our challenge is to interpret\nthose numbers to form meaningful results.",
                        "position": {
                            "start": { "line": 863, "column": 1, "offset": 31460 },
                            "end": { "line": 869, "column": 42, "offset": 31887 },
                            "indent": [1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 863, "column": 1, "offset": 31460 },
                    "end": { "line": 869, "column": 42, "offset": 31887 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The multiplication step above is important. From school, recall the\ntrigonometric identity:",
                        "position": {
                            "start": { "line": 871, "column": 1, "offset": 31889 },
                            "end": { "line": 872, "column": 24, "offset": 31980 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 871, "column": 1, "offset": 31889 }, "end": { "line": 872, "column": 24, "offset": 31980 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "$\n\\sin(xt) \\sin(yt) = \\frac{1}{2}\n\\left",
                        "position": {
                            "start": { "line": 874, "column": 1, "offset": 31982 },
                            "end": { "line": 876, "column": 6, "offset": 32021 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "linkReference",
                        "identifier": " \\sin \\left( (x - y)t + \\frac{\\pi}{2} \\right) - \\sin \\left( (x + y)t + \\frac{\\pi}{2} \\right) \\right",
                        "label": " \\sin \\left( (x - y)t + \\frac{\\pi}{2} \\right) - \\sin \\left( (x + y)t + \\frac{\\pi}{2} \\right) \\right",
                        "referenceType": "shortcut",
                        "children": [
                            {
                                "type": "text",
                                "value": " \\sin \\left( (x - y)t + \\frac{\\pi}{2} \\right) - \\sin \\left( (x + y)t + \\frac{\\pi}{2} \\right) \\right",
                                "position": {
                                    "start": { "line": 876, "column": 7, "offset": 32022 },
                                    "end": { "line": 876, "column": 106, "offset": 32121 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 876, "column": 6, "offset": 32021 },
                            "end": { "line": 876, "column": 107, "offset": 32122 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n$",
                        "position": {
                            "start": { "line": 876, "column": 107, "offset": 32122 },
                            "end": { "line": 877, "column": 2, "offset": 32124 },
                            "indent": [1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 874, "column": 1, "offset": 31982 },
                    "end": { "line": 877, "column": 2, "offset": 32124 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Thus, if we multiply the received signal by the transmitted signal, we\nexpect two frequency components to appear in the spectrum: one that is\nthe difference in frequencies between the received and transmitted\nsignal, and one that is the sum of their frequencies.",
                        "position": {
                            "start": { "line": 879, "column": 1, "offset": 32126 },
                            "end": { "line": 882, "column": 54, "offset": 32388 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 879, "column": 1, "offset": 32126 },
                    "end": { "line": 882, "column": 54, "offset": 32388 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We are particularly interested in the first, since that gives us some\nindication of how long it took the signal to reflect back to the radar\n(in other words, how far away the object is from us!). We discard the\nother by applying a low-pass filter to the signal (i.e., a filter that\ndiscards any high frequencies).",
                        "position": {
                            "start": { "line": 884, "column": 1, "offset": 32390 },
                            "end": { "line": 888, "column": 32, "offset": 32703 },
                            "indent": [1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 884, "column": 1, "offset": 32390 },
                    "end": { "line": 888, "column": 32, "offset": 32703 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "blockquote",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "strong",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "A simple FMCW radar system",
                                        "position": {
                                            "start": { "line": 890, "column": 5, "offset": 32709 },
                                            "end": { "line": 890, "column": 31, "offset": 32735 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 890, "column": 3, "offset": 32707 },
                                    "end": { "line": 890, "column": 33, "offset": 32737 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " {.callout}",
                                "position": {
                                    "start": { "line": 890, "column": 33, "offset": 32737 },
                                    "end": { "line": 890, "column": 44, "offset": 32748 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 890, "column": 3, "offset": 32707 },
                            "end": { "line": 890, "column": 44, "offset": 32748 },
                            "indent": []
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "../figures/FMCW_Block.png",
                                "alt": "The block diagram of a simple FMCW radar system",
                                "position": {
                                    "start": { "line": 892, "column": 3, "offset": 32753 },
                                    "end": { "line": 892, "column": 80, "offset": 32830 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 892, "column": 3, "offset": 32753 },
                            "end": { "line": 892, "column": 80, "offset": 32830 },
                            "indent": []
                        }
                    },
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "A block diagram of a simple FMCW radar that uses separate\ntransmit and receive antennas is shown above. The radar consists of a waveform generator\nthat generates a sinusoidal signal of which the frequency varies\nlinearly around the required transmit frequency. The generated signal\nis amplified to the required power level by the transmit amplifier\nand routed to the transmit antenna via a coupler circuit where a copy\nof the transmit signal is tapped off. The transmit antenna radiates\nthe transmit signal as an electromagnetic wave in a narrow beam\ntowards the target to be detected. When the wave encounters an object\nthat reflects electromagnetic waves, a fraction of of the energy\nirradiating the target is reflected back to the receiver as a second\nelectromagnetic wave that propagates in the direction of the radar\nsystem. When this wave encounters the receive antenna, the antenna\ncollects the energy in the wave energy impinging on it and converts\nit to a fluctuating voltage that is fed to the mixer. The mixer\nmultiplies the received signal with a replica of the transmit signal\nand produces a sinusoidal signal with a frequency equal to the\ndifference in frequency between the transmitted and received\nsignals. The low-pass filter ensures that the received signal is band\nlimited (i.e., does not contain frequencies that we don't care about)\nand the receive amplifier strengthens the signal to a suitable\namplitude for the analog to digital converter (ADC) that feeds data\nto the computer.",
                                "position": {
                                    "start": { "line": 894, "column": 3, "offset": 32835 },
                                    "end": { "line": 916, "column": 19, "offset": 34380 },
                                    "indent": [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 894, "column": 3, "offset": 32835 },
                            "end": { "line": 916, "column": 19, "offset": 34380 },
                            "indent": [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 890, "column": 1, "offset": 32705 },
                    "end": { "line": 916, "column": 19, "offset": 34380 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "To summarize, we should note that:",
                        "position": {
                            "start": { "line": 918, "column": 1, "offset": 34382 },
                            "end": { "line": 918, "column": 35, "offset": 34416 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 918, "column": 1, "offset": 34382 }, "end": { "line": 918, "column": 35, "offset": 34416 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "The data that reaches the computer consists of $N$ samples sampled\n(from the multiplied, filtered signal) at a sample frequency of\n$f_{s}$.",
                                        "position": {
                                            "start": { "line": 920, "column": 5, "offset": 34422 },
                                            "end": { "line": 922, "column": 13, "offset": 34569 },
                                            "indent": [5, 5]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 920, "column": 5, "offset": 34422 },
                                    "end": { "line": 922, "column": 13, "offset": 34569 },
                                    "indent": [5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 920, "column": 1, "offset": 34418 },
                            "end": { "line": 922, "column": 13, "offset": 34569 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "The ",
                                        "position": {
                                            "start": { "line": 923, "column": 5, "offset": 34574 },
                                            "end": { "line": 923, "column": 9, "offset": 34578 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "amplitude",
                                                "position": {
                                                    "start": { "line": 923, "column": 11, "offset": 34580 },
                                                    "end": { "line": 923, "column": 20, "offset": 34589 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 923, "column": 9, "offset": 34578 },
                                            "end": { "line": 923, "column": 22, "offset": 34591 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " of the returned signal varies depending on the\n",
                                        "position": {
                                            "start": { "line": 923, "column": 22, "offset": 34591 },
                                            "end": { "line": 924, "column": 5, "offset": 34643 },
                                            "indent": [5]
                                        }
                                    },
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "strength of the reflection",
                                                "position": {
                                                    "start": { "line": 924, "column": 7, "offset": 34645 },
                                                    "end": { "line": 924, "column": 33, "offset": 34671 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 924, "column": 5, "offset": 34643 },
                                            "end": { "line": 924, "column": 35, "offset": 34673 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " (i.e., is a property of the target\nobject and the distance between the target and the radar).",
                                        "position": {
                                            "start": { "line": 924, "column": 35, "offset": 34673 },
                                            "end": { "line": 925, "column": 63, "offset": 34771 },
                                            "indent": [5]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 923, "column": 5, "offset": 34574 },
                                    "end": { "line": 925, "column": 63, "offset": 34771 },
                                    "indent": [5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 923, "column": 1, "offset": 34570 },
                            "end": { "line": 925, "column": 63, "offset": 34771 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "The ",
                                        "position": {
                                            "start": { "line": 926, "column": 5, "offset": 34776 },
                                            "end": { "line": 926, "column": 9, "offset": 34780 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "frequency measured",
                                                "position": {
                                                    "start": { "line": 926, "column": 11, "offset": 34782 },
                                                    "end": { "line": 926, "column": 29, "offset": 34800 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 926, "column": 9, "offset": 34780 },
                                            "end": { "line": 926, "column": 31, "offset": 34802 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " is an indication of the ",
                                        "position": {
                                            "start": { "line": 926, "column": 31, "offset": 34802 },
                                            "end": { "line": 926, "column": 56, "offset": 34827 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "distance",
                                                "position": {
                                                    "start": { "line": 926, "column": 58, "offset": 34829 },
                                                    "end": { "line": 926, "column": 66, "offset": 34837 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 926, "column": 56, "offset": 34827 },
                                            "end": { "line": 926, "column": 68, "offset": 34839 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " of the\ntarget object from the radar.",
                                        "position": {
                                            "start": { "line": 926, "column": 68, "offset": 34839 },
                                            "end": { "line": 927, "column": 34, "offset": 34880 },
                                            "indent": [5]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 926, "column": 5, "offset": 34776 },
                                    "end": { "line": 927, "column": 34, "offset": 34880 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 926, "column": 1, "offset": 34772 },
                            "end": { "line": 927, "column": 34, "offset": 34880 },
                            "indent": [1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 920, "column": 1, "offset": 34418 },
                    "end": { "line": 927, "column": 34, "offset": 34880 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!--\n\n### Signal properties in the time domain\n\nThe transmit signal is a sinusoidal signal with an instantaneous\nfrequency that increases linearly with time, as shown in\nFig. [fig:FMCW waveform](a).\n\nStarting at $f_{min}$, the frequency increases at a rate $S$ Hz/s to $f_{max}.$\nThe frequency is then decreased rapidly back to $f_{min}$\nafter which a next frequency sweep occurs.\n\nThis signal is radiated by a directional transmit antenna. When the\nwave with propagation velocity $v\\approx300\\times10^{6}$ m/s (the\npropagation speed of electromagnetic waves in air is ever-so-slightly\nslower than the speed of light in a vacuum) hits a target at a range $R$,\nthe echo will reach the radar after a time\n\n$$t_{d}=\\frac{2R}{v}.$$\n\nHere it is collected by the receive antenna and converted to a\nsinusoidally fluctuating voltage. The received signal is a replica of\nthe transmitted signal, delayed by the transit time $t_{d}$ and is\nshown dashed in Fig. [fig:FMCW waveform](b).\n\nA radar is designed to detect targets up to a maximum range $R_{max}$.\nEchoes from maximum range reach the radar after a transit\ntime $t_{dm}$ as shown in Fig. [fig:FMCW waveform](c).\n\nWe note that there is a constant difference in frequency between the\ntransmitted and received signals and this will be true for all targets\nafter time $t_{s}$ until $t_{e}$. We conclude from\nFig. [fig:FMCW waveform] that the frequency difference is given by\n\n$$f_{d}=S\\times t_{d}=\\frac{2SR}{v},$$\n\nwhere $T_{eff}=t_{e}-t_{s}=\\frac{N}{f_{s}}$ is the effective sweep duration\nof the radar. The frequency excursion of the sweep during $T_{eff}$ is\nthe effective bandwidth of the radar, given by\n\n$$B_{eff}=f_{max}-f_{1}=ST_{eff}.$$\n\nWe will see that the range resolution of the radar is determined by\nthe effective bandwidth.\n\n\nReturning to Fig. [fig: block-diagram], the signal produced by the\nreceiver at the input to the Analog to Digital Converter (ADC) when\nthere is a single target is a sinusoid with constant amplitude,\nproportional to the amplitude of the echo, and constant frequency,\nproportional to the range to the target.\n\n-->",
                "position": {
                    "start": { "line": 929, "column": 1, "offset": 34882 },
                    "end": { "line": 981, "column": 4, "offset": 36979 },
                    "indent": [
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                        1, 1, 1, 1, 1, 1, 1
                    ]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "../figures/FMCW_waveform.png",
                        "alt": "The frequency relationships in an FMCW radar with\n linear frequency modulation",
                        "position": {
                            "start": { "line": 983, "column": 1, "offset": 36981 },
                            "end": { "line": 984, "column": 60, "offset": 37092 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 983, "column": 1, "offset": 36981 }, "end": { "line": 984, "column": 60, "offset": 37092 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "To start off, we'll generate some synthetic signals, after which we'll\nturn our focus to the output of an actual radar.",
                        "position": {
                            "start": { "line": 986, "column": 1, "offset": 37094 },
                            "end": { "line": 987, "column": 49, "offset": 37213 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 986, "column": 1, "offset": 37094 }, "end": { "line": 987, "column": 49, "offset": 37213 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Recall that the radar is increasing its frequency as it transmits at a\nrate of $S$ Hz/s. After a certain amount of time, $t$, has passed,\nthe frequency will now be $t S$ higher. In that same time span, the\nradar signal has traveled $d = t / v$ meters, where $v$ is the speed of\nthe transmitted wave through air (roughly the same as the speed of\nlight, $3 \\times 10^8$ m/s).",
                        "position": {
                            "start": { "line": 989, "column": 1, "offset": 37215 },
                            "end": { "line": 994, "column": 29, "offset": 37588 },
                            "indent": [1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 989, "column": 1, "offset": 37215 },
                    "end": { "line": 994, "column": 29, "offset": 37588 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Combining the above observations, we can calculate the amount of time\nit would take the signal to travel to, bounce off, and return from a\ntarget that is distance $R$ away:",
                        "position": {
                            "start": { "line": 996, "column": 1, "offset": 37590 },
                            "end": { "line": 998, "column": 34, "offset": 37762 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": { "start": { "line": 996, "column": 1, "offset": 37590 }, "end": { "line": 998, "column": 34, "offset": 37762 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "$$ t_R = 2R / v $$",
                        "position": {
                            "start": { "line": 1000, "column": 1, "offset": 37764 },
                            "end": { "line": 1000, "column": 19, "offset": 37782 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1000, "column": 1, "offset": 37764 }, "end": { "line": 1000, "column": 19, "offset": 37782 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Therefore, the change in frequency for a target at range $R$ will be:",
                        "position": {
                            "start": { "line": 1002, "column": 1, "offset": 37784 },
                            "end": { "line": 1002, "column": 70, "offset": 37853 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1002, "column": 1, "offset": 37784 }, "end": { "line": 1002, "column": 70, "offset": 37853 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "$$ f",
                        "position": {
                            "start": { "line": 1004, "column": 1, "offset": 37855 },
                            "end": { "line": 1004, "column": 5, "offset": 37859 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "_",
                        "position": {
                            "start": { "line": 1004, "column": 5, "offset": 37859 },
                            "end": { "line": 1004, "column": 7, "offset": 37861 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "{d}= t_R S = \\frac{2RS}{v}$$",
                        "position": {
                            "start": { "line": 1004, "column": 7, "offset": 37861 },
                            "end": { "line": 1004, "column": 35, "offset": 37889 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1004, "column": 1, "offset": 37855 }, "end": { "line": 1004, "column": 35, "offset": 37889 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "pi = np.pi\n\n# Radar parameters\nfs = 78125          # Sampling frequency in Hz, i.e. we sample 78125\n                    # times per second\n\nts = 1 / fs         # Sampling time, i.e. one sample is taken each\n                    # ts seconds\n\nTeff = 2048.0 * ts  # Total sampling time for 2048 samples\n                    # (AKA effective sweep duration) in seconds.\n\nBeff = 100e6        # Range of transmit signal frequency during the time the\n                    # radar samples, known as the \"effective bandwidth\"\n                    # (given in Hz)\n\nS = Beff / Teff     # Frequency sweep rate in Hz/s\n\n# Specification of targets.  We made these targets up, imagining they\n# are objects seen by the radar with the specified range and size\n\nR = np.array([100, 137, 154, 159,  180])  # Ranges (in meter)\nM = np.array([0.33, 0.2, 0.9, 0.02, 0.1])  # Target size\nP = np.array([0, pi / 2, pi / 3, pi / 5, pi / 6])  # Randomly chosen phase offsets\n\nt = np.arange(2048) * ts  # Sample times\n\nfd = 2 * S * R / 3E8      # Frequency differences for these targets\n\n# Generate five targets\nsignals = np.cos(2 * pi * fd * t[:, np.newaxis] + P)\n\n# Save the signal associated with the first target as an example for\n# later inspection\nv_single = signals[:, 0]\n\n# Weigh the signals, according to target size, and sum, to generate\n# the combined signal seen by the radar\nv_sim = np.sum(M * signals, axis=1)\n\n## The above code is equivalent to:\n#\n# v0 = np.cos(2 * pi * fd[0] * t)\n# v1 = np.cos(2 * pi * fd[1] * t + pi / 2)\n# v2 = np.cos(2 * pi * fd[2] * t + pi / 3)\n# v3 = np.cos(2 * pi * fd[3] * t + pi / 5)\n# v4 = np.cos(2 * pi * fd[4] * t + pi / 6)\n#\n## Blend them together\n# v_single = v0\n# v_sim = (0.33 * v0) + (0.2 * v1) + (0.9 * v2) + (0.02 * v3) + (0.1 * v4)",
                "position": {
                    "start": { "line": 1006, "column": 1, "offset": 37891 },
                    "end": { "line": 1059, "column": 4, "offset": 39657 },
                    "indent": [
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                        1, 1, 1, 1, 1, 1, 1, 1
                    ]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Above, we generate a synthetic signal, $v_\\mathrm{single}$, received when\nlooking at a single target (see figure below). By counting the number\nof cycles seen in a given time period, we can compute the frequency of\nthe signal and thus the distance to the target.",
                        "position": {
                            "start": { "line": 1061, "column": 1, "offset": 39659 },
                            "end": { "line": 1064, "column": 48, "offset": 39921 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1061, "column": 1, "offset": 39659 },
                    "end": { "line": 1064, "column": 48, "offset": 39921 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "A real radar will rarely receive only a single echo, though. The\nsimulated signal $v",
                        "position": {
                            "start": { "line": 1066, "column": 1, "offset": 39923 },
                            "end": { "line": 1067, "column": 20, "offset": 40007 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "\\mathrm{sim}$ shows what a radar signal will look\nlike with five targets at different ranges (including two close to one\nanother at 154 and 159 meters), and $v",
                                "position": {
                                    "start": { "line": 1067, "column": 21, "offset": 40008 },
                                    "end": { "line": 1069, "column": 39, "offset": 40167 },
                                    "indent": [1, 1]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1067, "column": 20, "offset": 40007 },
                            "end": { "line": 1069, "column": 40, "offset": 40168 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "text",
                        "value": "\\mathrm{actual}(t)$ shows the\noutput signal obtained with an actual radar. When multiple echoes add\ntogether, the result makes little intuitive sense; until, that is, we\nlook at it more carefully through the lens of the discrete Fourier\ntransform.",
                        "position": {
                            "start": { "line": 1069, "column": 40, "offset": 40168 },
                            "end": { "line": 1073, "column": 11, "offset": 40415 },
                            "indent": [1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1066, "column": 1, "offset": 39923 },
                    "end": { "line": 1073, "column": 11, "offset": 40415 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!--\nA synthetic radar signal is shown as $v_{1}(t)$ in Fig. [fig:radar time signals]\nfor a radar with parameters $B_{eff}=100$ MHz, sampling frequency\n28125 Hz and N=2048 samples. The effective sweep time is\n$T_{eff}=\\frac{2048}{28125}=26.214$ ms. We can interpret this signal\nby counting the number of cycles in the graph â€” about\n$66\\frac{1}{2}$. The difference frequency is approximately\n$\\frac{66.5}{26.214E-3}=6.35$ kHz. With\n$S=\\frac{B_{eff}}{T_{eff}}=\\frac{100E6}{26.214E-3}=3.815\\times10^{9}$\nHz/s, we can calculate the range to the target as\n$R=\\frac{vf_{d}}{2S}=\\frac{3\\times10^{8}\\times6.35\\times10^{3}}{2\\times3.815\\times10^{9}}=249.7$\nm.\n-->",
                "position": {
                    "start": { "line": 1075, "column": 1, "offset": 40417 },
                    "end": { "line": 1087, "column": 4, "offset": 41071 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "../figures/generated/radar_time_signals.png",
                        "alt": "Receiver output signals: (a) single simulated target\n (b) five simulated targets (c) actual radar data",
                        "position": {
                            "start": { "line": 1089, "column": 1, "offset": 41073 },
                            "end": { "line": 1090, "column": 96, "offset": 41223 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 1089, "column": 1, "offset": 41073 }, "end": { "line": 1090, "column": 96, "offset": 41223 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The real-world radar data is read from a NumPy-format ",
                        "position": {
                            "start": { "line": 1092, "column": 1, "offset": 41225 },
                            "end": { "line": 1092, "column": 55, "offset": 41279 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": ".npz",
                        "position": {
                            "start": { "line": 1092, "column": 55, "offset": 41279 },
                            "end": { "line": 1092, "column": 61, "offset": 41285 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " file (a\nlight-weight, cross-platform and cross-version compatible storage\nformat). These files can be saved with the ",
                        "position": {
                            "start": { "line": 1092, "column": 61, "offset": 41285 },
                            "end": { "line": 1094, "column": 44, "offset": 41403 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "np.savez",
                        "position": {
                            "start": { "line": 1094, "column": 44, "offset": 41403 },
                            "end": { "line": 1094, "column": 54, "offset": 41413 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " or\n",
                        "position": {
                            "start": { "line": 1094, "column": 54, "offset": 41413 },
                            "end": { "line": 1095, "column": 1, "offset": 41417 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "np.savez_compressed",
                        "position": {
                            "start": { "line": 1095, "column": 1, "offset": 41417 },
                            "end": { "line": 1095, "column": 22, "offset": 41438 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " functions. Note that SciPy's ",
                        "position": {
                            "start": { "line": 1095, "column": 22, "offset": 41438 },
                            "end": { "line": 1095, "column": 52, "offset": 41468 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "io",
                        "position": {
                            "start": { "line": 1095, "column": 52, "offset": 41468 },
                            "end": { "line": 1095, "column": 56, "offset": 41472 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " submodule\ncan also easily read other formats, such as MATLAB(R) and NetCDF\nfiles.",
                        "position": {
                            "start": { "line": 1095, "column": 56, "offset": 41472 },
                            "end": { "line": 1097, "column": 7, "offset": 41554 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1092, "column": 1, "offset": 41225 },
                    "end": { "line": 1097, "column": 7, "offset": 41554 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "data = np.load('data/radar_scan_0.npz')\n\n# Load variable 'scan' from 'radar_scan_0.npz'\nscan = data['scan']\n\n# The dataset contains multiple measurements, each taken with the\n# radar pointing in a different direction.  Here we take one such as\n# measurement, at a specified azimuth (left-right position) and elevation\n# (up-down position).  The measurement has shape (2048,).\n\nv_actual = scan['samples'][5, 14, :]\n\n# The signal amplitude ranges from -2.5V to +2.5V.  The 14-bit\n# analogue-to-digital converter in the radar gives out integers\n# between -8192 to 8192.  We convert back to voltage by multiplying by\n# $(2.5 / 8192)$.\n\nv_actual = v_actual * (2.5 / 8192)",
                "position": {
                    "start": { "line": 1099, "column": 1, "offset": 41556 },
                    "end": { "line": 1119, "column": 4, "offset": 42237 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Since ",
                        "position": {
                            "start": { "line": 1121, "column": 1, "offset": 42239 },
                            "end": { "line": 1121, "column": 7, "offset": 42245 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": ".npz",
                        "position": {
                            "start": { "line": 1121, "column": 7, "offset": 42245 },
                            "end": { "line": 1121, "column": 13, "offset": 42251 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "-files can store multiple variables, we have to select\nthe one we want: ",
                        "position": {
                            "start": { "line": 1121, "column": 13, "offset": 42251 },
                            "end": { "line": 1122, "column": 18, "offset": 42323 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "data['scan']",
                        "position": {
                            "start": { "line": 1122, "column": 18, "offset": 42323 },
                            "end": { "line": 1122, "column": 32, "offset": 42337 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". That returns a\n",
                        "position": {
                            "start": { "line": 1122, "column": 32, "offset": 42337 },
                            "end": { "line": 1123, "column": 1, "offset": 42354 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "structured NumPy array",
                                "position": {
                                    "start": { "line": 1123, "column": 2, "offset": 42355 },
                                    "end": { "line": 1123, "column": 24, "offset": 42377 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1123, "column": 1, "offset": 42354 },
                            "end": { "line": 1123, "column": 25, "offset": 42378 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " with the following fields:",
                        "position": {
                            "start": { "line": 1123, "column": 25, "offset": 42378 },
                            "end": { "line": 1123, "column": 52, "offset": 42405 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1121, "column": 1, "offset": 42239 },
                    "end": { "line": 1123, "column": 52, "offset": 42405 },
                    "indent": [1, 1]
                }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "time",
                                                "position": {
                                                    "start": { "line": 1125, "column": 7, "offset": 42413 },
                                                    "end": { "line": 1125, "column": 11, "offset": 42417 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1125, "column": 5, "offset": 42411 },
                                            "end": { "line": 1125, "column": 13, "offset": 42419 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " : unsigned 64-bit (8 byte) integer (",
                                        "position": {
                                            "start": { "line": 1125, "column": 13, "offset": 42419 },
                                            "end": { "line": 1125, "column": 50, "offset": 42456 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "np.uint64",
                                        "position": {
                                            "start": { "line": 1125, "column": 50, "offset": 42456 },
                                            "end": { "line": 1125, "column": 61, "offset": 42467 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ")",
                                        "position": {
                                            "start": { "line": 1125, "column": 61, "offset": 42467 },
                                            "end": { "line": 1125, "column": 62, "offset": 42468 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1125, "column": 5, "offset": 42411 },
                                    "end": { "line": 1125, "column": 62, "offset": 42468 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1125, "column": 1, "offset": 42407 },
                            "end": { "line": 1125, "column": 62, "offset": 42468 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "size",
                                                "position": {
                                                    "start": { "line": 1126, "column": 7, "offset": 42475 },
                                                    "end": { "line": 1126, "column": 11, "offset": 42479 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1126, "column": 5, "offset": 42473 },
                                            "end": { "line": 1126, "column": 13, "offset": 42481 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " : unsigned 32-bit (4 byte) integer (",
                                        "position": {
                                            "start": { "line": 1126, "column": 13, "offset": 42481 },
                                            "end": { "line": 1126, "column": 50, "offset": 42518 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "np.uint32",
                                        "position": {
                                            "start": { "line": 1126, "column": 50, "offset": 42518 },
                                            "end": { "line": 1126, "column": 61, "offset": 42529 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ")",
                                        "position": {
                                            "start": { "line": 1126, "column": 61, "offset": 42529 },
                                            "end": { "line": 1126, "column": 62, "offset": 42530 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1126, "column": 5, "offset": 42473 },
                                    "end": { "line": 1126, "column": 62, "offset": 42530 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1126, "column": 1, "offset": 42469 },
                            "end": { "line": 1126, "column": 62, "offset": 42530 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": true,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "position",
                                                "position": {
                                                    "start": { "line": 1127, "column": 7, "offset": 42537 },
                                                    "end": { "line": 1127, "column": 15, "offset": 42545 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1127, "column": 5, "offset": 42535 },
                                            "end": { "line": 1127, "column": 17, "offset": 42547 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1127, "column": 5, "offset": 42535 },
                                    "end": { "line": 1127, "column": 17, "offset": 42547 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "list",
                                "ordered": false,
                                "start": null,
                                "spread": false,
                                "children": [
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "strong",
                                                        "children": [
                                                            {
                                                                "type": "text",
                                                                "value": "az",
                                                                "position": {
                                                                    "start": { "line": 1129, "column": 11, "offset": 42559 },
                                                                    "end": { "line": 1129, "column": 13, "offset": 42561 },
                                                                    "indent": []
                                                                }
                                                            }
                                                        ],
                                                        "position": {
                                                            "start": { "line": 1129, "column": 9, "offset": 42557 },
                                                            "end": { "line": 1129, "column": 15, "offset": 42563 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " : 32-bit float (",
                                                        "position": {
                                                            "start": { "line": 1129, "column": 15, "offset": 42563 },
                                                            "end": { "line": 1129, "column": 32, "offset": 42580 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "np.float32",
                                                        "position": {
                                                            "start": { "line": 1129, "column": 32, "offset": 42580 },
                                                            "end": { "line": 1129, "column": 44, "offset": 42592 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": ")",
                                                        "position": {
                                                            "start": { "line": 1129, "column": 44, "offset": 42592 },
                                                            "end": { "line": 1129, "column": 45, "offset": 42593 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 1129, "column": 9, "offset": 42557 },
                                                    "end": { "line": 1129, "column": 45, "offset": 42593 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1129, "column": 5, "offset": 42553 },
                                            "end": { "line": 1129, "column": 45, "offset": 42593 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "strong",
                                                        "children": [
                                                            {
                                                                "type": "text",
                                                                "value": "el",
                                                                "position": {
                                                                    "start": { "line": 1130, "column": 11, "offset": 42604 },
                                                                    "end": { "line": 1130, "column": 13, "offset": 42606 },
                                                                    "indent": []
                                                                }
                                                            }
                                                        ],
                                                        "position": {
                                                            "start": { "line": 1130, "column": 9, "offset": 42602 },
                                                            "end": { "line": 1130, "column": 15, "offset": 42608 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " : 32-bit float (",
                                                        "position": {
                                                            "start": { "line": 1130, "column": 15, "offset": 42608 },
                                                            "end": { "line": 1130, "column": 32, "offset": 42625 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "np.float32",
                                                        "position": {
                                                            "start": { "line": 1130, "column": 32, "offset": 42625 },
                                                            "end": { "line": 1130, "column": 44, "offset": 42637 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": ")",
                                                        "position": {
                                                            "start": { "line": 1130, "column": 44, "offset": 42637 },
                                                            "end": { "line": 1130, "column": 45, "offset": 42638 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 1130, "column": 9, "offset": 42602 },
                                                    "end": { "line": 1130, "column": 45, "offset": 42638 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1130, "column": 5, "offset": 42598 },
                                            "end": { "line": 1130, "column": 45, "offset": 42638 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "strong",
                                                        "children": [
                                                            {
                                                                "type": "text",
                                                                "value": "region_type",
                                                                "position": {
                                                                    "start": { "line": 1131, "column": 11, "offset": 42649 },
                                                                    "end": { "line": 1131, "column": 22, "offset": 42660 },
                                                                    "indent": []
                                                                }
                                                            }
                                                        ],
                                                        "position": {
                                                            "start": { "line": 1131, "column": 9, "offset": 42647 },
                                                            "end": { "line": 1131, "column": 24, "offset": 42662 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " : unsigned 8-bit (1 byte) integer (",
                                                        "position": {
                                                            "start": { "line": 1131, "column": 24, "offset": 42662 },
                                                            "end": { "line": 1131, "column": 60, "offset": 42698 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "np.uint8",
                                                        "position": {
                                                            "start": { "line": 1131, "column": 60, "offset": 42698 },
                                                            "end": { "line": 1131, "column": 70, "offset": 42708 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": ")",
                                                        "position": {
                                                            "start": { "line": 1131, "column": 70, "offset": 42708 },
                                                            "end": { "line": 1131, "column": 71, "offset": 42709 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 1131, "column": 9, "offset": 42647 },
                                                    "end": { "line": 1131, "column": 71, "offset": 42709 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1131, "column": 5, "offset": 42643 },
                                            "end": { "line": 1131, "column": 71, "offset": 42709 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "strong",
                                                        "children": [
                                                            {
                                                                "type": "text",
                                                                "value": "region_ID",
                                                                "position": {
                                                                    "start": { "line": 1132, "column": 11, "offset": 42720 },
                                                                    "end": { "line": 1132, "column": 20, "offset": 42729 },
                                                                    "indent": []
                                                                }
                                                            }
                                                        ],
                                                        "position": {
                                                            "start": { "line": 1132, "column": 9, "offset": 42718 },
                                                            "end": { "line": 1132, "column": 22, "offset": 42731 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " : unsigned 16-bit (2 byte) integer (",
                                                        "position": {
                                                            "start": { "line": 1132, "column": 22, "offset": 42731 },
                                                            "end": { "line": 1132, "column": 59, "offset": 42768 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "np.uint16",
                                                        "position": {
                                                            "start": { "line": 1132, "column": 59, "offset": 42768 },
                                                            "end": { "line": 1132, "column": 70, "offset": 42779 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": ")",
                                                        "position": {
                                                            "start": { "line": 1132, "column": 70, "offset": 42779 },
                                                            "end": { "line": 1132, "column": 71, "offset": 42780 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 1132, "column": 9, "offset": 42718 },
                                                    "end": { "line": 1132, "column": 71, "offset": 42780 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1132, "column": 5, "offset": 42714 },
                                            "end": { "line": 1132, "column": 71, "offset": 42780 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "strong",
                                                        "children": [
                                                            {
                                                                "type": "text",
                                                                "value": "gain",
                                                                "position": {
                                                                    "start": { "line": 1133, "column": 11, "offset": 42791 },
                                                                    "end": { "line": 1133, "column": 15, "offset": 42795 },
                                                                    "indent": []
                                                                }
                                                            }
                                                        ],
                                                        "position": {
                                                            "start": { "line": 1133, "column": 9, "offset": 42789 },
                                                            "end": { "line": 1133, "column": 17, "offset": 42797 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " : unsigned 8-bit (1 byte) integer (",
                                                        "position": {
                                                            "start": { "line": 1133, "column": 17, "offset": 42797 },
                                                            "end": { "line": 1133, "column": 53, "offset": 42833 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "np.uin8",
                                                        "position": {
                                                            "start": { "line": 1133, "column": 53, "offset": 42833 },
                                                            "end": { "line": 1133, "column": 62, "offset": 42842 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": ")",
                                                        "position": {
                                                            "start": { "line": 1133, "column": 62, "offset": 42842 },
                                                            "end": { "line": 1133, "column": 63, "offset": 42843 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 1133, "column": 9, "offset": 42789 },
                                                    "end": { "line": 1133, "column": 63, "offset": 42843 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1133, "column": 5, "offset": 42785 },
                                            "end": { "line": 1133, "column": 63, "offset": 42843 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "strong",
                                                        "children": [
                                                            {
                                                                "type": "text",
                                                                "value": "samples",
                                                                "position": {
                                                                    "start": { "line": 1134, "column": 11, "offset": 42854 },
                                                                    "end": { "line": 1134, "column": 18, "offset": 42861 },
                                                                    "indent": []
                                                                }
                                                            }
                                                        ],
                                                        "position": {
                                                            "start": { "line": 1134, "column": 9, "offset": 42852 },
                                                            "end": { "line": 1134, "column": 20, "offset": 42863 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " : 2048 unsigned 16-bit (2 byte) integers (",
                                                        "position": {
                                                            "start": { "line": 1134, "column": 20, "offset": 42863 },
                                                            "end": { "line": 1134, "column": 63, "offset": 42906 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "np.uint16",
                                                        "position": {
                                                            "start": { "line": 1134, "column": 63, "offset": 42906 },
                                                            "end": { "line": 1134, "column": 74, "offset": 42917 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": ")",
                                                        "position": {
                                                            "start": { "line": 1134, "column": 74, "offset": 42917 },
                                                            "end": { "line": 1134, "column": 75, "offset": 42918 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 1134, "column": 9, "offset": 42852 },
                                                    "end": { "line": 1134, "column": 75, "offset": 42918 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1134, "column": 5, "offset": 42848 },
                                            "end": { "line": 1134, "column": 75, "offset": 42918 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1129, "column": 5, "offset": 42553 },
                                    "end": { "line": 1134, "column": 75, "offset": 42918 },
                                    "indent": [5, 5, 5, 5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1127, "column": 1, "offset": 42531 },
                            "end": { "line": 1134, "column": 75, "offset": 42918 },
                            "indent": [1, 1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1125, "column": 1, "offset": 42407 },
                    "end": { "line": 1134, "column": 75, "offset": 42918 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "While it is true that NumPy arrays are ",
                        "position": {
                            "start": { "line": 1136, "column": 1, "offset": 42920 },
                            "end": { "line": 1136, "column": 40, "offset": 42959 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "homogeneous",
                                "position": {
                                    "start": { "line": 1136, "column": 41, "offset": 42960 },
                                    "end": { "line": 1136, "column": 52, "offset": 42971 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1136, "column": 40, "offset": 42959 },
                            "end": { "line": 1136, "column": 53, "offset": 42972 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " (i.e., all the\nelements inside are the same), it does not mean that those elements\ncannot be compound elements, as is the case here.",
                        "position": {
                            "start": { "line": 1136, "column": 53, "offset": 42972 },
                            "end": { "line": 1138, "column": 50, "offset": 43105 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1136, "column": 1, "offset": 42920 },
                    "end": { "line": 1138, "column": 50, "offset": 43105 },
                    "indent": [1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "An individual field is accessed using dictionary syntax:",
                        "position": {
                            "start": { "line": 1140, "column": 1, "offset": 43107 },
                            "end": { "line": 1140, "column": 57, "offset": 43163 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1140, "column": 1, "offset": 43107 }, "end": { "line": 1140, "column": 57, "offset": 43163 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "azimuths = scan['position']['az']  # Get all azimuth measurements",
                "position": { "start": { "line": 1142, "column": 1, "offset": 43165 }, "end": { "line": 1144, "column": 4, "offset": 43244 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "To summarize what we've seen so far: the shown measurements\n($v",
                        "position": {
                            "start": { "line": 1146, "column": 1, "offset": 43246 },
                            "end": { "line": 1147, "column": 4, "offset": 43309 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "\\mathrm{sim}$ and $v",
                                "position": {
                                    "start": { "line": 1147, "column": 5, "offset": 43310 },
                                    "end": { "line": 1147, "column": 25, "offset": 43330 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1147, "column": 4, "offset": 43309 },
                            "end": { "line": 1147, "column": 26, "offset": 43331 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\\mathrm{actual}$) are the sum of sinusoidal\nsignals reflected by each of several objects. We need to determine\neach of the constituent components of these composite radar\nsignals. The FFT is the tool that will do this for us.",
                        "position": {
                            "start": { "line": 1147, "column": 26, "offset": 43331 },
                            "end": { "line": 1150, "column": 55, "offset": 43556 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1146, "column": 1, "offset": 43246 },
                    "end": { "line": 1150, "column": 55, "offset": 43556 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Signal properties in the frequency domain",
                        "position": {
                            "start": { "line": 1152, "column": 5, "offset": 43562 },
                            "end": { "line": 1152, "column": 46, "offset": 43603 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1152, "column": 1, "offset": 43558 }, "end": { "line": 1152, "column": 46, "offset": 43603 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "First, we take the FFTs of our three signals (synthetic single target,\nsynthetic multi-target, and real) and then display the\npositive frequency components (i.e., components $0$ to $N/2$). These\nare called the ",
                        "position": {
                            "start": { "line": 1154, "column": 1, "offset": 43605 },
                            "end": { "line": 1157, "column": 16, "offset": 43815 },
                            "indent": [1, 1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "range traces",
                                "position": {
                                    "start": { "line": 1157, "column": 17, "offset": 43816 },
                                    "end": { "line": 1157, "column": 29, "offset": 43828 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1157, "column": 16, "offset": 43815 },
                            "end": { "line": 1157, "column": 30, "offset": 43829 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " in radar terminology.",
                        "position": {
                            "start": { "line": 1157, "column": 30, "offset": 43829 },
                            "end": { "line": 1157, "column": 52, "offset": 43851 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1154, "column": 1, "offset": 43605 },
                    "end": { "line": 1157, "column": 52, "offset": 43851 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "fig, axes = plt.subplots(3, 1, sharex=True, figsize=(4.8, 2.4))\n\n# Take FFTs of our signals.  Note the convention to name FFTs with a\n# capital letter.\n\nV_single = np.fft.fft(v_single)\nV_sim = np.fft.fft(v_sim)\nV_actual = np.fft.fft(v_actual)\n\nN = len(V_single)\n\nwith plt.style.context('style/thinner.mplstyle'):\n    axes[0].plot(np.abs(V_single[:N // 2]))\n    axes[0].set_ylabel(\"$|V_\\mathrm{single}|$\")\n    axes[0].set_xlim(0, N // 2)\n    axes[0].set_ylim(0, 1100)\n\n    axes[1].plot(np.abs(V_sim[:N // 2]))\n    axes[1].set_ylabel(\"$|V_\\mathrm{sim} |$\")\n    axes[1].set_ylim(0, 1000)\n\n    axes[2].plot(np.abs(V_actual[:N // 2]))\n    axes[2].set_ylim(0, 750)\n    axes[2].set_ylabel(\"$|V_\\mathrm{actual}|$\")\n\n    axes[2].set_xlabel(\"FFT component $n$\")\n\n    for ax in axes:\n        ax.grid()",
                "position": {
                    "start": { "line": 1159, "column": 1, "offset": 43853 },
                    "end": { "line": 1189, "column": 4, "offset": 44657 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Range traces for: (a) single simulated target, (b) mutiple simulated targets, (c) real-world targets\" -->",
                "position": { "start": { "line": 1191, "column": 1, "offset": 44659 }, "end": { "line": 1191, "column": 125, "offset": 44783 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Suddenly, the information makes sense!",
                        "position": {
                            "start": { "line": 1193, "column": 1, "offset": 44785 },
                            "end": { "line": 1193, "column": 39, "offset": 44823 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1193, "column": 1, "offset": 44785 }, "end": { "line": 1193, "column": 39, "offset": 44823 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The plot for $|V",
                        "position": {
                            "start": { "line": 1195, "column": 1, "offset": 44825 },
                            "end": { "line": 1195, "column": 17, "offset": 44841 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "\\mathrm{single}|$ clearly shows a target at component 67, and\nfor $|V",
                                "position": {
                                    "start": { "line": 1195, "column": 18, "offset": 44842 },
                                    "end": { "line": 1196, "column": 8, "offset": 44911 },
                                    "indent": [1]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1195, "column": 17, "offset": 44841 },
                            "end": { "line": 1196, "column": 9, "offset": 44912 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "text",
                        "value": "\\mathrm{sim}|$ shows the targets that produced the signal that was\nuninterpretable in the time domain. The real radar\nsignal, $|V_\\mathrm{actual}|$ shows a large number of targets between\ncomponent 400 and 500 with a large peak in component 443. This happens\nto be an echo return from a radar illuminating the high wall of an\nopen-cast mine.",
                        "position": {
                            "start": { "line": 1196, "column": 9, "offset": 44912 },
                            "end": { "line": 1201, "column": 16, "offset": 45253 },
                            "indent": [1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1195, "column": 1, "offset": 44825 },
                    "end": { "line": 1201, "column": 16, "offset": 45253 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "To get useful information from the plot, we must determine the range!\nAgain, we use the formula:",
                        "position": {
                            "start": { "line": 1203, "column": 1, "offset": 45255 },
                            "end": { "line": 1204, "column": 27, "offset": 45351 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 1203, "column": 1, "offset": 45255 }, "end": { "line": 1204, "column": 27, "offset": 45351 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "$$R",
                        "position": {
                            "start": { "line": 1206, "column": 1, "offset": 45353 },
                            "end": { "line": 1206, "column": 4, "offset": 45356 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "{n}=\\frac{nv}{2B",
                                "position": {
                                    "start": { "line": 1206, "column": 5, "offset": 45357 },
                                    "end": { "line": 1206, "column": 21, "offset": 45373 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1206, "column": 4, "offset": 45356 },
                            "end": { "line": 1206, "column": 22, "offset": 45374 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "{eff}}$$",
                        "position": {
                            "start": { "line": 1206, "column": 22, "offset": 45374 },
                            "end": { "line": 1206, "column": 30, "offset": 45382 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1206, "column": 1, "offset": 45353 }, "end": { "line": 1206, "column": 30, "offset": 45382 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "In radar terminology, each DFT component is known as a ",
                        "position": {
                            "start": { "line": 1208, "column": 1, "offset": 45384 },
                            "end": { "line": 1208, "column": 56, "offset": 45439 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "range bin",
                                "position": {
                                    "start": { "line": 1208, "column": 57, "offset": 45440 },
                                    "end": { "line": 1208, "column": 66, "offset": 45449 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1208, "column": 56, "offset": 45439 },
                            "end": { "line": 1208, "column": 67, "offset": 45450 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1208, "column": 67, "offset": 45450 },
                            "end": { "line": 1208, "column": 68, "offset": 45451 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1208, "column": 1, "offset": 45384 }, "end": { "line": 1208, "column": 68, "offset": 45451 }, "indent": [] }
            },
            {
                "type": "html",
                "value": "<!--\nThe sinusoid associated with the first component of the DFT has a\nperiod exactly equal to the duration $T_{eff}$ of the time domain\nsignal, so $f_{1}=\\frac{1}{T_{eff}}$. The other sinusoids in the\nFourier series are harmonics of this, $f_{n}=\\frac{n}{T_{eff}}$.\n\nThe ranges associated with the DFT components follow from\nEqs. ([eq:difference frequency]) and ([eq:Effective bandwidth]) as\n\n$$R_{n}=\\frac{nv}{2B_{eff}}$$\n\nand the associated DFT components are known as *range bins* in radar\nterminology.\n\n-->",
                "position": {
                    "start": { "line": 1210, "column": 1, "offset": 45453 },
                    "end": { "line": 1224, "column": 4, "offset": 45964 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "This equation also defines the range resolution of the radar: targets\nwill only be distinguishable if they are separated by more than two\nrange bins, i.e.",
                        "position": {
                            "start": { "line": 1226, "column": 1, "offset": 45966 },
                            "end": { "line": 1228, "column": 17, "offset": 46120 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1226, "column": 1, "offset": 45966 },
                    "end": { "line": 1228, "column": 17, "offset": 46120 },
                    "indent": [1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "$$\\Delta R>\\frac{1}{B_{eff}}.$$",
                        "position": {
                            "start": { "line": 1230, "column": 1, "offset": 46122 },
                            "end": { "line": 1230, "column": 32, "offset": 46153 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1230, "column": 1, "offset": 46122 }, "end": { "line": 1230, "column": 32, "offset": 46153 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "This is a fundamental property of all types of radar.",
                        "position": {
                            "start": { "line": 1232, "column": 1, "offset": 46155 },
                            "end": { "line": 1232, "column": 54, "offset": 46208 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1232, "column": 1, "offset": 46155 }, "end": { "line": 1232, "column": 54, "offset": 46208 }, "indent": [] }
            },
            {
                "type": "html",
                "value": "<!--\nThe plot in Fig. ([fig:FFT range traces]) has a fundamental\nshortcoming. The observable dynamic range is the signal is very\nlimited! We could easily have missed one of the targets in the trace\nfor $V_{5}$!  To ameliorate the problem, we plot the same FFTs but\nthis time against a logarithmic y-axis.  The traces were all\nnormalized by dividing the amplitudes with the maximum value.\n-->",
                "position": {
                    "start": { "line": 1234, "column": 1, "offset": 46210 },
                    "end": { "line": 1241, "column": 4, "offset": 46601 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "This result is quite satisfyingâ€”but the dynamic range is so large\nthat we could very easily miss some peaks. Let's take the $\\log$ as\nbefore with the spectrogram:",
                        "position": {
                            "start": { "line": 1243, "column": 1, "offset": 46603 },
                            "end": { "line": 1245, "column": 29, "offset": 46765 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1243, "column": 1, "offset": 46603 },
                    "end": { "line": 1245, "column": 29, "offset": 46765 },
                    "indent": [1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "c = 3e8  # Approximately the speed of light and of\n         # electromagnetic waves in air\n\nfig, (ax0, ax1, ax2) = plt.subplots(3, 1)\n\n\ndef dB(y):\n    \"Calculate the log ratio of y / max(y) in decibel.\"\n\n    y = np.abs(y)\n    y /= y.max()\n\n    return 20 * np.log10(y)\n\n\ndef log_plot_normalized(x, y, ylabel, ax):\n    ax.plot(x, dB(y))\n    ax.set_ylabel(ylabel)\n    ax.grid()\n\n\nrng = np.arange(N // 2) * c / 2 / Beff\n\nwith plt.style.context('style/thinner.mplstyle'):\n    log_plot_normalized(rng, V_single[:N // 2], \"$|V_0|$ [dB]\", ax0)\n    log_plot_normalized(rng, V_sim[:N // 2], \"$|V_5|$ [dB]\", ax1)\n    log_plot_normalized(rng, V_actual[:N // 2], \"$|V_{\\mathrm{actual}}|$ [dB]\", ax2)\n\nax0.set_xlim(0, 300)  # Change x limits for these plots so that\nax1.set_xlim(0, 300)  # we are better able to see the shape of the peaks.\nax2.set_xlim(0, len(V_actual) // 2)\nax2.set_xlabel('range')",
                "position": {
                    "start": { "line": 1247, "column": 1, "offset": 46767 },
                    "end": { "line": 1280, "column": 4, "offset": 47666 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Logarithm of range traces\" -->",
                "position": { "start": { "line": 1282, "column": 1, "offset": 47668 }, "end": { "line": 1282, "column": 50, "offset": 47717 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The observable dynamic range is much improved in these plots. For\ninstance, in the real radar signal the ",
                        "position": {
                            "start": { "line": 1284, "column": 1, "offset": 47719 },
                            "end": { "line": 1285, "column": 40, "offset": 47824 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "noise floor",
                                "position": {
                                    "start": { "line": 1285, "column": 41, "offset": 47825 },
                                    "end": { "line": 1285, "column": 52, "offset": 47836 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1285, "column": 40, "offset": 47824 },
                            "end": { "line": 1285, "column": 53, "offset": 47837 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " of the radar has\nbecome visible (i.e., the level where electronic noise in the system\nstarts to limit the radar's ability to detect a target).",
                        "position": {
                            "start": { "line": 1285, "column": 53, "offset": 47837 },
                            "end": { "line": 1287, "column": 57, "offset": 47980 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1284, "column": 1, "offset": 47719 },
                    "end": { "line": 1287, "column": 57, "offset": 47980 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- The noise floor is ultimately caused by a phenomenon\ncalled thermal noise that is produced by all conducting elements that\nhave resistance at temperatures above absolute zero, as well as by\nshot noise, a noise mechanism inherent in all the electronic devices\nthat are used for processing the radar signal. The noise floor of a\nradar limits its ability to detect weak echoes. -->",
                "position": {
                    "start": { "line": 1289, "column": 1, "offset": 47982 },
                    "end": { "line": 1294, "column": 52, "offset": 48365 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Windowing, applied",
                        "position": {
                            "start": { "line": 1296, "column": 5, "offset": 48371 },
                            "end": { "line": 1296, "column": 23, "offset": 48389 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1296, "column": 1, "offset": 48367 }, "end": { "line": 1296, "column": 23, "offset": 48389 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We're getting there, but in the spectrum of the simulated signal, we\nstill cannot distinguish the peaks at 154 and 159 meters. Who knows\nwhat we're missing in the real-world signal! To sharpen the peaks,\nwe'll return to our toolbox and make use of ",
                        "position": {
                            "start": { "line": 1298, "column": 1, "offset": 48391 },
                            "end": { "line": 1301, "column": 45, "offset": 48639 },
                            "indent": [1, 1, 1]
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "windowing",
                                "position": {
                                    "start": { "line": 1301, "column": 46, "offset": 48640 },
                                    "end": { "line": 1301, "column": 55, "offset": 48649 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1301, "column": 45, "offset": 48639 },
                            "end": { "line": 1301, "column": 56, "offset": 48650 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1301, "column": 56, "offset": 48650 },
                            "end": { "line": 1301, "column": 57, "offset": 48651 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1298, "column": 1, "offset": 48391 },
                    "end": { "line": 1301, "column": 57, "offset": 48651 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!--\n\nThe range traces in Fig. ([fig:Log range traces]) display a further\nserious shortcoming. The signals $v_{1}$ and $v_{5}$ are composed of\npure sinusoids and we would ideally expect the FFT to produce line\nspectra for these signals. The logarithmic plots show steadily\nincreasing values as the peaks are approached from both sides, to such\nan extent that one of the targets in the plot for $|v_{5}|$ can hardly\nbe distinguished even though it is separated by several range bins\nfrom the large target. The broadening is caused by *side lobes* in the\nDFT. These are caused by an inherent clash between the properties of\nthe signal we analyzed and the signal produced by the inverse DFT.\n\n-->",
                "position": {
                    "start": { "line": 1303, "column": 1, "offset": 48653 },
                    "end": { "line": 1316, "column": 4, "offset": 49346 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Here are the signals used thus far in this example, windowed with a\nKaiser window with $\\beta=6.1$:",
                        "position": {
                            "start": { "line": 1318, "column": 1, "offset": 49348 },
                            "end": { "line": 1319, "column": 32, "offset": 49447 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 1318, "column": 1, "offset": 49348 }, "end": { "line": 1319, "column": 32, "offset": 49447 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "f, axes = plt.subplots(3, 1, sharex=True, figsize=(4.8, 2.8))\n\nt_ms = t * 1000  # Sample times in milli-second\n\nw = np.kaiser(N, 6.1)  # Kaiser window with beta = 6.1\n\nfor n, (signal, label) in enumerate([(v_single, r'$v_0 [V]$'),\n                                     (v_sim, r'$v_5 [V]$'),\n                                     (v_actual, r'$v_{\\mathrm{actual}} [V]$')]):\n    with plt.style.context('style/thinner.mplstyle'):\n        axes[n].plot(t_ms, w * signal)\n        axes[n].set_ylabel(label)\n        axes[n].grid()\n\naxes[2].set_xlim(0, t_ms[-1])\naxes[2].set_xlabel('Time [ms]');",
                "position": {
                    "start": { "line": 1321, "column": 1, "offset": 49449 },
                    "end": { "line": 1338, "column": 4, "offset": 50048 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Windowed signals for: (a) single simulated target, (b) multiple simulated targets, (c) real targets\" -->",
                "position": { "start": { "line": 1340, "column": 1, "offset": 50050 }, "end": { "line": 1340, "column": 124, "offset": 50173 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "And the corresponding FFTs (or \"range traces\", in radar terms):",
                        "position": {
                            "start": { "line": 1342, "column": 1, "offset": 50175 },
                            "end": { "line": 1342, "column": 64, "offset": 50238 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1342, "column": 1, "offset": 50175 }, "end": { "line": 1342, "column": 64, "offset": 50238 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "V_single_win = np.fft.fft(w * v_single)\nV_sim_win = np.fft.fft(w * v_sim)\nV_actual_win = np.fft.fft(w * v_actual)\n\nfig, (ax0, ax1,ax2) = plt.subplots(3, 1)\n\nwith plt.style.context('style/thinner.mplstyle'):\n    log_plot_normalized(rng, V_single_win[:N // 2],\n                        r\"$|V_{0,\\mathrm{win}}|$ [dB]\", ax0)\n    log_plot_normalized(rng, V_sim_win[:N // 2],\n                        r\"$|V_{5,\\mathrm{win}}|$ [dB]\", ax1)\n    log_plot_normalized(rng, V_actual_win[:N // 2],\n                        r\"$|V_\\mathrm{actual,win}|$ [dB]\", ax2)\n\nax0.set_xlim(0, 300)  # Change x limits for these plots so that\nax1.set_xlim(0, 300)  # we are better able to see the shape of the peaks.\n\nax1.annotate(\"New, previously unseen!\", (160, -35), xytext=(10, 15),\n             textcoords=\"offset points\", color='red', size='x-small',\n             arrowprops=dict(width=0.5, headwidth=3, headlength=4,\n                             fc='k', shrink=0.1));",
                "position": {
                    "start": { "line": 1344, "column": 1, "offset": 50240 },
                    "end": { "line": 1366, "column": 4, "offset": 51196 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Range traces (spectrum) of windowed signals\" -->",
                "position": { "start": { "line": 1368, "column": 1, "offset": 51198 }, "end": { "line": 1368, "column": 68, "offset": 51265 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Compare these with the earlier range traces. There is a dramatic\nlowering in side lobe level, but at a price: the peaks have changed in\nshape, widening and becoming less peaky, thus lowering the radar\nresolution, that is, the ability of the radar to distinguish between\ntwo closely space targets. The choice of window is a compromise\nbetween side lobe level and resolution. Even so, referring to the\ntrace for $V_\\mathrm{sim}$, windowing has dramatically increased our\nability to distinguish the small target from its large neighbor.",
                        "position": {
                            "start": { "line": 1370, "column": 1, "offset": 51267 },
                            "end": { "line": 1377, "column": 65, "offset": 51800 },
                            "indent": [1, 1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1370, "column": 1, "offset": 51267 },
                    "end": { "line": 1377, "column": 65, "offset": 51800 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "In the real radar data range trace windowing has also reduced the side\nlobes. This is most visible in the depth of the notch between the two\ngroups of targets.",
                        "position": {
                            "start": { "line": 1379, "column": 1, "offset": 51802 },
                            "end": { "line": 1381, "column": 19, "offset": 51961 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1379, "column": 1, "offset": 51802 },
                    "end": { "line": 1381, "column": 19, "offset": 51961 },
                    "indent": [1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Radar Images",
                        "position": {
                            "start": { "line": 1383, "column": 5, "offset": 51967 },
                            "end": { "line": 1383, "column": 17, "offset": 51979 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1383, "column": 1, "offset": 51963 }, "end": { "line": 1383, "column": 17, "offset": 51979 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Knowing how to analyze a single trace, we can expand to looking at\nradar images.",
                        "position": {
                            "start": { "line": 1385, "column": 1, "offset": 51981 },
                            "end": { "line": 1386, "column": 14, "offset": 52061 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 1385, "column": 1, "offset": 51981 }, "end": { "line": 1386, "column": 14, "offset": 52061 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The data is produced by a radar with a parabolic reflector antenna. It\nproduces a highly directive round pencil beam with a $2^\\circ$\nspreading angle between half-power points. When directed with normal\nincidence at a plane, the radar will illuminate a spot of about $2$ meters in\ndiameter at a distance of 60 meters.\nOutside this spot, the power drops off quite rapidly, but strong\nechoes from outside the spot will nevertheless still be visible.",
                        "position": {
                            "start": { "line": 1388, "column": 1, "offset": 52063 },
                            "end": { "line": 1394, "column": 65, "offset": 52510 },
                            "indent": [1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1388, "column": 1, "offset": 52063 },
                    "end": { "line": 1394, "column": 65, "offset": 52510 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "By varying the pencil beam's azimuth (left-right position) and\nelevation (up-down position), we can sweep it across the target area\nof interest. When reflections are picked up, we can calculate the\ndistance to the reflector (the object hit by the radar signal).\nTogether with the current pencil beam azimuth and elevation, this\ndefines the reflector's position in 3D.",
                        "position": {
                            "start": { "line": 1396, "column": 1, "offset": 52512 },
                            "end": { "line": 1401, "column": 40, "offset": 52879 },
                            "indent": [1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1396, "column": 1, "offset": 52512 },
                    "end": { "line": 1401, "column": 40, "offset": 52879 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "A rock slope consists of thousands of reflectors. A range bin can be\nthought of as a large sphere with the radar at its center that\nintersects the slope along a ragged line. The scatterers on this line\nwill produce reflections in this range bin. The wavelength of the\nradar (distance the transmitted wave travels in one oscillation\nsecond) is about 30 mm. The reflections from scatterers separated by\nodd multiples of a quarter wavelength in range, about 7.5 mm, will\ntend to interfere destructively, while those from scatterers separated\nby multiples of a half wavelength will tend to interfere\nconstructively at the radar. The reflections combine to produce\napparent spots of strong reflections. This specific radar moves its\nantenna in order to scan small regions consisting of $20^\\circ$\nazimuth and $30^\\circ$ elevation bins scanned in steps of $0.5^\\circ$.",
                        "position": {
                            "start": { "line": 1403, "column": 1, "offset": 52881 },
                            "end": { "line": 1415, "column": 71, "offset": 53743 },
                            "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1403, "column": 1, "offset": 52881 },
                    "end": { "line": 1415, "column": 71, "offset": 53743 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We will now draw some contour plots of the resulting radar data.\nPlease refer to the diagram below to see how the different slices are\ntaken. A first slice at fixed range shows the strength of echoes\nagainst elevation and azimuth. Another two slices at fixed elevation\nand azimuth respectively shows the slope. The stepped construction of\nthe high wall in an opencast mine is visible in the azimuth plane.",
                        "position": {
                            "start": { "line": 1417, "column": 1, "offset": 53745 },
                            "end": { "line": 1422, "column": 67, "offset": 54150 },
                            "indent": [1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1417, "column": 1, "offset": 53745 },
                    "end": { "line": 1422, "column": 67, "offset": 54150 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "html",
                        "value": "<img src=\"../figures/axes_slices.png\"\n     alt=\"Diagram showing azimuth, elevation and range slices through data volume\"/>",
                        "position": {
                            "start": { "line": 1424, "column": 1, "offset": 54152 },
                            "end": { "line": 1425, "column": 85, "offset": 54274 },
                            "indent": [1]
                        }
                    }
                ],
                "position": { "start": { "line": 1424, "column": 1, "offset": 54152 }, "end": { "line": 1425, "column": 85, "offset": 54274 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "data = np.load('data/radar_scan_1.npz')\nscan = data['scan']\n\n# The signal amplitude ranges from -2.5V to +2.5V.  The 14-bit\n# analogue-to-digital converter in the radar gives out integers\n# between -8192 to 8192.  We convert back to voltage by multiplying by\n# $(2.5 / 8192)$.\n\nv = scan['samples'] * 2.5 / 8192\nwin = np.hanning(N + 1)[:-1]\n\n# Take FFT for each measurement\nV = np.fft.fft(v * win, axis=2)[::-1, :, :N // 2]\n\ncontours = np.arange(-40, 1, 2)\n\n# ignore MPL layout warnings\nimport warnings\nwarnings.filterwarnings('ignore', '.*Axes.*compatible.*tight_layout.*')\n\nf, axes = plt.subplots(2, 2, figsize=(4.8, 4.8), tight_layout=True)\n\nlabels = ('Range', 'Azimuth', 'Elevation')\n\ndef plot_slice(ax, radar_slice, title, xlabel, ylabel):\n    ax.contourf(dB(radar_slice), contours, cmap='magma_r')\n    ax.set_title(title)\n    ax.set_xlabel(xlabel)\n    ax.set_ylabel(ylabel)\n    ax.set_facecolor(plt.cm.magma_r(-40))\n\nwith plt.style.context('style/thinner.mplstyle'):\n    plot_slice(axes[0, 0], V[:, :, 250], 'Range=250', 'Azimuth', 'Elevation')\n    plot_slice(axes[0, 1], V[:, 3, :], 'Azimuth=3', 'Range', 'Elevation')\n    plot_slice(axes[1, 0], V[6, :, :].T, 'Elevation=6', 'Azimuth', 'Range')\n    axes[1, 1].axis('off')",
                "position": {
                    "start": { "line": 1427, "column": 1, "offset": 54276 },
                    "end": { "line": 1464, "column": 4, "offset": 55516 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"Contour plots of range traces along various axes (see diagram)\" -->",
                "position": { "start": { "line": 1466, "column": 1, "offset": 55518 }, "end": { "line": 1466, "column": 87, "offset": 55604 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "3D visualization",
                        "position": {
                            "start": { "line": 1468, "column": 6, "offset": 55611 },
                            "end": { "line": 1468, "column": 22, "offset": 55627 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1468, "column": 1, "offset": 55606 }, "end": { "line": 1468, "column": 22, "offset": 55627 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We can also visualize the volume in three dimensions.",
                        "position": {
                            "start": { "line": 1470, "column": 1, "offset": 55629 },
                            "end": { "line": 1470, "column": 54, "offset": 55682 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1470, "column": 1, "offset": 55629 }, "end": { "line": 1470, "column": 54, "offset": 55682 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We first compute the argmax (the index of the maximum value) in the\nrange direction. This should give an indication of the range at which\nthe radar beam hit the rock slope. Each argmax index is converted to\na three-dimensional (elevation-azimuth-range) coordinate:",
                        "position": {
                            "start": { "line": 1472, "column": 1, "offset": 55684 },
                            "end": { "line": 1475, "column": 58, "offset": 55948 },
                            "indent": [1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1472, "column": 1, "offset": 55684 },
                    "end": { "line": 1475, "column": 58, "offset": 55948 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "r = np.argmax(V, axis=2)\n\nel, az = np.meshgrid(*[np.arange(s) for s in r.shape], indexing='ij')\n\naxis_labels = ['Elevation', 'Azimuth', 'Range']\ncoords = np.column_stack((el.flat, az.flat, r.flat))",
                "position": {
                    "start": { "line": 1477, "column": 1, "offset": 55950 },
                    "end": { "line": 1484, "column": 4, "offset": 56161 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Taking these coordinates, we project them onto the plane (by dropping\nthe range coordinate), and perform a Delaunay tesselation. The\ntesselation returns a set of indices into our coordinates that define\ntriangles (or simplices). While the triangles are strictly speaking\ndefined on the projected coordinates, we use our original coordinates\nfor the reconstruction, thereby adding back the range component:",
                        "position": {
                            "start": { "line": 1486, "column": 1, "offset": 56163 },
                            "end": { "line": 1491, "column": 65, "offset": 56568 },
                            "indent": [1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1486, "column": 1, "offset": 56163 },
                    "end": { "line": 1491, "column": 65, "offset": 56568 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from scipy import spatial\n\nd = spatial.Delaunay(coords[:, :2])\nsimplexes = coords[d.vertices]",
                "position": {
                    "start": { "line": 1493, "column": 1, "offset": 56570 },
                    "end": { "line": 1498, "column": 4, "offset": 56677 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For display purposes, we swap the range axis to be the first:",
                        "position": {
                            "start": { "line": 1500, "column": 1, "offset": 56679 },
                            "end": { "line": 1500, "column": 62, "offset": 56740 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1500, "column": 1, "offset": 56679 }, "end": { "line": 1500, "column": 62, "offset": 56740 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "coords = np.roll(coords, shift=-1, axis=1)\naxis_labels = np.roll(axis_labels, shift=-1)",
                "position": {
                    "start": { "line": 1502, "column": 1, "offset": 56742 },
                    "end": { "line": 1505, "column": 4, "offset": 56843 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Now, Matplotlib's ",
                        "position": {
                            "start": { "line": 1507, "column": 1, "offset": 56845 },
                            "end": { "line": 1507, "column": 19, "offset": 56863 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "trisurf",
                        "position": {
                            "start": { "line": 1507, "column": 19, "offset": 56863 },
                            "end": { "line": 1507, "column": 28, "offset": 56872 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " can be used to visualize the result:",
                        "position": {
                            "start": { "line": 1507, "column": 28, "offset": 56872 },
                            "end": { "line": 1507, "column": 65, "offset": 56909 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1507, "column": 1, "offset": 56845 }, "end": { "line": 1507, "column": 65, "offset": 56909 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "# This import initializes Matplotlib's 3D machinery\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Set up the 3D axis\nf, ax = plt.subplots(1, 1, figsize=(4.8, 4.8),\n                     subplot_kw=dict(projection='3d'))\n\nwith plt.style.context('style/thinner.mplstyle'):\n    ax.plot_trisurf(*coords.T, triangles=d.vertices, cmap='magma_r')\n\n    ax.set_xlabel(axis_labels[0])\n    ax.set_ylabel(axis_labels[1])\n    ax.set_zlabel(axis_labels[2], labelpad=-3)\n    ax.set_xticks([0, 5, 10, 15])\n\n# Adjust the camera position to match our diagram above\nax.view_init(azim=-50);",
                "position": {
                    "start": { "line": 1509, "column": 1, "offset": 56911 },
                    "end": { "line": 1527, "column": 4, "offset": 57491 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- caption text=\"3-D visualization of estimated rock slope position\" -->",
                "position": { "start": { "line": 1529, "column": 1, "offset": 57493 }, "end": { "line": 1529, "column": 75, "offset": 57567 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Further applications of the FFT",
                        "position": {
                            "start": { "line": 1531, "column": 5, "offset": 57573 },
                            "end": { "line": 1531, "column": 36, "offset": 57604 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1531, "column": 1, "offset": 57569 }, "end": { "line": 1531, "column": 36, "offset": 57604 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The examples above show just one of the uses of the FFT in\nradar. There are many others, such as movement (Doppler) measurement\nand target recognition. The fast Fourier transform is pervasive, and is\nseen anywhere from Magnetic Resonance Imaging (MRI) to statistics.\nWith the basic techniques that this chapter outlines in hand, you\nshould be well equipped to use it!",
                        "position": {
                            "start": { "line": 1533, "column": 1, "offset": 57606 },
                            "end": { "line": 1538, "column": 35, "offset": 57973 },
                            "indent": [1, 1, 1, 1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1533, "column": 1, "offset": 57606 },
                    "end": { "line": 1538, "column": 35, "offset": 57973 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Further reading",
                        "position": {
                            "start": { "line": 1540, "column": 5, "offset": 57979 },
                            "end": { "line": 1540, "column": 20, "offset": 57994 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1540, "column": 1, "offset": 57975 }, "end": { "line": 1540, "column": 20, "offset": 57994 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "On the Fourier transform:",
                        "position": {
                            "start": { "line": 1542, "column": 1, "offset": 57996 },
                            "end": { "line": 1542, "column": 26, "offset": 58021 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1542, "column": 1, "offset": 57996 }, "end": { "line": 1542, "column": 26, "offset": 58021 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "A. Papoulis, ",
                                        "position": {
                                            "start": { "line": 1544, "column": 5, "offset": 58027 },
                                            "end": { "line": 1544, "column": 18, "offset": 58040 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "The Fourier Integral and Its Applications",
                                                "position": {
                                                    "start": { "line": 1544, "column": 19, "offset": 58041 },
                                                    "end": { "line": 1544, "column": 60, "offset": 58082 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1544, "column": 18, "offset": 58040 },
                                            "end": { "line": 1544, "column": 61, "offset": 58083 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ",\nMcGraw-Hill, 1960.",
                                        "position": {
                                            "start": { "line": 1544, "column": 61, "offset": 58083 },
                                            "end": { "line": 1545, "column": 23, "offset": 58107 },
                                            "indent": [5]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1544, "column": 5, "offset": 58027 },
                                    "end": { "line": 1545, "column": 23, "offset": 58107 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1544, "column": 1, "offset": 58023 },
                            "end": { "line": 1545, "column": 23, "offset": 58107 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Ronald A. Bracewell, ",
                                        "position": {
                                            "start": { "line": 1546, "column": 5, "offset": 58112 },
                                            "end": { "line": 1546, "column": 26, "offset": 58133 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "The Fourier Transform and Its Applications",
                                                "position": {
                                                    "start": { "line": 1546, "column": 27, "offset": 58134 },
                                                    "end": { "line": 1546, "column": 69, "offset": 58176 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1546, "column": 26, "offset": 58133 },
                                            "end": { "line": 1546, "column": 70, "offset": 58177 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ",\nMcGraw-Hill, 1986.",
                                        "position": {
                                            "start": { "line": 1546, "column": 70, "offset": 58177 },
                                            "end": { "line": 1547, "column": 23, "offset": 58201 },
                                            "indent": [5]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1546, "column": 5, "offset": 58112 },
                                    "end": { "line": 1547, "column": 23, "offset": 58201 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1546, "column": 1, "offset": 58108 },
                            "end": { "line": 1547, "column": 23, "offset": 58201 },
                            "indent": [1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1544, "column": 1, "offset": 58023 },
                    "end": { "line": 1547, "column": 23, "offset": 58201 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "On radar signal processing:",
                        "position": {
                            "start": { "line": 1549, "column": 1, "offset": 58203 },
                            "end": { "line": 1549, "column": 28, "offset": 58230 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1549, "column": 1, "offset": 58203 }, "end": { "line": 1549, "column": 28, "offset": 58230 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Mark A. Richards, ",
                                        "position": {
                                            "start": { "line": 1551, "column": 5, "offset": 58236 },
                                            "end": { "line": 1551, "column": 23, "offset": 58254 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Principles of Modern Radar: Basic Principles",
                                                "position": {
                                                    "start": { "line": 1551, "column": 24, "offset": 58255 },
                                                    "end": { "line": 1551, "column": 68, "offset": 58299 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1551, "column": 23, "offset": 58254 },
                                            "end": { "line": 1551, "column": 69, "offset": 58300 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ",\nSciTech, 2010",
                                        "position": {
                                            "start": { "line": 1551, "column": 69, "offset": 58300 },
                                            "end": { "line": 1552, "column": 18, "offset": 58319 },
                                            "indent": [5]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1551, "column": 5, "offset": 58236 },
                                    "end": { "line": 1552, "column": 18, "offset": 58319 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1551, "column": 1, "offset": 58232 },
                            "end": { "line": 1552, "column": 18, "offset": 58319 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Mark A. Richards, ",
                                        "position": {
                                            "start": { "line": 1553, "column": 5, "offset": 58324 },
                                            "end": { "line": 1553, "column": 23, "offset": 58342 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Fundamentals of Radar Signal Processing",
                                                "position": {
                                                    "start": { "line": 1553, "column": 24, "offset": 58343 },
                                                    "end": { "line": 1553, "column": 63, "offset": 58382 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1553, "column": 23, "offset": 58342 },
                                            "end": { "line": 1553, "column": 64, "offset": 58383 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ",\nMcGraw-Hill, 2014.",
                                        "position": {
                                            "start": { "line": 1553, "column": 64, "offset": 58383 },
                                            "end": { "line": 1554, "column": 23, "offset": 58407 },
                                            "indent": [5]
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1553, "column": 5, "offset": 58324 },
                                    "end": { "line": 1554, "column": 23, "offset": 58407 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1553, "column": 1, "offset": 58320 },
                            "end": { "line": 1554, "column": 23, "offset": 58407 },
                            "indent": [1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1551, "column": 1, "offset": 58232 },
                    "end": { "line": 1554, "column": 23, "offset": 58407 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- exercise begin -->",
                "position": { "start": { "line": 1556, "column": 1, "offset": 58409 }, "end": { "line": 1556, "column": 24, "offset": 58432 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Exercise:",
                                "position": {
                                    "start": { "line": 1558, "column": 3, "offset": 58436 },
                                    "end": { "line": 1558, "column": 12, "offset": 58445 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1558, "column": 1, "offset": 58434 },
                            "end": { "line": 1558, "column": 14, "offset": 58447 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " The FFT is often used to speed up image convolution\n(convolution is the application of a moving filter mask). Convolve an\nimage with ",
                        "position": {
                            "start": { "line": 1558, "column": 14, "offset": 58447 },
                            "end": { "line": 1560, "column": 12, "offset": 58581 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "np.ones((5, 5))",
                        "position": {
                            "start": { "line": 1560, "column": 12, "offset": 58581 },
                            "end": { "line": 1560, "column": 29, "offset": 58598 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ", using a) numpy's ",
                        "position": {
                            "start": { "line": 1560, "column": 29, "offset": 58598 },
                            "end": { "line": 1560, "column": 48, "offset": 58617 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "np.convolve",
                        "position": {
                            "start": { "line": 1560, "column": 48, "offset": 58617 },
                            "end": { "line": 1560, "column": 61, "offset": 58630 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and\nb) ",
                        "position": {
                            "start": { "line": 1560, "column": 61, "offset": 58630 },
                            "end": { "line": 1561, "column": 4, "offset": 58638 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "np.fft.fft2",
                        "position": {
                            "start": { "line": 1561, "column": 4, "offset": 58638 },
                            "end": { "line": 1561, "column": 17, "offset": 58651 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". Confirm that the results are identical.",
                        "position": {
                            "start": { "line": 1561, "column": 17, "offset": 58651 },
                            "end": { "line": 1561, "column": 58, "offset": 58692 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1558, "column": 1, "offset": 58434 },
                    "end": { "line": 1561, "column": 58, "offset": 58692 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Hints:",
                        "position": {
                            "start": { "line": 1563, "column": 1, "offset": 58694 },
                            "end": { "line": 1563, "column": 7, "offset": 58700 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1563, "column": 1, "offset": 58694 }, "end": { "line": 1563, "column": 7, "offset": 58700 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "The convolution of ",
                                        "position": {
                                            "start": { "line": 1565, "column": 5, "offset": 58706 },
                                            "end": { "line": 1565, "column": 24, "offset": 58725 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "x",
                                        "position": {
                                            "start": { "line": 1565, "column": 24, "offset": 58725 },
                                            "end": { "line": 1565, "column": 27, "offset": 58728 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " and ",
                                        "position": {
                                            "start": { "line": 1565, "column": 27, "offset": 58728 },
                                            "end": { "line": 1565, "column": 32, "offset": 58733 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "y",
                                        "position": {
                                            "start": { "line": 1565, "column": 32, "offset": 58733 },
                                            "end": { "line": 1565, "column": 35, "offset": 58736 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " is equivalent to ",
                                        "position": {
                                            "start": { "line": 1565, "column": 35, "offset": 58736 },
                                            "end": { "line": 1565, "column": 53, "offset": 58754 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "ifft2(X * Y)",
                                        "position": {
                                            "start": { "line": 1565, "column": 53, "offset": 58754 },
                                            "end": { "line": 1565, "column": 67, "offset": 58768 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", where\n",
                                        "position": {
                                            "start": { "line": 1565, "column": 67, "offset": 58768 },
                                            "end": { "line": 1566, "column": 5, "offset": 58780 },
                                            "indent": [5]
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "X",
                                        "position": {
                                            "start": { "line": 1566, "column": 5, "offset": 58780 },
                                            "end": { "line": 1566, "column": 8, "offset": 58783 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " and ",
                                        "position": {
                                            "start": { "line": 1566, "column": 8, "offset": 58783 },
                                            "end": { "line": 1566, "column": 13, "offset": 58788 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "Y",
                                        "position": {
                                            "start": { "line": 1566, "column": 13, "offset": 58788 },
                                            "end": { "line": 1566, "column": 16, "offset": 58791 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " are the FFTs of x and y respectively.",
                                        "position": {
                                            "start": { "line": 1566, "column": 16, "offset": 58791 },
                                            "end": { "line": 1566, "column": 54, "offset": 58829 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1565, "column": 5, "offset": 58706 },
                                    "end": { "line": 1566, "column": 54, "offset": 58829 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1565, "column": 1, "offset": 58702 },
                            "end": { "line": 1566, "column": 54, "offset": 58829 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "In order to multiply ",
                                        "position": {
                                            "start": { "line": 1567, "column": 5, "offset": 58834 },
                                            "end": { "line": 1567, "column": 26, "offset": 58855 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "X",
                                        "position": {
                                            "start": { "line": 1567, "column": 26, "offset": 58855 },
                                            "end": { "line": 1567, "column": 29, "offset": 58858 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " and ",
                                        "position": {
                                            "start": { "line": 1567, "column": 29, "offset": 58858 },
                                            "end": { "line": 1567, "column": 34, "offset": 58863 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "Y",
                                        "position": {
                                            "start": { "line": 1567, "column": 34, "offset": 58863 },
                                            "end": { "line": 1567, "column": 37, "offset": 58866 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ", they have to be the same size.\nUse ",
                                        "position": {
                                            "start": { "line": 1567, "column": 37, "offset": 58866 },
                                            "end": { "line": 1568, "column": 9, "offset": 58907 },
                                            "indent": [5]
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "np.pad",
                                        "position": {
                                            "start": { "line": 1568, "column": 9, "offset": 58907 },
                                            "end": { "line": 1568, "column": 17, "offset": 58915 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " to extend ",
                                        "position": {
                                            "start": { "line": 1568, "column": 17, "offset": 58915 },
                                            "end": { "line": 1568, "column": 28, "offset": 58926 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "x",
                                        "position": {
                                            "start": { "line": 1568, "column": 28, "offset": 58926 },
                                            "end": { "line": 1568, "column": 31, "offset": 58929 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " and ",
                                        "position": {
                                            "start": { "line": 1568, "column": 31, "offset": 58929 },
                                            "end": { "line": 1568, "column": 36, "offset": 58934 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "y",
                                        "position": {
                                            "start": { "line": 1568, "column": 36, "offset": 58934 },
                                            "end": { "line": 1568, "column": 39, "offset": 58937 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " with zeros (toward the right and\nbottom) ",
                                        "position": {
                                            "start": { "line": 1568, "column": 39, "offset": 58937 },
                                            "end": { "line": 1569, "column": 13, "offset": 58983 },
                                            "indent": [5]
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "before",
                                                "position": {
                                                    "start": { "line": 1569, "column": 14, "offset": 58984 },
                                                    "end": { "line": 1569, "column": 20, "offset": 58990 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1569, "column": 13, "offset": 58983 },
                                            "end": { "line": 1569, "column": 21, "offset": 58991 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " taking their FFT.",
                                        "position": {
                                            "start": { "line": 1569, "column": 21, "offset": 58991 },
                                            "end": { "line": 1569, "column": 39, "offset": 59009 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1567, "column": 5, "offset": 58834 },
                                    "end": { "line": 1569, "column": 39, "offset": 59009 },
                                    "indent": [5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1567, "column": 1, "offset": 58830 },
                            "end": { "line": 1569, "column": 39, "offset": 59009 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "You may see some edge effects. These can be removed by increasing\nthe padding size, so that both ",
                                        "position": {
                                            "start": { "line": 1570, "column": 5, "offset": 59014 },
                                            "end": { "line": 1571, "column": 36, "offset": 59115 },
                                            "indent": [5]
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "x",
                                        "position": {
                                            "start": { "line": 1571, "column": 36, "offset": 59115 },
                                            "end": { "line": 1571, "column": 39, "offset": 59118 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " and ",
                                        "position": {
                                            "start": { "line": 1571, "column": 39, "offset": 59118 },
                                            "end": { "line": 1571, "column": 44, "offset": 59123 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "y",
                                        "position": {
                                            "start": { "line": 1571, "column": 44, "offset": 59123 },
                                            "end": { "line": 1571, "column": 47, "offset": 59126 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " have dimensions\n",
                                        "position": {
                                            "start": { "line": 1571, "column": 47, "offset": 59126 },
                                            "end": { "line": 1572, "column": 5, "offset": 59147 },
                                            "indent": [5]
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "shape(x) + shape(y) - 1",
                                        "position": {
                                            "start": { "line": 1572, "column": 5, "offset": 59147 },
                                            "end": { "line": 1572, "column": 30, "offset": 59172 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ".",
                                        "position": {
                                            "start": { "line": 1572, "column": 30, "offset": 59172 },
                                            "end": { "line": 1572, "column": 31, "offset": 59173 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1570, "column": 5, "offset": 59014 },
                                    "end": { "line": 1572, "column": 31, "offset": 59173 },
                                    "indent": [5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1570, "column": 1, "offset": 59010 },
                            "end": { "line": 1572, "column": 31, "offset": 59173 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1565, "column": 1, "offset": 58702 },
                    "end": { "line": 1572, "column": 31, "offset": 59173 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- solution begin -->",
                "position": { "start": { "line": 1574, "column": 1, "offset": 59175 }, "end": { "line": 1574, "column": 24, "offset": 59198 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Solution:",
                                "position": {
                                    "start": { "line": 1576, "column": 3, "offset": 59202 },
                                    "end": { "line": 1576, "column": 12, "offset": 59211 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1576, "column": 1, "offset": 59200 },
                            "end": { "line": 1576, "column": 14, "offset": 59213 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1576, "column": 1, "offset": 59200 }, "end": { "line": 1576, "column": 14, "offset": 59213 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "python",
                "meta": null,
                "value": "from scipy import signal\n\nx = np.random.random((50, 50))\ny = np.ones((5, 5))\n\nL = x.shape[0] + y.shape[0] - 1\nPx = L - x.shape[0]\nPy = L - y.shape[0]\n\nxx = np.pad(x, ((0, Px), (0, Px)), mode='constant')\nyy = np.pad(y, ((0, Py), (0, Py)), mode='constant')\n\nzz = np.fft.ifft2(np.fft.fft2(xx) * np.fft.fft2(yy)).real\nprint('Resulting shape:', zz.shape, ' <-- Why?')\n\nz = signal.convolve2d(x, y)\n\nprint('Results are equal?', np.allclose(zz, z))",
                "position": {
                    "start": { "line": 1578, "column": 1, "offset": 59215 },
                    "end": { "line": 1597, "column": 4, "offset": 59669 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "html",
                "value": "<!-- solution end -->",
                "position": { "start": { "line": 1599, "column": 1, "offset": 59671 }, "end": { "line": 1599, "column": 22, "offset": 59692 }, "indent": [] }
            },
            {
                "type": "html",
                "value": "<!-- exercise end -->",
                "position": { "start": { "line": 1601, "column": 1, "offset": 59694 }, "end": { "line": 1601, "column": 22, "offset": 59715 }, "indent": [] }
            }
        ],
        "position": { "start": { "line": 1, "column": 1, "offset": 0 }, "end": { "line": 1602, "column": 1, "offset": 59716 } }
    }
}
