{
    "expireTime": 9007200888441165000,
    "key": "transformer-remark-markdown-ast-cc3fe73f0d4be020a489ba0bf457ccee--",
    "val": {
        "type": "root",
        "children": [
            {
                "type": "html",
                "value": "<script async src=\"//jsfiddle.net/bgoonz/tu3Lw57r/embed/result/dark/\"></script>",
                "position": { "start": { "line": 2, "column": 1, "offset": 1 }, "end": { "line": 2, "column": 80, "offset": 80 }, "indent": [] }
            },
            {
                "type": "html",
                "value": "<iframe height=\"300\" style=\"width: 100%;\" scrolling=\"no\" title=\"Linear vs Binary Search\" src=\"https://codepen.io/bgoonz/embed/MWbZoOa?default-tab=result&editable=true&theme-id=light\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/bgoonz/pen/MWbZoOa\">\n  Linear vs Binary Search</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>",
                "position": { "start": { "line": 4, "column": 1, "offset": 82 }, "end": { "line": 8, "column": 10, "offset": 562 }, "indent": [1, 1, 1, 1] }
            },
            {
                "type": "html",
                "value": "<p class=\"codepen\" data-height=\"300\" data-theme-id=\"light\" data-default-tab=\"result\" data-slug-hash=\"GRNPEdY\" data-editable=\"true\" data-user=\"bgoonz\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/bgoonz/pen/GRNPEdY\">\n  Data Structures Viz</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>",
                "position": {
                    "start": { "line": 10, "column": 1, "offset": 564 },
                    "end": { "line": 15, "column": 80, "offset": 1171 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "Callstack Visualizer",
                        "position": { "start": { "line": 17, "column": 4, "offset": 1176 }, "end": { "line": 17, "column": 24, "offset": 1196 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 17, "column": 1, "offset": 1173 }, "end": { "line": 17, "column": 24, "offset": 1196 }, "indent": [] }
            },
            {
                "type": "html",
                "value": "<iframe src=\"https://visualize-callstack-qdvyu8oyc-visualize42.vercel.app/\" height=\"900px\" width=\"100%\">\n</iframe>",
                "position": { "start": { "line": 19, "column": 1, "offset": 1198 }, "end": { "line": 20, "column": 10, "offset": 1312 }, "indent": [1] }
            },
            {
                "type": "heading",
                "depth": 6,
                "children": [
                    {
                        "type": "text",
                        "value": "About the Call Stack",
                        "position": { "start": { "line": 22, "column": 8, "offset": 1321 }, "end": { "line": 22, "column": 28, "offset": 1341 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 22, "column": 1, "offset": 1314 }, "end": { "line": 22, "column": 28, "offset": 1341 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "TL;DR",
                                "position": {
                                    "start": { "line": 24, "column": 3, "offset": 1345 },
                                    "end": { "line": 24, "column": 8, "offset": 1350 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 24, "column": 1, "offset": 1343 }, "end": { "line": 24, "column": 10, "offset": 1352 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " *The ",
                        "position": { "start": { "line": 24, "column": 10, "offset": 1352 }, "end": { "line": 24, "column": 16, "offset": 1358 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 24, "column": 18, "offset": 1360 },
                                    "end": { "line": 24, "column": 28, "offset": 1370 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 24, "column": 16, "offset": 1358 }, "end": { "line": 24, "column": 30, "offset": 1372 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " tracks function calls. It is a LIFO stack of frames. Each frame represents a function call.*",
                        "position": {
                            "start": { "line": 24, "column": 30, "offset": 1372 },
                            "end": { "line": 24, "column": 123, "offset": 1465 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 24, "column": 1, "offset": 1343 }, "end": { "line": 24, "column": 123, "offset": 1465 }, "indent": [] }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 26, "column": 1, "offset": 1467 }, "end": { "line": 26, "column": 4, "offset": 1470 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The ",
                        "position": { "start": { "line": 28, "column": 1, "offset": 1472 }, "end": { "line": 28, "column": 5, "offset": 1476 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 28, "column": 7, "offset": 1478 },
                                    "end": { "line": 28, "column": 17, "offset": 1488 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 28, "column": 5, "offset": 1476 }, "end": { "line": 28, "column": 19, "offset": 1490 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " is a fundamental part of the JavaScript language. It is a record-keeping structure that allows us to perform function calls. Each function call is represented as a frame on the ",
                        "position": {
                            "start": { "line": 28, "column": 19, "offset": 1490 },
                            "end": { "line": 28, "column": 197, "offset": 1668 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 28, "column": 199, "offset": 1670 },
                                    "end": { "line": 28, "column": 209, "offset": 1680 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 28, "column": 197, "offset": 1668 },
                            "end": { "line": 28, "column": 211, "offset": 1682 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". This is how the JavaScript engine keeps track of which functions have been called and in what order. The JS engine uses this information to ensure execution picks back up in the right spot after a function returns.",
                        "position": {
                            "start": { "line": 28, "column": 211, "offset": 1682 },
                            "end": { "line": 28, "column": 427, "offset": 1898 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 28, "column": 1, "offset": 1472 }, "end": { "line": 28, "column": 427, "offset": 1898 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "When a JavaScript program first starts executing, the ",
                        "position": { "start": { "line": 30, "column": 1, "offset": 1900 }, "end": { "line": 30, "column": 55, "offset": 1954 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 30, "column": 57, "offset": 1956 },
                                    "end": { "line": 30, "column": 67, "offset": 1966 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 30, "column": 55, "offset": 1954 }, "end": { "line": 30, "column": 69, "offset": 1968 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " is empty. When the first function call is made, a new frame is pushed onto the top of the ",
                        "position": {
                            "start": { "line": 30, "column": 69, "offset": 1968 },
                            "end": { "line": 30, "column": 160, "offset": 2059 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 30, "column": 162, "offset": 2061 },
                                    "end": { "line": 30, "column": 172, "offset": 2071 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 30, "column": 160, "offset": 2059 },
                            "end": { "line": 30, "column": 174, "offset": 2073 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". When that function returns, its frame is popped off of the ",
                        "position": {
                            "start": { "line": 30, "column": 174, "offset": 2073 },
                            "end": { "line": 30, "column": 235, "offset": 2134 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Call Stack",
                                "position": {
                                    "start": { "line": 30, "column": 237, "offset": 2136 },
                                    "end": { "line": 30, "column": 247, "offset": 2146 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 30, "column": 235, "offset": 2134 },
                            "end": { "line": 30, "column": 249, "offset": 2148 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 30, "column": 249, "offset": 2148 },
                            "end": { "line": 30, "column": 250, "offset": 2149 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 30, "column": 1, "offset": 1900 }, "end": { "line": 30, "column": 250, "offset": 2149 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 6,
                "children": [
                    {
                        "type": "text",
                        "value": "About the Event Loop",
                        "position": { "start": { "line": 32, "column": 8, "offset": 2158 }, "end": { "line": 32, "column": 28, "offset": 2178 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 32, "column": 1, "offset": 2151 }, "end": { "line": 32, "column": 28, "offset": 2178 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "TL;DR",
                                "position": {
                                    "start": { "line": 34, "column": 3, "offset": 2182 },
                                    "end": { "line": 34, "column": 8, "offset": 2187 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 34, "column": 1, "offset": 2180 }, "end": { "line": 34, "column": 10, "offset": 2189 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " *The ",
                        "position": { "start": { "line": 34, "column": 10, "offset": 2189 }, "end": { "line": 34, "column": 16, "offset": 2195 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Event Loop",
                                "position": {
                                    "start": { "line": 34, "column": 18, "offset": 2197 },
                                    "end": { "line": 34, "column": 28, "offset": 2207 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 34, "column": 16, "offset": 2195 }, "end": { "line": 34, "column": 30, "offset": 2209 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " processes Tasks and Microtasks. It places them into the Call Stack for execution one at a time. It also controls when rerendering occurs.*",
                        "position": {
                            "start": { "line": 34, "column": 30, "offset": 2209 },
                            "end": { "line": 34, "column": 169, "offset": 2348 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 34, "column": 1, "offset": 2180 }, "end": { "line": 34, "column": 169, "offset": 2348 }, "indent": [] }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 36, "column": 1, "offset": 2350 }, "end": { "line": 36, "column": 4, "offset": 2353 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The Event Loop is a looping algorithm that processes the Tasks/Microtasks in the Task Queue and Microtask Queue. It handles selecting the next Task/Microtask to be run and placing it in the Call Stack for execution.",
                        "position": { "start": { "line": 38, "column": 1, "offset": 2355 }, "end": { "line": 38, "column": 216, "offset": 2570 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 38, "column": 1, "offset": 2355 }, "end": { "line": 38, "column": 216, "offset": 2570 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The Event Loop algorithm consists of four key steps:",
                        "position": { "start": { "line": 40, "column": 1, "offset": 2572 }, "end": { "line": 40, "column": 53, "offset": 2624 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 40, "column": 1, "offset": 2572 }, "end": { "line": 40, "column": 53, "offset": 2624 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": true,
                "start": 1,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Evaluate Script:",
                                                "position": {
                                                    "start": { "line": 42, "column": 7, "offset": 2632 },
                                                    "end": { "line": 42, "column": 23, "offset": 2648 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 42, "column": 5, "offset": 2630 },
                                            "end": { "line": 42, "column": 25, "offset": 2650 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " Synchronously execute the script as though it were a function body. Run until the Call Stack is empty.",
                                        "position": {
                                            "start": { "line": 42, "column": 25, "offset": 2650 },
                                            "end": { "line": 42, "column": 128, "offset": 2753 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 42, "column": 5, "offset": 2630 },
                                    "end": { "line": 42, "column": 128, "offset": 2753 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 42, "column": 1, "offset": 2626 }, "end": { "line": 42, "column": 128, "offset": 2753 }, "indent": [] }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Run a Task:",
                                                "position": {
                                                    "start": { "line": 43, "column": 7, "offset": 2760 },
                                                    "end": { "line": 43, "column": 18, "offset": 2771 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 43, "column": 5, "offset": 2758 },
                                            "end": { "line": 43, "column": 20, "offset": 2773 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " Select the oldest Task from the Task Queue. Run it until the Call Stack is empty.",
                                        "position": {
                                            "start": { "line": 43, "column": 20, "offset": 2773 },
                                            "end": { "line": 43, "column": 102, "offset": 2855 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 43, "column": 5, "offset": 2758 },
                                    "end": { "line": 43, "column": 102, "offset": 2855 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 43, "column": 1, "offset": 2754 }, "end": { "line": 43, "column": 102, "offset": 2855 }, "indent": [] }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Run all Microtasks:",
                                                "position": {
                                                    "start": { "line": 44, "column": 7, "offset": 2862 },
                                                    "end": { "line": 44, "column": 26, "offset": 2881 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 44, "column": 5, "offset": 2860 },
                                            "end": { "line": 44, "column": 28, "offset": 2883 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " Select the oldest Microtask from the Microtask Queue. Run it until the Call Stack is empty. Repeat until the Microtask Queue is empty.",
                                        "position": {
                                            "start": { "line": 44, "column": 28, "offset": 2883 },
                                            "end": { "line": 44, "column": 163, "offset": 3018 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 44, "column": 5, "offset": 2860 },
                                    "end": { "line": 44, "column": 163, "offset": 3018 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 44, "column": 1, "offset": 2856 }, "end": { "line": 44, "column": 163, "offset": 3018 }, "indent": [] }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "Rerender the UI:",
                                                "position": {
                                                    "start": { "line": 45, "column": 7, "offset": 3025 },
                                                    "end": { "line": 45, "column": 23, "offset": 3041 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 45, "column": 5, "offset": 3023 },
                                            "end": { "line": 45, "column": 25, "offset": 3043 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " Rerender the UI. Then, return to step 2. (This step only applies to browsers, not NodeJS).",
                                        "position": {
                                            "start": { "line": 45, "column": 25, "offset": 3043 },
                                            "end": { "line": 45, "column": 116, "offset": 3134 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 45, "column": 5, "offset": 3023 },
                                    "end": { "line": 45, "column": 116, "offset": 3134 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 45, "column": 1, "offset": 3019 }, "end": { "line": 45, "column": 116, "offset": 3134 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 42, "column": 1, "offset": 2626 }, "end": { "line": 45, "column": 116, "offset": 3134 }, "indent": [1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Let's model the Event Loop with some JavaScript psuedocode:",
                        "position": { "start": { "line": 47, "column": 1, "offset": 3136 }, "end": { "line": 47, "column": 60, "offset": 3195 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 47, "column": 1, "offset": 3136 }, "end": { "line": 47, "column": 60, "offset": 3195 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "while (EventLoop.waitForTask()) {\n  const taskQueue = EventLoop.selectTaskQueue();\n  if (taskQueue.hasNextTask()) {\n    taskQueue.processNextTask();\n  }\n\n  const microtaskQueue = EventLoop.microTaskQueue;\n  while (microtaskQueue.hasNextMicrotask()) {\n    microtaskQueue.processNextMicrotask();\n  }\n\n  rerender();\n}",
                "position": {
                    "start": { "line": 49, "column": 1, "offset": 3197 },
                    "end": { "line": 63, "column": 4, "offset": 3519 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            }
        ],
        "position": { "start": { "line": 1, "column": 1, "offset": 0 }, "end": { "line": 64, "column": 1, "offset": 3520 } }
    }
}
