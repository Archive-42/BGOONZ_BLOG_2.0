{
    "expireTime": 9007200888440671000,
    "key": "transformer-remark-markdown-ast-c8be241721b3b1dd8e14938f5321a17d--",
    "val": {
        "type": "root",
        "children": [
            {
                "type": "heading",
                "depth": 1,
                "children": [
                    {
                        "type": "text",
                        "value": "Leetcode",
                        "position": { "start": { "line": 2, "column": 3, "offset": 3 }, "end": { "line": 2, "column": 11, "offset": 11 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 2, "column": 1, "offset": 1 }, "end": { "line": 2, "column": 11, "offset": 11 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "Data Structures & Algorithms",
                        "position": { "start": { "line": 4, "column": 4, "offset": 16 }, "end": { "line": 4, "column": 32, "offset": 44 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 4, "column": 1, "offset": 13 }, "end": { "line": 4, "column": 32, "offset": 44 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://github.com/bgoonz/Data-Structures-Algos-Codebase",
                        "children": [
                            {
                                "type": "text",
                                "value": "DS Algo Codebase",
                                "position": {
                                    "start": { "line": 6, "column": 2, "offset": 47 },
                                    "end": { "line": 6, "column": 18, "offset": 63 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 6, "column": 1, "offset": 46 }, "end": { "line": 6, "column": 77, "offset": 122 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 6, "column": 1, "offset": 46 }, "end": { "line": 6, "column": 77, "offset": 122 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 8, "column": 2, "offset": 125 },
                                    "end": { "line": 8, "column": 142, "offset": 265 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 8, "column": 1, "offset": 124 }, "end": { "line": 8, "column": 227, "offset": 350 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 8, "column": 1, "offset": 124 }, "end": { "line": 8, "column": 227, "offset": 350 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": { "start": { "line": 10, "column": 4, "offset": 355 }, "end": { "line": 10, "column": 6, "offset": 357 }, "indent": [] }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/distinct-subsequences/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "115. Distinct Subsequences",
                                "position": {
                                    "start": { "line": 10, "column": 7, "offset": 358 },
                                    "end": { "line": 10, "column": 33, "offset": 384 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 10, "column": 6, "offset": 357 }, "end": { "line": 10, "column": 100, "offset": 451 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 10, "column": 1, "offset": 352 }, "end": { "line": 10, "column": 100, "offset": 451 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": { "start": { "line": 12, "column": 5, "offset": 457 }, "end": { "line": 12, "column": 13, "offset": 465 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 12, "column": 1, "offset": 453 }, "end": { "line": 12, "column": 13, "offset": 465 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a string ",
                        "position": { "start": { "line": 14, "column": 1, "offset": 467 }, "end": { "line": 14, "column": 16, "offset": 482 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "S",
                                "position": {
                                    "start": { "line": 14, "column": 18, "offset": 484 },
                                    "end": { "line": 14, "column": 19, "offset": 485 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 14, "column": 16, "offset": 482 }, "end": { "line": 14, "column": 21, "offset": 487 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " and a string ",
                        "position": { "start": { "line": 14, "column": 21, "offset": 487 }, "end": { "line": 14, "column": 35, "offset": 501 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "T",
                                "position": {
                                    "start": { "line": 14, "column": 37, "offset": 503 },
                                    "end": { "line": 14, "column": 38, "offset": 504 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 14, "column": 35, "offset": 501 }, "end": { "line": 14, "column": 40, "offset": 506 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": ", count the number of distinct subsequences of ",
                        "position": { "start": { "line": 14, "column": 40, "offset": 506 }, "end": { "line": 14, "column": 87, "offset": 553 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "S",
                                "position": {
                                    "start": { "line": 14, "column": 89, "offset": 555 },
                                    "end": { "line": 14, "column": 90, "offset": 556 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 14, "column": 87, "offset": 553 }, "end": { "line": 14, "column": 92, "offset": 558 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " which equals ",
                        "position": { "start": { "line": 14, "column": 92, "offset": 558 }, "end": { "line": 14, "column": 106, "offset": 572 }, "indent": [] }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "T",
                                "position": {
                                    "start": { "line": 14, "column": 108, "offset": 574 },
                                    "end": { "line": 14, "column": 109, "offset": 575 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 14, "column": 106, "offset": 572 }, "end": { "line": 14, "column": 111, "offset": 577 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": { "start": { "line": 14, "column": 111, "offset": 577 }, "end": { "line": 14, "column": 112, "offset": 578 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 14, "column": 1, "offset": 467 }, "end": { "line": 14, "column": 112, "offset": 578 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ",
                        "position": { "start": { "line": 16, "column": 1, "offset": 580 }, "end": { "line": 16, "column": 209, "offset": 788 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "\"ACE\"",
                        "position": { "start": { "line": 16, "column": 209, "offset": 788 }, "end": { "line": 16, "column": 216, "offset": 795 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " is a subsequence of ",
                        "position": { "start": { "line": 16, "column": 216, "offset": 795 }, "end": { "line": 16, "column": 237, "offset": 816 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "\"ABCDE\"",
                        "position": { "start": { "line": 16, "column": 237, "offset": 816 }, "end": { "line": 16, "column": 246, "offset": 825 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " while ",
                        "position": { "start": { "line": 16, "column": 246, "offset": 825 }, "end": { "line": 16, "column": 253, "offset": 832 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "\"AEC\"",
                        "position": { "start": { "line": 16, "column": 253, "offset": 832 }, "end": { "line": 16, "column": 260, "offset": 839 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " is not).",
                        "position": { "start": { "line": 16, "column": 260, "offset": 839 }, "end": { "line": 16, "column": 269, "offset": 848 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 16, "column": 1, "offset": 580 }, "end": { "line": 16, "column": 269, "offset": 848 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 18, "column": 3, "offset": 852 },
                                    "end": { "line": 18, "column": 13, "offset": 862 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 18, "column": 1, "offset": 850 }, "end": { "line": 18, "column": 15, "offset": 864 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 18, "column": 1, "offset": 850 }, "end": { "line": 18, "column": 15, "offset": 864 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^",
                "position": {
                    "start": { "line": 20, "column": 1, "offset": 866 },
                    "end": { "line": 32, "column": 12, "offset": 1130 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 34, "column": 3, "offset": 1134 },
                                    "end": { "line": 34, "column": 13, "offset": 1144 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 34, "column": 1, "offset": 1132 }, "end": { "line": 34, "column": 15, "offset": 1146 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 34, "column": 1, "offset": 1132 }, "end": { "line": 34, "column": 15, "offset": 1146 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^",
                "position": {
                    "start": { "line": 36, "column": 1, "offset": 1148 },
                    "end": { "line": 52, "column": 12, "offset": 1451 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": { "start": { "line": 54, "column": 5, "offset": 1457 }, "end": { "line": 54, "column": 14, "offset": 1466 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 54, "column": 1, "offset": 1453 }, "end": { "line": 54, "column": 14, "offset": 1466 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Define ",
                        "position": { "start": { "line": 56, "column": 1, "offset": 1468 }, "end": { "line": 56, "column": 8, "offset": 1475 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "f(i, j)",
                        "position": { "start": { "line": 56, "column": 8, "offset": 1475 }, "end": { "line": 56, "column": 17, "offset": 1484 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " to be the number of ways that generate ",
                        "position": { "start": { "line": 56, "column": 17, "offset": 1484 }, "end": { "line": 56, "column": 57, "offset": 1524 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "T[0...j)",
                        "position": { "start": { "line": 56, "column": 57, "offset": 1524 }, "end": { "line": 56, "column": 67, "offset": 1534 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " from ",
                        "position": { "start": { "line": 56, "column": 67, "offset": 1534 }, "end": { "line": 56, "column": 73, "offset": 1540 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "S[0...i)",
                        "position": { "start": { "line": 56, "column": 73, "offset": 1540 }, "end": { "line": 56, "column": 83, "offset": 1550 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": { "start": { "line": 56, "column": 83, "offset": 1550 }, "end": { "line": 56, "column": 84, "offset": 1551 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 56, "column": 1, "offset": 1468 }, "end": { "line": 56, "column": 84, "offset": 1551 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For ",
                        "position": { "start": { "line": 58, "column": 1, "offset": 1553 }, "end": { "line": 58, "column": 5, "offset": 1557 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "f(i, j)",
                        "position": { "start": { "line": 58, "column": 5, "offset": 1557 }, "end": { "line": 58, "column": 14, "offset": 1566 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": " you can always skip ",
                        "position": { "start": { "line": 58, "column": 14, "offset": 1566 }, "end": { "line": 58, "column": 35, "offset": 1587 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "S[i-1]",
                        "position": { "start": { "line": 58, "column": 35, "offset": 1587 }, "end": { "line": 58, "column": 43, "offset": 1595 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": ", but can only take it when ",
                        "position": { "start": { "line": 58, "column": 43, "offset": 1595 }, "end": { "line": 58, "column": 71, "offset": 1623 }, "indent": [] }
                    },
                    {
                        "type": "inlineCode",
                        "value": "S[i-1] === T[j-1]",
                        "position": { "start": { "line": 58, "column": 71, "offset": 1623 }, "end": { "line": 58, "column": 90, "offset": 1642 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": { "start": { "line": 58, "column": 90, "offset": 1642 }, "end": { "line": 58, "column": 91, "offset": 1643 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 58, "column": 1, "offset": 1553 }, "end": { "line": 58, "column": 91, "offset": 1643 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)",
                "position": { "start": { "line": 60, "column": 1, "offset": 1645 }, "end": { "line": 64, "column": 4, "offset": 1788 }, "indent": [1, 1, 1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Dynamic array can be used.",
                        "position": { "start": { "line": 66, "column": 1, "offset": 1790 }, "end": { "line": 66, "column": 27, "offset": 1816 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 66, "column": 1, "offset": 1790 }, "end": { "line": 66, "column": 27, "offset": 1816 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};",
                "position": {
                    "start": { "line": 68, "column": 1, "offset": 1818 },
                    "end": { "line": 88, "column": 4, "offset": 2265 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 90, "column": 1, "offset": 2267 }, "end": { "line": 90, "column": 4, "offset": 2270 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Medium\nRelated Topics:\n\"Tree\": ",
                        "position": {
                            "start": { "line": 92, "column": 1, "offset": 2272 },
                            "end": { "line": 94, "column": 9, "offset": 2315 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/tree",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/tree",
                                "position": {
                                    "start": { "line": 94, "column": 9, "offset": 2315 },
                                    "end": { "line": 94, "column": 38, "offset": 2344 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 94, "column": 9, "offset": 2315 }, "end": { "line": 94, "column": 38, "offset": 2344 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Depth-first Search\": ",
                        "position": {
                            "start": { "line": 94, "column": 38, "offset": 2344 },
                            "end": { "line": 95, "column": 23, "offset": 2367 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/depth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/depth-first-search",
                                "position": {
                                    "start": { "line": 95, "column": 23, "offset": 2367 },
                                    "end": { "line": 95, "column": 66, "offset": 2410 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 95, "column": 23, "offset": 2367 }, "end": { "line": 95, "column": 66, "offset": 2410 }, "indent": [] }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ",
                        "position": {
                            "start": { "line": 95, "column": 66, "offset": 2410 },
                            "end": { "line": 97, "column": 51, "offset": 2480 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",
                                "position": {
                                    "start": { "line": 97, "column": 51, "offset": 2480 },
                                    "end": { "line": 97, "column": 127, "offset": 2556 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 97, "column": 51, "offset": 2480 },
                            "end": { "line": 97, "column": 127, "offset": 2556 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Binary Tree Right Side View\": ",
                        "position": {
                            "start": { "line": 97, "column": 127, "offset": 2556 },
                            "end": { "line": 98, "column": 32, "offset": 2588 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/binary-tree-right-side-view",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/binary-tree-right-side-view",
                                "position": {
                                    "start": { "line": 98, "column": 32, "offset": 2588 },
                                    "end": { "line": 98, "column": 89, "offset": 2645 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": { "start": { "line": 98, "column": 32, "offset": 2588 }, "end": { "line": 98, "column": 89, "offset": 2645 }, "indent": [] }
                    }
                ],
                "position": {
                    "start": { "line": 92, "column": 1, "offset": 2272 },
                    "end": { "line": 98, "column": 89, "offset": 2645 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 100, "column": 1, "offset": 2647 }, "end": { "line": 100, "column": 4, "offset": 2650 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 102, "column": 2, "offset": 2653 },
                                    "end": { "line": 102, "column": 142, "offset": 2793 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 102, "column": 1, "offset": 2652 },
                            "end": { "line": 102, "column": 271, "offset": 2922 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 102, "column": 1, "offset": 2652 }, "end": { "line": 102, "column": 271, "offset": 2922 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": { "start": { "line": 104, "column": 4, "offset": 2927 }, "end": { "line": 104, "column": 6, "offset": 2929 }, "indent": [] }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "116. Populating Next Right Pointers in Each Node",
                                "position": {
                                    "start": { "line": 104, "column": 7, "offset": 2930 },
                                    "end": { "line": 104, "column": 55, "offset": 2978 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 104, "column": 6, "offset": 2929 },
                            "end": { "line": 104, "column": 144, "offset": 3067 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 104, "column": 1, "offset": 2924 }, "end": { "line": 104, "column": 144, "offset": 3067 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 106, "column": 5, "offset": 3073 },
                            "end": { "line": 106, "column": 13, "offset": 3081 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 106, "column": 1, "offset": 3069 }, "end": { "line": 106, "column": 13, "offset": 3081 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a binary tree",
                        "position": {
                            "start": { "line": 108, "column": 1, "offset": 3083 },
                            "end": { "line": 108, "column": 20, "offset": 3102 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 108, "column": 1, "offset": 3083 }, "end": { "line": 108, "column": 20, "offset": 3102 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}",
                "position": {
                    "start": { "line": 110, "column": 1, "offset": 3104 },
                    "end": { "line": 117, "column": 4, "offset": 3203 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ",
                        "position": {
                            "start": { "line": 119, "column": 1, "offset": 3205 },
                            "end": { "line": 119, "column": 127, "offset": 3331 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "NULL",
                        "position": {
                            "start": { "line": 119, "column": 127, "offset": 3331 },
                            "end": { "line": 119, "column": 133, "offset": 3337 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 119, "column": 133, "offset": 3337 },
                            "end": { "line": 119, "column": 134, "offset": 3338 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 119, "column": 1, "offset": 3205 }, "end": { "line": 119, "column": 134, "offset": 3338 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Initially, all next pointers are set to ",
                        "position": {
                            "start": { "line": 121, "column": 1, "offset": 3340 },
                            "end": { "line": 121, "column": 41, "offset": 3380 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "NULL",
                        "position": {
                            "start": { "line": 121, "column": 41, "offset": 3380 },
                            "end": { "line": 121, "column": 47, "offset": 3386 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 121, "column": 47, "offset": 3386 },
                            "end": { "line": 121, "column": 48, "offset": 3387 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 121, "column": 1, "offset": 3340 }, "end": { "line": 121, "column": 48, "offset": 3387 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note:",
                                "position": {
                                    "start": { "line": 123, "column": 3, "offset": 3391 },
                                    "end": { "line": 123, "column": 8, "offset": 3396 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 123, "column": 1, "offset": 3389 },
                            "end": { "line": 123, "column": 10, "offset": 3398 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 123, "column": 1, "offset": 3389 }, "end": { "line": 123, "column": 10, "offset": 3398 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "You may only use constant extra space.",
                                        "position": {
                                            "start": { "line": 125, "column": 5, "offset": 3404 },
                                            "end": { "line": 125, "column": 43, "offset": 3442 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 125, "column": 5, "offset": 3404 },
                                    "end": { "line": 125, "column": 43, "offset": 3442 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 125, "column": 1, "offset": 3400 },
                            "end": { "line": 125, "column": 43, "offset": 3442 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Recursive approach is fine, implicit stack space does not count as extra space for this problem.",
                                        "position": {
                                            "start": { "line": 126, "column": 5, "offset": 3447 },
                                            "end": { "line": 126, "column": 101, "offset": 3543 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 126, "column": 5, "offset": 3447 },
                                    "end": { "line": 126, "column": 101, "offset": 3543 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 126, "column": 1, "offset": 3443 },
                            "end": { "line": 126, "column": 101, "offset": 3543 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).",
                                        "position": {
                                            "start": { "line": 127, "column": 5, "offset": 3548 },
                                            "end": { "line": 127, "column": 127, "offset": 3670 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 127, "column": 5, "offset": 3548 },
                                    "end": { "line": 127, "column": 127, "offset": 3670 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 127, "column": 1, "offset": 3544 },
                            "end": { "line": 127, "column": 127, "offset": 3670 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 125, "column": 1, "offset": 3400 }, "end": { "line": 127, "column": 127, "offset": 3670 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example:",
                                "position": {
                                    "start": { "line": 129, "column": 3, "offset": 3674 },
                                    "end": { "line": 129, "column": 11, "offset": 3682 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 129, "column": 1, "offset": 3672 },
                            "end": { "line": 129, "column": 13, "offset": 3684 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 129, "column": 1, "offset": 3672 }, "end": { "line": 129, "column": 13, "offset": 3684 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given the following perfect binary tree,",
                        "position": {
                            "start": { "line": 131, "column": 1, "offset": 3686 },
                            "end": { "line": 131, "column": 41, "offset": 3726 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 131, "column": 1, "offset": 3686 }, "end": { "line": 131, "column": 41, "offset": 3726 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7",
                "position": {
                    "start": { "line": 133, "column": 1, "offset": 3728 },
                    "end": { "line": 140, "column": 4, "offset": 3781 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "After calling your function, the tree should look like:",
                        "position": {
                            "start": { "line": 142, "column": 1, "offset": 3783 },
                            "end": { "line": 142, "column": 56, "offset": 3838 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 142, "column": 1, "offset": 3783 }, "end": { "line": 142, "column": 56, "offset": 3838 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL",
                "position": {
                    "start": { "line": 144, "column": 1, "offset": 3840 },
                    "end": { "line": 151, "column": 4, "offset": 3917 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 153, "column": 5, "offset": 3923 },
                            "end": { "line": 153, "column": 14, "offset": 3932 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 153, "column": 1, "offset": 3919 }, "end": { "line": 153, "column": 14, "offset": 3932 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "ONE",
                        "position": { "start": { "line": 155, "column": 6, "offset": 3939 }, "end": { "line": 155, "column": 9, "offset": 3942 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 155, "column": 1, "offset": 3934 }, "end": { "line": 155, "column": 9, "offset": 3942 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Recursive.",
                        "position": {
                            "start": { "line": 157, "column": 1, "offset": 3944 },
                            "end": { "line": 157, "column": 11, "offset": 3954 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 157, "column": 1, "offset": 3944 }, "end": { "line": 157, "column": 11, "offset": 3954 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For every ",
                        "position": {
                            "start": { "line": 159, "column": 1, "offset": 3956 },
                            "end": { "line": 159, "column": 11, "offset": 3966 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "node",
                        "position": {
                            "start": { "line": 159, "column": 11, "offset": 3966 },
                            "end": { "line": 159, "column": 17, "offset": 3972 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ":",
                        "position": {
                            "start": { "line": 159, "column": 17, "offset": 3972 },
                            "end": { "line": 159, "column": 18, "offset": 3973 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 159, "column": 1, "offset": 3956 }, "end": { "line": 159, "column": 18, "offset": 3973 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Left child: points to ",
                                        "position": {
                                            "start": { "line": 161, "column": 5, "offset": 3979 },
                                            "end": { "line": 161, "column": 27, "offset": 4001 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "node.right",
                                        "position": {
                                            "start": { "line": 161, "column": 27, "offset": 4001 },
                                            "end": { "line": 161, "column": 39, "offset": 4013 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ".",
                                        "position": {
                                            "start": { "line": 161, "column": 39, "offset": 4013 },
                                            "end": { "line": 161, "column": 40, "offset": 4014 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 161, "column": 5, "offset": 3979 },
                                    "end": { "line": 161, "column": 40, "offset": 4014 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 161, "column": 1, "offset": 3975 },
                            "end": { "line": 161, "column": 40, "offset": 4014 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Right child: points to ",
                                        "position": {
                                            "start": { "line": 162, "column": 5, "offset": 4019 },
                                            "end": { "line": 162, "column": 28, "offset": 4042 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "node.next.left",
                                        "position": {
                                            "start": { "line": 162, "column": 28, "offset": 4042 },
                                            "end": { "line": 162, "column": 44, "offset": 4058 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " if ",
                                        "position": {
                                            "start": { "line": 162, "column": 44, "offset": 4058 },
                                            "end": { "line": 162, "column": 48, "offset": 4062 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "node.next",
                                        "position": {
                                            "start": { "line": 162, "column": 48, "offset": 4062 },
                                            "end": { "line": 162, "column": 59, "offset": 4073 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " exists.",
                                        "position": {
                                            "start": { "line": 162, "column": 59, "offset": 4073 },
                                            "end": { "line": 162, "column": 67, "offset": 4081 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 162, "column": 5, "offset": 4019 },
                                    "end": { "line": 162, "column": 67, "offset": 4081 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 162, "column": 1, "offset": 4015 },
                            "end": { "line": 162, "column": 67, "offset": 4081 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 161, "column": 1, "offset": 3975 }, "end": { "line": 162, "column": 67, "offset": 4081 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};",
                "position": {
                    "start": { "line": 164, "column": 1, "offset": 4083 },
                    "end": { "line": 192, "column": 4, "offset": 4709 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "TWO",
                        "position": { "start": { "line": 194, "column": 6, "offset": 4716 }, "end": { "line": 194, "column": 9, "offset": 4719 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 194, "column": 1, "offset": 4711 }, "end": { "line": 194, "column": 9, "offset": 4719 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Level order traversal.",
                        "position": {
                            "start": { "line": 196, "column": 1, "offset": 4721 },
                            "end": { "line": 196, "column": 23, "offset": 4743 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 196, "column": 1, "offset": 4721 }, "end": { "line": 196, "column": 23, "offset": 4743 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};",
                "position": {
                    "start": { "line": 198, "column": 1, "offset": 4745 },
                    "end": { "line": 234, "column": 4, "offset": 5609 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 236, "column": 1, "offset": 5611 }, "end": { "line": 236, "column": 4, "offset": 5614 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Medium\nRelated Topics:\n\"Tree\": ",
                        "position": {
                            "start": { "line": 238, "column": 1, "offset": 5616 },
                            "end": { "line": 240, "column": 9, "offset": 5659 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/tree",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/tree",
                                "position": {
                                    "start": { "line": 240, "column": 9, "offset": 5659 },
                                    "end": { "line": 240, "column": 38, "offset": 5688 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 240, "column": 9, "offset": 5659 },
                            "end": { "line": 240, "column": 38, "offset": 5688 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Depth-first Search\": ",
                        "position": {
                            "start": { "line": 240, "column": 38, "offset": 5688 },
                            "end": { "line": 241, "column": 23, "offset": 5711 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/depth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/depth-first-search",
                                "position": {
                                    "start": { "line": 241, "column": 23, "offset": 5711 },
                                    "end": { "line": 241, "column": 66, "offset": 5754 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 241, "column": 23, "offset": 5711 },
                            "end": { "line": 241, "column": 66, "offset": 5754 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ",
                        "position": {
                            "start": { "line": 241, "column": 66, "offset": 5754 },
                            "end": { "line": 243, "column": 48, "offset": 5821 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
                                "position": {
                                    "start": { "line": 243, "column": 48, "offset": 5821 },
                                    "end": { "line": 243, "column": 121, "offset": 5894 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 243, "column": 48, "offset": 5821 },
                            "end": { "line": 243, "column": 121, "offset": 5894 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 238, "column": 1, "offset": 5616 },
                    "end": { "line": 243, "column": 121, "offset": 5894 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 245, "column": 1, "offset": 5896 }, "end": { "line": 245, "column": 4, "offset": 5899 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 247, "column": 2, "offset": 5902 },
                                    "end": { "line": 247, "column": 142, "offset": 6042 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 247, "column": 1, "offset": 5901 },
                            "end": { "line": 247, "column": 277, "offset": 6177 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 247, "column": 1, "offset": 5901 }, "end": { "line": 247, "column": 277, "offset": 6177 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": { "start": { "line": 249, "column": 4, "offset": 6182 }, "end": { "line": 249, "column": 6, "offset": 6184 }, "indent": [] }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "117. Populating Next Right Pointers in Each Node II",
                                "position": {
                                    "start": { "line": 249, "column": 7, "offset": 6185 },
                                    "end": { "line": 249, "column": 58, "offset": 6236 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 249, "column": 6, "offset": 6184 },
                            "end": { "line": 249, "column": 150, "offset": 6328 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 249, "column": 1, "offset": 6179 }, "end": { "line": 249, "column": 150, "offset": 6328 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 251, "column": 5, "offset": 6334 },
                            "end": { "line": 251, "column": 13, "offset": 6342 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 251, "column": 1, "offset": 6330 }, "end": { "line": 251, "column": 13, "offset": 6342 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a binary tree",
                        "position": {
                            "start": { "line": 253, "column": 1, "offset": 6344 },
                            "end": { "line": 253, "column": 20, "offset": 6363 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 253, "column": 1, "offset": 6344 }, "end": { "line": 253, "column": 20, "offset": 6363 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}",
                "position": {
                    "start": { "line": 255, "column": 1, "offset": 6365 },
                    "end": { "line": 262, "column": 4, "offset": 6464 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ",
                        "position": {
                            "start": { "line": 264, "column": 1, "offset": 6466 },
                            "end": { "line": 264, "column": 127, "offset": 6592 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "NULL",
                        "position": {
                            "start": { "line": 264, "column": 127, "offset": 6592 },
                            "end": { "line": 264, "column": 133, "offset": 6598 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 264, "column": 133, "offset": 6598 },
                            "end": { "line": 264, "column": 134, "offset": 6599 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 264, "column": 1, "offset": 6466 }, "end": { "line": 264, "column": 134, "offset": 6599 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Initially, all next pointers are set to ",
                        "position": {
                            "start": { "line": 266, "column": 1, "offset": 6601 },
                            "end": { "line": 266, "column": 41, "offset": 6641 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "NULL",
                        "position": {
                            "start": { "line": 266, "column": 41, "offset": 6641 },
                            "end": { "line": 266, "column": 47, "offset": 6647 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 266, "column": 47, "offset": 6647 },
                            "end": { "line": 266, "column": 48, "offset": 6648 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 266, "column": 1, "offset": 6601 }, "end": { "line": 266, "column": 48, "offset": 6648 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note:",
                                "position": {
                                    "start": { "line": 268, "column": 3, "offset": 6652 },
                                    "end": { "line": 268, "column": 8, "offset": 6657 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 268, "column": 1, "offset": 6650 },
                            "end": { "line": 268, "column": 10, "offset": 6659 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 268, "column": 1, "offset": 6650 }, "end": { "line": 268, "column": 10, "offset": 6659 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "You may only use constant extra space.",
                                        "position": {
                                            "start": { "line": 270, "column": 5, "offset": 6665 },
                                            "end": { "line": 270, "column": 43, "offset": 6703 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 270, "column": 5, "offset": 6665 },
                                    "end": { "line": 270, "column": 43, "offset": 6703 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 270, "column": 1, "offset": 6661 },
                            "end": { "line": 270, "column": 43, "offset": 6703 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Recursive approach is fine, implicit stack space does not count as extra space for this problem.",
                                        "position": {
                                            "start": { "line": 271, "column": 5, "offset": 6708 },
                                            "end": { "line": 271, "column": 101, "offset": 6804 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 271, "column": 5, "offset": 6708 },
                                    "end": { "line": 271, "column": 101, "offset": 6804 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 271, "column": 1, "offset": 6704 },
                            "end": { "line": 271, "column": 101, "offset": 6804 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 270, "column": 1, "offset": 6661 }, "end": { "line": 271, "column": 101, "offset": 6804 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example:",
                                "position": {
                                    "start": { "line": 273, "column": 3, "offset": 6808 },
                                    "end": { "line": 273, "column": 11, "offset": 6816 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 273, "column": 1, "offset": 6806 },
                            "end": { "line": 273, "column": 13, "offset": 6818 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 273, "column": 1, "offset": 6806 }, "end": { "line": 273, "column": 13, "offset": 6818 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given the following binary tree,",
                        "position": {
                            "start": { "line": 275, "column": 1, "offset": 6820 },
                            "end": { "line": 275, "column": 33, "offset": 6852 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 275, "column": 1, "offset": 6820 }, "end": { "line": 275, "column": 33, "offset": 6852 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7",
                "position": {
                    "start": { "line": 277, "column": 1, "offset": 6854 },
                    "end": { "line": 284, "column": 4, "offset": 6907 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "After calling your function, the tree should look like:",
                        "position": {
                            "start": { "line": 286, "column": 1, "offset": 6909 },
                            "end": { "line": 286, "column": 56, "offset": 6964 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 286, "column": 1, "offset": 6909 }, "end": { "line": 286, "column": 56, "offset": 6964 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL",
                "position": {
                    "start": { "line": 288, "column": 1, "offset": 6966 },
                    "end": { "line": 295, "column": 4, "offset": 7043 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 297, "column": 5, "offset": 7049 },
                            "end": { "line": 297, "column": 14, "offset": 7058 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 297, "column": 1, "offset": 7045 }, "end": { "line": 297, "column": 14, "offset": 7058 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "ONE",
                        "position": { "start": { "line": 299, "column": 6, "offset": 7065 }, "end": { "line": 299, "column": 9, "offset": 7068 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 299, "column": 1, "offset": 7060 }, "end": { "line": 299, "column": 9, "offset": 7068 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Recursive. See ",
                        "position": {
                            "start": { "line": 301, "column": 1, "offset": 7070 },
                            "end": { "line": 301, "column": 16, "offset": 7085 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md",
                        "children": [
                            {
                                "type": "text",
                                "value": "116. Populating Next Right Pointers in Each Node",
                                "position": {
                                    "start": { "line": 301, "column": 17, "offset": 7086 },
                                    "end": { "line": 301, "column": 65, "offset": 7134 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 301, "column": 16, "offset": 7085 },
                            "end": { "line": 301, "column": 135, "offset": 7204 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 301, "column": 135, "offset": 7204 },
                            "end": { "line": 301, "column": 136, "offset": 7205 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 301, "column": 1, "offset": 7070 }, "end": { "line": 301, "column": 136, "offset": 7205 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The tree may not be perfect now. So keep finding ",
                        "position": {
                            "start": { "line": 303, "column": 1, "offset": 7207 },
                            "end": { "line": 303, "column": 50, "offset": 7256 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "next",
                        "position": {
                            "start": { "line": 303, "column": 50, "offset": 7256 },
                            "end": { "line": 303, "column": 56, "offset": 7262 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " until there is a node with children, or ",
                        "position": {
                            "start": { "line": 303, "column": 56, "offset": 7262 },
                            "end": { "line": 303, "column": 97, "offset": 7303 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "null",
                        "position": {
                            "start": { "line": 303, "column": 97, "offset": 7303 },
                            "end": { "line": 303, "column": 103, "offset": 7309 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 303, "column": 103, "offset": 7309 },
                            "end": { "line": 303, "column": 104, "offset": 7310 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 303, "column": 1, "offset": 7207 }, "end": { "line": 303, "column": 104, "offset": 7310 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "This also means post-order traversal is required.",
                        "position": {
                            "start": { "line": 305, "column": 1, "offset": 7312 },
                            "end": { "line": 305, "column": 50, "offset": 7361 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 305, "column": 1, "offset": 7312 }, "end": { "line": 305, "column": 50, "offset": 7361 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};",
                "position": {
                    "start": { "line": 307, "column": 1, "offset": 7363 },
                    "end": { "line": 344, "column": 4, "offset": 8212 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "TWO",
                        "position": { "start": { "line": 346, "column": 6, "offset": 8219 }, "end": { "line": 346, "column": 9, "offset": 8222 }, "indent": [] }
                    }
                ],
                "position": { "start": { "line": 346, "column": 1, "offset": 8214 }, "end": { "line": 346, "column": 9, "offset": 8222 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Level order traversal. Exact same as ",
                        "position": {
                            "start": { "line": 348, "column": 1, "offset": 8224 },
                            "end": { "line": 348, "column": 38, "offset": 8261 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md",
                        "children": [
                            {
                                "type": "text",
                                "value": "116. Populating Next Right Pointers in Each Node",
                                "position": {
                                    "start": { "line": 348, "column": 39, "offset": 8262 },
                                    "end": { "line": 348, "column": 87, "offset": 8310 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 348, "column": 38, "offset": 8261 },
                            "end": { "line": 348, "column": 157, "offset": 8380 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 348, "column": 157, "offset": 8380 },
                            "end": { "line": 348, "column": 158, "offset": 8381 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 348, "column": 1, "offset": 8224 }, "end": { "line": 348, "column": 158, "offset": 8381 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};",
                "position": {
                    "start": { "line": 350, "column": 1, "offset": 8383 },
                    "end": { "line": 386, "column": 4, "offset": 9247 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 388, "column": 1, "offset": 9249 }, "end": { "line": 388, "column": 4, "offset": 9252 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Easy\nRelated Topics:\n\"Array\": ",
                        "position": {
                            "start": { "line": 390, "column": 1, "offset": 9254 },
                            "end": { "line": 392, "column": 10, "offset": 9296 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/array",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/array",
                                "position": {
                                    "start": { "line": 392, "column": 10, "offset": 9296 },
                                    "end": { "line": 392, "column": 40, "offset": 9326 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 392, "column": 10, "offset": 9296 },
                            "end": { "line": 392, "column": 40, "offset": 9326 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Pascal's Triangle II\": ",
                        "position": {
                            "start": { "line": 392, "column": 40, "offset": 9326 },
                            "end": { "line": 394, "column": 25, "offset": 9370 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/pascals-triangle-ii",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/pascals-triangle-ii",
                                "position": {
                                    "start": { "line": 394, "column": 25, "offset": 9370 },
                                    "end": { "line": 394, "column": 74, "offset": 9419 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 394, "column": 25, "offset": 9370 },
                            "end": { "line": 394, "column": 74, "offset": 9419 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 390, "column": 1, "offset": 9254 },
                    "end": { "line": 394, "column": 74, "offset": 9419 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 396, "column": 1, "offset": 9421 }, "end": { "line": 396, "column": 4, "offset": 9424 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 398, "column": 2, "offset": 9427 },
                                    "end": { "line": 398, "column": 142, "offset": 9567 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 398, "column": 1, "offset": 9426 },
                            "end": { "line": 398, "column": 217, "offset": 9642 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 398, "column": 1, "offset": 9426 }, "end": { "line": 398, "column": 217, "offset": 9642 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": { "start": { "line": 400, "column": 4, "offset": 9647 }, "end": { "line": 400, "column": 6, "offset": 9649 }, "indent": [] }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/pascals-triangle/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "118. Pascal's Triangle",
                                "position": {
                                    "start": { "line": 400, "column": 7, "offset": 9650 },
                                    "end": { "line": 400, "column": 29, "offset": 9672 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 400, "column": 6, "offset": 9649 },
                            "end": { "line": 400, "column": 91, "offset": 9734 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 400, "column": 1, "offset": 9644 }, "end": { "line": 400, "column": 91, "offset": 9734 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 402, "column": 5, "offset": 9740 },
                            "end": { "line": 402, "column": 13, "offset": 9748 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 402, "column": 1, "offset": 9736 }, "end": { "line": 402, "column": 13, "offset": 9748 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a non-negative integer ",
                        "position": {
                            "start": { "line": 404, "column": 1, "offset": 9750 },
                            "end": { "line": 404, "column": 30, "offset": 9779 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "numRows",
                                "position": {
                                    "start": { "line": 404, "column": 31, "offset": 9780 },
                                    "end": { "line": 404, "column": 38, "offset": 9787 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 404, "column": 30, "offset": 9779 },
                            "end": { "line": 404, "column": 39, "offset": 9788 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ", generate the first ",
                        "position": {
                            "start": { "line": 404, "column": 39, "offset": 9788 },
                            "end": { "line": 404, "column": 60, "offset": 9809 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "numRows",
                                "position": {
                                    "start": { "line": 404, "column": 61, "offset": 9810 },
                                    "end": { "line": 404, "column": 68, "offset": 9817 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 404, "column": 60, "offset": 9809 },
                            "end": { "line": 404, "column": 69, "offset": 9818 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " of Pascal's triangle.",
                        "position": {
                            "start": { "line": 404, "column": 69, "offset": 9818 },
                            "end": { "line": 404, "column": 91, "offset": 9840 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 404, "column": 1, "offset": 9750 }, "end": { "line": 404, "column": 91, "offset": 9840 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif",
                        "alt": "PascalTriangleAnimated2.gif",
                        "position": {
                            "start": { "line": 406, "column": 1, "offset": 9842 },
                            "end": { "line": 406, "column": 112, "offset": 9953 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 406, "column": 1, "offset": 9842 }, "end": { "line": 406, "column": 112, "offset": 9953 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "In Pascal's triangle, each number is the sum of the two numbers directly above it.",
                        "position": {
                            "start": { "line": 408, "column": 1, "offset": 9955 },
                            "end": { "line": 408, "column": 83, "offset": 10037 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 408, "column": 1, "offset": 9955 }, "end": { "line": 408, "column": 83, "offset": 10037 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example:",
                                "position": {
                                    "start": { "line": 410, "column": 3, "offset": 10041 },
                                    "end": { "line": 410, "column": 11, "offset": 10049 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 410, "column": 1, "offset": 10039 },
                            "end": { "line": 410, "column": 13, "offset": 10051 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 410, "column": 1, "offset": 10039 }, "end": { "line": 410, "column": 13, "offset": 10051 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]",
                "position": {
                    "start": { "line": 412, "column": 1, "offset": 10053 },
                    "end": { "line": 423, "column": 4, "offset": 10141 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 425, "column": 5, "offset": 10147 },
                            "end": { "line": 425, "column": 14, "offset": 10156 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 425, "column": 1, "offset": 10143 }, "end": { "line": 425, "column": 14, "offset": 10156 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Dynamic Programming 101.",
                        "position": {
                            "start": { "line": 427, "column": 1, "offset": 10158 },
                            "end": { "line": 427, "column": 25, "offset": 10182 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 427, "column": 1, "offset": 10158 }, "end": { "line": 427, "column": 25, "offset": 10182 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};",
                "position": {
                    "start": { "line": 429, "column": 1, "offset": 10184 },
                    "end": { "line": 452, "column": 4, "offset": 10650 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 454, "column": 1, "offset": 10652 }, "end": { "line": 454, "column": 4, "offset": 10655 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Easy\nRelated Topics:\n\"Array\": ",
                        "position": {
                            "start": { "line": 456, "column": 1, "offset": 10657 },
                            "end": { "line": 458, "column": 10, "offset": 10699 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/array",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/array",
                                "position": {
                                    "start": { "line": 458, "column": 10, "offset": 10699 },
                                    "end": { "line": 458, "column": 40, "offset": 10729 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 458, "column": 10, "offset": 10699 },
                            "end": { "line": 458, "column": 40, "offset": 10729 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Pascal's Triangle\": ",
                        "position": {
                            "start": { "line": 458, "column": 40, "offset": 10729 },
                            "end": { "line": 460, "column": 22, "offset": 10770 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/pascals-triangle",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/pascals-triangle",
                                "position": {
                                    "start": { "line": 460, "column": 22, "offset": 10770 },
                                    "end": { "line": 460, "column": 68, "offset": 10816 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 460, "column": 22, "offset": 10770 },
                            "end": { "line": 460, "column": 68, "offset": 10816 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 456, "column": 1, "offset": 10657 },
                    "end": { "line": 460, "column": 68, "offset": 10816 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 462, "column": 1, "offset": 10818 }, "end": { "line": 462, "column": 4, "offset": 10821 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 464, "column": 2, "offset": 10824 },
                                    "end": { "line": 464, "column": 142, "offset": 10964 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 464, "column": 1, "offset": 10823 },
                            "end": { "line": 464, "column": 223, "offset": 11045 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 464, "column": 1, "offset": 10823 }, "end": { "line": 464, "column": 223, "offset": 11045 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 466, "column": 4, "offset": 11050 },
                            "end": { "line": 466, "column": 6, "offset": 11052 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/pascals-triangle-ii/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "119. Pascal's Triangle II",
                                "position": {
                                    "start": { "line": 466, "column": 7, "offset": 11053 },
                                    "end": { "line": 466, "column": 32, "offset": 11078 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 466, "column": 6, "offset": 11052 },
                            "end": { "line": 466, "column": 97, "offset": 11143 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 466, "column": 1, "offset": 11047 }, "end": { "line": 466, "column": 97, "offset": 11143 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 468, "column": 5, "offset": 11149 },
                            "end": { "line": 468, "column": 13, "offset": 11157 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 468, "column": 1, "offset": 11145 }, "end": { "line": 468, "column": 13, "offset": 11157 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a non-negative index ",
                        "position": {
                            "start": { "line": 470, "column": 1, "offset": 11159 },
                            "end": { "line": 470, "column": 28, "offset": 11186 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "k",
                                "position": {
                                    "start": { "line": 470, "column": 29, "offset": 11187 },
                                    "end": { "line": 470, "column": 30, "offset": 11188 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 470, "column": 28, "offset": 11186 },
                            "end": { "line": 470, "column": 31, "offset": 11189 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " where ",
                        "position": {
                            "start": { "line": 470, "column": 31, "offset": 11189 },
                            "end": { "line": 470, "column": 38, "offset": 11196 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "k",
                                "position": {
                                    "start": { "line": 470, "column": 39, "offset": 11197 },
                                    "end": { "line": 470, "column": 40, "offset": 11198 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 470, "column": 38, "offset": 11196 },
                            "end": { "line": 470, "column": 41, "offset": 11199 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " â‰¤ 33, return the ",
                        "position": {
                            "start": { "line": 470, "column": 41, "offset": 11199 },
                            "end": { "line": 470, "column": 59, "offset": 11217 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "k",
                                "position": {
                                    "start": { "line": 470, "column": 60, "offset": 11218 },
                                    "end": { "line": 470, "column": 61, "offset": 11219 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 470, "column": 59, "offset": 11217 },
                            "end": { "line": 470, "column": 62, "offset": 11220 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "th index row of the Pascal's triangle.",
                        "position": {
                            "start": { "line": 470, "column": 62, "offset": 11220 },
                            "end": { "line": 470, "column": 100, "offset": 11258 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 470, "column": 1, "offset": 11159 }, "end": { "line": 470, "column": 100, "offset": 11258 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Note that the row index starts from 0.",
                        "position": {
                            "start": { "line": 472, "column": 1, "offset": 11260 },
                            "end": { "line": 472, "column": 39, "offset": 11298 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 472, "column": 1, "offset": 11260 }, "end": { "line": 472, "column": 39, "offset": 11298 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif",
                        "alt": "PascalTriangleAnimated2.gif",
                        "position": {
                            "start": { "line": 474, "column": 1, "offset": 11300 },
                            "end": { "line": 474, "column": 112, "offset": 11411 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 474, "column": 1, "offset": 11300 }, "end": { "line": 474, "column": 112, "offset": 11411 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "In Pascal's triangle, each number is the sum of the two numbers directly above it.",
                        "position": {
                            "start": { "line": 476, "column": 1, "offset": 11413 },
                            "end": { "line": 476, "column": 83, "offset": 11495 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 476, "column": 1, "offset": 11413 }, "end": { "line": 476, "column": 83, "offset": 11495 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example:",
                                "position": {
                                    "start": { "line": 478, "column": 3, "offset": 11499 },
                                    "end": { "line": 478, "column": 11, "offset": 11507 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 478, "column": 1, "offset": 11497 },
                            "end": { "line": 478, "column": 13, "offset": 11509 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 478, "column": 1, "offset": 11497 }, "end": { "line": 478, "column": 13, "offset": 11509 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: 3\nOutput: [1,3,3,1]",
                "position": {
                    "start": { "line": 480, "column": 1, "offset": 11511 },
                    "end": { "line": 484, "column": 4, "offset": 11546 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Follow up:",
                                "position": {
                                    "start": { "line": 486, "column": 3, "offset": 11550 },
                                    "end": { "line": 486, "column": 13, "offset": 11560 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 486, "column": 1, "offset": 11548 },
                            "end": { "line": 486, "column": 15, "offset": 11562 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 486, "column": 1, "offset": 11548 }, "end": { "line": 486, "column": 15, "offset": 11562 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Could you optimize your algorithm to use only ",
                        "position": {
                            "start": { "line": 488, "column": 1, "offset": 11564 },
                            "end": { "line": 488, "column": 47, "offset": 11610 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "O",
                                "position": {
                                    "start": { "line": 488, "column": 48, "offset": 11611 },
                                    "end": { "line": 488, "column": 49, "offset": 11612 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 488, "column": 47, "offset": 11610 },
                            "end": { "line": 488, "column": 50, "offset": 11613 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "(",
                        "position": {
                            "start": { "line": 488, "column": 50, "offset": 11613 },
                            "end": { "line": 488, "column": 51, "offset": 11614 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "k",
                                "position": {
                                    "start": { "line": 488, "column": 52, "offset": 11615 },
                                    "end": { "line": 488, "column": 53, "offset": 11616 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 488, "column": 51, "offset": 11614 },
                            "end": { "line": 488, "column": 54, "offset": 11617 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ") extra space?",
                        "position": {
                            "start": { "line": 488, "column": 54, "offset": 11617 },
                            "end": { "line": 488, "column": 68, "offset": 11631 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 488, "column": 1, "offset": 11564 }, "end": { "line": 488, "column": 68, "offset": 11631 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 490, "column": 5, "offset": 11637 },
                            "end": { "line": 490, "column": 14, "offset": 11646 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 490, "column": 1, "offset": 11633 }, "end": { "line": 490, "column": 14, "offset": 11646 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Dynamic Programming 101 with dynamic array.",
                        "position": {
                            "start": { "line": 492, "column": 1, "offset": 11648 },
                            "end": { "line": 492, "column": 44, "offset": 11691 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 492, "column": 1, "offset": 11648 }, "end": { "line": 492, "column": 44, "offset": 11691 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "State ",
                        "position": {
                            "start": { "line": 494, "column": 1, "offset": 11693 },
                            "end": { "line": 494, "column": 7, "offset": 11699 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "(i, j)",
                        "position": {
                            "start": { "line": 494, "column": 7, "offset": 11699 },
                            "end": { "line": 494, "column": 15, "offset": 11707 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " depends on ",
                        "position": {
                            "start": { "line": 494, "column": 15, "offset": 11707 },
                            "end": { "line": 494, "column": 27, "offset": 11719 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "(i-1, j)",
                        "position": {
                            "start": { "line": 494, "column": 27, "offset": 11719 },
                            "end": { "line": 494, "column": 37, "offset": 11729 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": {
                            "start": { "line": 494, "column": 37, "offset": 11729 },
                            "end": { "line": 494, "column": 42, "offset": 11734 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "(i-1, j-1)",
                        "position": {
                            "start": { "line": 494, "column": 42, "offset": 11734 },
                            "end": { "line": 494, "column": 54, "offset": 11746 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". So to access ",
                        "position": {
                            "start": { "line": 494, "column": 54, "offset": 11746 },
                            "end": { "line": 494, "column": 69, "offset": 11761 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "(i-1, j-1)",
                        "position": {
                            "start": { "line": 494, "column": 69, "offset": 11761 },
                            "end": { "line": 494, "column": 81, "offset": 11773 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " iteration must be from right to left.",
                        "position": {
                            "start": { "line": 494, "column": 81, "offset": 11773 },
                            "end": { "line": 494, "column": 119, "offset": 11811 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 494, "column": 1, "offset": 11693 }, "end": { "line": 494, "column": 119, "offset": 11811 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};",
                "position": {
                    "start": { "line": 496, "column": 1, "offset": 11813 },
                    "end": { "line": 516, "column": 4, "offset": 12169 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 518, "column": 1, "offset": 12171 }, "end": { "line": 518, "column": 4, "offset": 12174 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Medium\nRelated Topics:\n\"Array\": ",
                        "position": {
                            "start": { "line": 520, "column": 1, "offset": 12176 },
                            "end": { "line": 522, "column": 10, "offset": 12220 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/array",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/array",
                                "position": {
                                    "start": { "line": 522, "column": 10, "offset": 12220 },
                                    "end": { "line": 522, "column": 40, "offset": 12250 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 522, "column": 10, "offset": 12220 },
                            "end": { "line": 522, "column": 40, "offset": 12250 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Dynamic Programming\": ",
                        "position": {
                            "start": { "line": 522, "column": 40, "offset": 12250 },
                            "end": { "line": 523, "column": 24, "offset": 12274 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/dynamic-programming",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/dynamic-programming",
                                "position": {
                                    "start": { "line": 523, "column": 24, "offset": 12274 },
                                    "end": { "line": 523, "column": 68, "offset": 12318 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 523, "column": 24, "offset": 12274 },
                            "end": { "line": 523, "column": 68, "offset": 12318 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 520, "column": 1, "offset": 12176 },
                    "end": { "line": 523, "column": 68, "offset": 12318 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 525, "column": 1, "offset": 12320 }, "end": { "line": 525, "column": 4, "offset": 12323 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#120-trianglehttpsleetcodecomproblemstriangledescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 527, "column": 2, "offset": 12326 },
                                    "end": { "line": 527, "column": 142, "offset": 12466 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 527, "column": 1, "offset": 12325 },
                            "end": { "line": 527, "column": 201, "offset": 12525 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 527, "column": 1, "offset": 12325 }, "end": { "line": 527, "column": 201, "offset": 12525 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 529, "column": 4, "offset": 12530 },
                            "end": { "line": 529, "column": 6, "offset": 12532 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/triangle/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "120. Triangle",
                                "position": {
                                    "start": { "line": 529, "column": 7, "offset": 12533 },
                                    "end": { "line": 529, "column": 20, "offset": 12546 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 529, "column": 6, "offset": 12532 },
                            "end": { "line": 529, "column": 74, "offset": 12600 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 529, "column": 1, "offset": 12527 }, "end": { "line": 529, "column": 74, "offset": 12600 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 531, "column": 5, "offset": 12606 },
                            "end": { "line": 531, "column": 13, "offset": 12614 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 531, "column": 1, "offset": 12602 }, "end": { "line": 531, "column": 13, "offset": 12614 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.",
                        "position": {
                            "start": { "line": 533, "column": 1, "offset": 12616 },
                            "end": { "line": 533, "column": 125, "offset": 12740 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 533, "column": 1, "offset": 12616 }, "end": { "line": 533, "column": 125, "offset": 12740 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For example, given the following triangle",
                        "position": {
                            "start": { "line": 535, "column": 1, "offset": 12742 },
                            "end": { "line": 535, "column": 42, "offset": 12783 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 535, "column": 1, "offset": 12742 }, "end": { "line": 535, "column": 42, "offset": 12783 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]",
                "position": {
                    "start": { "line": 537, "column": 1, "offset": 12785 },
                    "end": { "line": 545, "column": 4, "offset": 12842 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The minimum path sum from top to bottom is ",
                        "position": {
                            "start": { "line": 547, "column": 1, "offset": 12844 },
                            "end": { "line": 547, "column": 44, "offset": 12887 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "11",
                        "position": {
                            "start": { "line": 547, "column": 44, "offset": 12887 },
                            "end": { "line": 547, "column": 48, "offset": 12891 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " (i.e., ",
                        "position": {
                            "start": { "line": 547, "column": 48, "offset": 12891 },
                            "end": { "line": 547, "column": 56, "offset": 12899 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "2",
                                "position": {
                                    "start": { "line": 547, "column": 58, "offset": 12901 },
                                    "end": { "line": 547, "column": 59, "offset": 12902 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 547, "column": 56, "offset": 12899 },
                            "end": { "line": 547, "column": 61, "offset": 12904 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " + ",
                        "position": {
                            "start": { "line": 547, "column": 61, "offset": 12904 },
                            "end": { "line": 547, "column": 64, "offset": 12907 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "3",
                                "position": {
                                    "start": { "line": 547, "column": 66, "offset": 12909 },
                                    "end": { "line": 547, "column": 67, "offset": 12910 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 547, "column": 64, "offset": 12907 },
                            "end": { "line": 547, "column": 69, "offset": 12912 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " + ",
                        "position": {
                            "start": { "line": 547, "column": 69, "offset": 12912 },
                            "end": { "line": 547, "column": 72, "offset": 12915 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "5",
                                "position": {
                                    "start": { "line": 547, "column": 74, "offset": 12917 },
                                    "end": { "line": 547, "column": 75, "offset": 12918 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 547, "column": 72, "offset": 12915 },
                            "end": { "line": 547, "column": 77, "offset": 12920 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " + ",
                        "position": {
                            "start": { "line": 547, "column": 77, "offset": 12920 },
                            "end": { "line": 547, "column": 80, "offset": 12923 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "1",
                                "position": {
                                    "start": { "line": 547, "column": 82, "offset": 12925 },
                                    "end": { "line": 547, "column": 83, "offset": 12926 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 547, "column": 80, "offset": 12923 },
                            "end": { "line": 547, "column": 85, "offset": 12928 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " = 11).",
                        "position": {
                            "start": { "line": 547, "column": 85, "offset": 12928 },
                            "end": { "line": 547, "column": 92, "offset": 12935 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 547, "column": 1, "offset": 12844 }, "end": { "line": 547, "column": 92, "offset": 12935 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note:",
                                "position": {
                                    "start": { "line": 549, "column": 3, "offset": 12939 },
                                    "end": { "line": 549, "column": 8, "offset": 12944 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 549, "column": 1, "offset": 12937 },
                            "end": { "line": 549, "column": 10, "offset": 12946 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 549, "column": 1, "offset": 12937 }, "end": { "line": 549, "column": 10, "offset": 12946 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Bonus point if you are able to do this using only ",
                        "position": {
                            "start": { "line": 551, "column": 1, "offset": 12948 },
                            "end": { "line": 551, "column": 51, "offset": 12998 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "O",
                                "position": {
                                    "start": { "line": 551, "column": 52, "offset": 12999 },
                                    "end": { "line": 551, "column": 53, "offset": 13000 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 551, "column": 51, "offset": 12998 },
                            "end": { "line": 551, "column": 54, "offset": 13001 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "(",
                        "position": {
                            "start": { "line": 551, "column": 54, "offset": 13001 },
                            "end": { "line": 551, "column": 55, "offset": 13002 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "n",
                                "position": {
                                    "start": { "line": 551, "column": 56, "offset": 13003 },
                                    "end": { "line": 551, "column": 57, "offset": 13004 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 551, "column": 55, "offset": 13002 },
                            "end": { "line": 551, "column": 58, "offset": 13005 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ") extra space, where ",
                        "position": {
                            "start": { "line": 551, "column": 58, "offset": 13005 },
                            "end": { "line": 551, "column": 79, "offset": 13026 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "n",
                                "position": {
                                    "start": { "line": 551, "column": 80, "offset": 13027 },
                                    "end": { "line": 551, "column": 81, "offset": 13028 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 551, "column": 79, "offset": 13026 },
                            "end": { "line": 551, "column": 82, "offset": 13029 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " is the total number of rows in the triangle.",
                        "position": {
                            "start": { "line": 551, "column": 82, "offset": 13029 },
                            "end": { "line": 551, "column": 127, "offset": 13074 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 551, "column": 1, "offset": 12948 }, "end": { "line": 551, "column": 127, "offset": 13074 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 553, "column": 5, "offset": 13080 },
                            "end": { "line": 553, "column": 14, "offset": 13089 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 553, "column": 1, "offset": 13076 }, "end": { "line": 553, "column": 14, "offset": 13089 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Define ",
                        "position": {
                            "start": { "line": 555, "column": 1, "offset": 13091 },
                            "end": { "line": 555, "column": 8, "offset": 13098 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "f(i, j)",
                        "position": {
                            "start": { "line": 555, "column": 8, "offset": 13098 },
                            "end": { "line": 555, "column": 17, "offset": 13107 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " to be the minimum path sum from ",
                        "position": {
                            "start": { "line": 555, "column": 17, "offset": 13107 },
                            "end": { "line": 555, "column": 50, "offset": 13140 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "triangle[0][0]",
                        "position": {
                            "start": { "line": 555, "column": 50, "offset": 13140 },
                            "end": { "line": 555, "column": 66, "offset": 13156 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " to ",
                        "position": {
                            "start": { "line": 555, "column": 66, "offset": 13156 },
                            "end": { "line": 555, "column": 70, "offset": 13160 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "triangle[i][j]",
                        "position": {
                            "start": { "line": 555, "column": 70, "offset": 13160 },
                            "end": { "line": 555, "column": 86, "offset": 13176 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 555, "column": 86, "offset": 13176 },
                            "end": { "line": 555, "column": 87, "offset": 13177 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 555, "column": 1, "offset": 13091 }, "end": { "line": 555, "column": 87, "offset": 13177 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0",
                "position": { "start": { "line": 557, "column": 1, "offset": 13179 }, "end": { "line": 559, "column": 50, "offset": 13341 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Dynamic array can be used.",
                        "position": {
                            "start": { "line": 561, "column": 1, "offset": 13343 },
                            "end": { "line": 561, "column": 27, "offset": 13369 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 561, "column": 1, "offset": 13343 }, "end": { "line": 561, "column": 27, "offset": 13369 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};",
                "position": {
                    "start": { "line": 563, "column": 1, "offset": 13371 },
                    "end": { "line": 583, "column": 4, "offset": 13859 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 585, "column": 1, "offset": 13861 }, "end": { "line": 585, "column": 4, "offset": 13864 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Easy\nRelated Topics:\n\"Array\": ",
                        "position": {
                            "start": { "line": 587, "column": 1, "offset": 13866 },
                            "end": { "line": 589, "column": 10, "offset": 13908 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/array",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/array",
                                "position": {
                                    "start": { "line": 589, "column": 10, "offset": 13908 },
                                    "end": { "line": 589, "column": 40, "offset": 13938 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 589, "column": 10, "offset": 13908 },
                            "end": { "line": 589, "column": 40, "offset": 13938 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Dynamic Programming\": ",
                        "position": {
                            "start": { "line": 589, "column": 40, "offset": 13938 },
                            "end": { "line": 590, "column": 24, "offset": 13962 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/dynamic-programming",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/dynamic-programming",
                                "position": {
                                    "start": { "line": 590, "column": 24, "offset": 13962 },
                                    "end": { "line": 590, "column": 68, "offset": 14006 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 590, "column": 24, "offset": 13962 },
                            "end": { "line": 590, "column": 68, "offset": 14006 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Maximum Subarray\": ",
                        "position": {
                            "start": { "line": 590, "column": 68, "offset": 14006 },
                            "end": { "line": 592, "column": 21, "offset": 14046 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/maximum-subarray",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/maximum-subarray",
                                "position": {
                                    "start": { "line": 592, "column": 21, "offset": 14046 },
                                    "end": { "line": 592, "column": 67, "offset": 14092 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 592, "column": 21, "offset": 14046 },
                            "end": { "line": 592, "column": 67, "offset": 14092 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock II\": ",
                        "position": {
                            "start": { "line": 592, "column": 67, "offset": 14092 },
                            "end": { "line": 593, "column": 39, "offset": 14131 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
                                "position": {
                                    "start": { "line": 593, "column": 39, "offset": 14131 },
                                    "end": { "line": 593, "column": 103, "offset": 14195 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 593, "column": 39, "offset": 14131 },
                            "end": { "line": 593, "column": 103, "offset": 14195 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock III\": ",
                        "position": {
                            "start": { "line": 593, "column": 103, "offset": 14195 },
                            "end": { "line": 594, "column": 40, "offset": 14235 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
                                "position": {
                                    "start": { "line": 594, "column": 40, "offset": 14235 },
                                    "end": { "line": 594, "column": 105, "offset": 14300 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 594, "column": 40, "offset": 14235 },
                            "end": { "line": 594, "column": 105, "offset": 14300 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock IV\": ",
                        "position": {
                            "start": { "line": 594, "column": 105, "offset": 14300 },
                            "end": { "line": 595, "column": 39, "offset": 14339 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
                                "position": {
                                    "start": { "line": 595, "column": 39, "offset": 14339 },
                                    "end": { "line": 595, "column": 103, "offset": 14403 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 595, "column": 39, "offset": 14339 },
                            "end": { "line": 595, "column": 103, "offset": 14403 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock with Cooldown\": ",
                        "position": {
                            "start": { "line": 595, "column": 103, "offset": 14403 },
                            "end": { "line": 596, "column": 50, "offset": 14453 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",
                                "position": {
                                    "start": { "line": 596, "column": 50, "offset": 14453 },
                                    "end": { "line": 596, "column": 125, "offset": 14528 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 596, "column": 50, "offset": 14453 },
                            "end": { "line": 596, "column": 125, "offset": 14528 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 587, "column": 1, "offset": 13866 },
                    "end": { "line": 596, "column": 125, "offset": 14528 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 598, "column": 1, "offset": 14530 }, "end": { "line": 598, "column": 4, "offset": 14533 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 600, "column": 2, "offset": 14536 },
                                    "end": { "line": 600, "column": 142, "offset": 14676 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 600, "column": 1, "offset": 14535 },
                            "end": { "line": 600, "column": 247, "offset": 14781 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 600, "column": 1, "offset": 14535 }, "end": { "line": 600, "column": 247, "offset": 14781 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 602, "column": 4, "offset": 14786 },
                            "end": { "line": 602, "column": 6, "offset": 14788 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "121. Best Time to Buy and Sell Stock",
                                "position": {
                                    "start": { "line": 602, "column": 7, "offset": 14789 },
                                    "end": { "line": 602, "column": 43, "offset": 14825 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 602, "column": 6, "offset": 14788 },
                            "end": { "line": 602, "column": 120, "offset": 14902 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 602, "column": 1, "offset": 14783 }, "end": { "line": 602, "column": 120, "offset": 14902 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 604, "column": 5, "offset": 14908 },
                            "end": { "line": 604, "column": 13, "offset": 14916 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 604, "column": 1, "offset": 14904 }, "end": { "line": 604, "column": 13, "offset": 14916 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Say you have an array for which the ",
                        "position": {
                            "start": { "line": 606, "column": 1, "offset": 14918 },
                            "end": { "line": 606, "column": 37, "offset": 14954 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "i",
                                "position": {
                                    "start": { "line": 606, "column": 38, "offset": 14955 },
                                    "end": { "line": 606, "column": 39, "offset": 14956 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 606, "column": 37, "offset": 14954 },
                            "end": { "line": 606, "column": 40, "offset": 14957 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "th element is the price of a given stock on day ",
                        "position": {
                            "start": { "line": 606, "column": 40, "offset": 14957 },
                            "end": { "line": 606, "column": 88, "offset": 15005 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "i",
                                "position": {
                                    "start": { "line": 606, "column": 89, "offset": 15006 },
                                    "end": { "line": 606, "column": 90, "offset": 15007 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 606, "column": 88, "offset": 15005 },
                            "end": { "line": 606, "column": 91, "offset": 15008 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 606, "column": 91, "offset": 15008 },
                            "end": { "line": 606, "column": 92, "offset": 15009 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 606, "column": 1, "offset": 14918 }, "end": { "line": 606, "column": 92, "offset": 15009 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.",
                        "position": {
                            "start": { "line": 608, "column": 1, "offset": 15011 },
                            "end": { "line": 608, "column": 160, "offset": 15170 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 608, "column": 1, "offset": 15011 }, "end": { "line": 608, "column": 160, "offset": 15170 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Note that you cannot sell a stock before you buy one.",
                        "position": {
                            "start": { "line": 610, "column": 1, "offset": 15172 },
                            "end": { "line": 610, "column": 54, "offset": 15225 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 610, "column": 1, "offset": 15172 }, "end": { "line": 610, "column": 54, "offset": 15225 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 612, "column": 3, "offset": 15229 },
                                    "end": { "line": 612, "column": 13, "offset": 15239 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 612, "column": 1, "offset": 15227 },
                            "end": { "line": 612, "column": 15, "offset": 15241 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 612, "column": 1, "offset": 15227 }, "end": { "line": 612, "column": 15, "offset": 15241 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.",
                "position": {
                    "start": { "line": 614, "column": 1, "offset": 15243 },
                    "end": { "line": 620, "column": 4, "offset": 15450 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 622, "column": 3, "offset": 15454 },
                                    "end": { "line": 622, "column": 13, "offset": 15464 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 622, "column": 1, "offset": 15452 },
                            "end": { "line": 622, "column": 15, "offset": 15466 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 622, "column": 1, "offset": 15452 }, "end": { "line": 622, "column": 15, "offset": 15466 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.",
                "position": {
                    "start": { "line": 624, "column": 1, "offset": 15468 },
                    "end": { "line": 629, "column": 4, "offset": 15577 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 631, "column": 5, "offset": 15583 },
                            "end": { "line": 631, "column": 14, "offset": 15592 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 631, "column": 1, "offset": 15579 }, "end": { "line": 631, "column": 14, "offset": 15592 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ",
                        "position": {
                            "start": { "line": 633, "column": 1, "offset": 15594 },
                            "end": { "line": 633, "column": 110, "offset": 15703 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "j",
                        "position": {
                            "start": { "line": 633, "column": 110, "offset": 15703 },
                            "end": { "line": 633, "column": 113, "offset": 15706 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " whose price ",
                        "position": {
                            "start": { "line": 633, "column": 113, "offset": 15706 },
                            "end": { "line": 633, "column": 126, "offset": 15719 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "price[j]",
                        "position": {
                            "start": { "line": 633, "column": 126, "offset": 15719 },
                            "end": { "line": 633, "column": 136, "offset": 15729 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " is lower than the base (which means if we sell now the profit would be negative), we sell ",
                        "position": {
                            "start": { "line": 633, "column": 136, "offset": 15729 },
                            "end": { "line": 633, "column": 227, "offset": 15820 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "j-1",
                        "position": {
                            "start": { "line": 633, "column": 227, "offset": 15820 },
                            "end": { "line": 633, "column": 232, "offset": 15825 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " instead and make ",
                        "position": {
                            "start": { "line": 633, "column": 232, "offset": 15825 },
                            "end": { "line": 633, "column": 250, "offset": 15843 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "j",
                        "position": {
                            "start": { "line": 633, "column": 250, "offset": 15843 },
                            "end": { "line": 633, "column": 253, "offset": 15846 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " the new base.",
                        "position": {
                            "start": { "line": 633, "column": 253, "offset": 15846 },
                            "end": { "line": 633, "column": 267, "offset": 15860 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 633, "column": 1, "offset": 15594 }, "end": { "line": 633, "column": 267, "offset": 15860 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Because ",
                        "position": {
                            "start": { "line": 635, "column": 1, "offset": 15862 },
                            "end": { "line": 635, "column": 9, "offset": 15870 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "price[j]",
                        "position": {
                            "start": { "line": 635, "column": 9, "offset": 15870 },
                            "end": { "line": 635, "column": 19, "offset": 15880 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " is lower that the base, using ",
                        "position": {
                            "start": { "line": 635, "column": 19, "offset": 15880 },
                            "end": { "line": 635, "column": 50, "offset": 15911 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "j",
                        "position": {
                            "start": { "line": 635, "column": 50, "offset": 15911 },
                            "end": { "line": 635, "column": 53, "offset": 15914 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " as new base is guaranteed to gain more profit comparing to the old one.",
                        "position": {
                            "start": { "line": 635, "column": 53, "offset": 15914 },
                            "end": { "line": 635, "column": 125, "offset": 15986 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 635, "column": 1, "offset": 15862 }, "end": { "line": 635, "column": 125, "offset": 15986 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};",
                "position": {
                    "start": { "line": 637, "column": 1, "offset": 15988 },
                    "end": { "line": 655, "column": 4, "offset": 16379 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 657, "column": 1, "offset": 16381 }, "end": { "line": 657, "column": 4, "offset": 16384 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Easy\nRelated Topics:\n\"Array\": ",
                        "position": {
                            "start": { "line": 659, "column": 1, "offset": 16386 },
                            "end": { "line": 661, "column": 10, "offset": 16428 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/array",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/array",
                                "position": {
                                    "start": { "line": 661, "column": 10, "offset": 16428 },
                                    "end": { "line": 661, "column": 40, "offset": 16458 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 661, "column": 10, "offset": 16428 },
                            "end": { "line": 661, "column": 40, "offset": 16458 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Greedy\": ",
                        "position": {
                            "start": { "line": 661, "column": 40, "offset": 16458 },
                            "end": { "line": 662, "column": 11, "offset": 16469 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/greedy",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/greedy",
                                "position": {
                                    "start": { "line": 662, "column": 11, "offset": 16469 },
                                    "end": { "line": 662, "column": 42, "offset": 16500 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 662, "column": 11, "offset": 16469 },
                            "end": { "line": 662, "column": 42, "offset": 16500 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ",
                        "position": {
                            "start": { "line": 662, "column": 42, "offset": 16500 },
                            "end": { "line": 664, "column": 36, "offset": 16555 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
                                "position": {
                                    "start": { "line": 664, "column": 36, "offset": 16555 },
                                    "end": { "line": 664, "column": 97, "offset": 16616 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 664, "column": 36, "offset": 16555 },
                            "end": { "line": 664, "column": 97, "offset": 16616 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock III\": ",
                        "position": {
                            "start": { "line": 664, "column": 97, "offset": 16616 },
                            "end": { "line": 665, "column": 40, "offset": 16656 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
                                "position": {
                                    "start": { "line": 665, "column": 40, "offset": 16656 },
                                    "end": { "line": 665, "column": 105, "offset": 16721 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 665, "column": 40, "offset": 16656 },
                            "end": { "line": 665, "column": 105, "offset": 16721 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock IV\": ",
                        "position": {
                            "start": { "line": 665, "column": 105, "offset": 16721 },
                            "end": { "line": 666, "column": 39, "offset": 16760 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
                                "position": {
                                    "start": { "line": 666, "column": 39, "offset": 16760 },
                                    "end": { "line": 666, "column": 103, "offset": 16824 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 666, "column": 39, "offset": 16760 },
                            "end": { "line": 666, "column": 103, "offset": 16824 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock with Cooldown\": ",
                        "position": {
                            "start": { "line": 666, "column": 103, "offset": 16824 },
                            "end": { "line": 667, "column": 50, "offset": 16874 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown",
                                "position": {
                                    "start": { "line": 667, "column": 50, "offset": 16874 },
                                    "end": { "line": 667, "column": 125, "offset": 16949 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 667, "column": 50, "offset": 16874 },
                            "end": { "line": 667, "column": 125, "offset": 16949 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ",
                        "position": {
                            "start": { "line": 667, "column": 125, "offset": 16949 },
                            "end": { "line": 668, "column": 57, "offset": 17006 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee",
                                "position": {
                                    "start": { "line": 668, "column": 57, "offset": 17006 },
                                    "end": { "line": 668, "column": 139, "offset": 17088 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 668, "column": 57, "offset": 17006 },
                            "end": { "line": 668, "column": 139, "offset": 17088 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 659, "column": 1, "offset": 16386 },
                    "end": { "line": 668, "column": 139, "offset": 17088 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 670, "column": 1, "offset": 17090 }, "end": { "line": 670, "column": 4, "offset": 17093 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 672, "column": 2, "offset": 17096 },
                                    "end": { "line": 672, "column": 142, "offset": 17236 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 672, "column": 1, "offset": 17095 },
                            "end": { "line": 672, "column": 253, "offset": 17347 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 672, "column": 1, "offset": 17095 }, "end": { "line": 672, "column": 253, "offset": 17347 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 674, "column": 4, "offset": 17352 },
                            "end": { "line": 674, "column": 6, "offset": 17354 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "122. Best Time to Buy and Sell Stock II",
                                "position": {
                                    "start": { "line": 674, "column": 7, "offset": 17355 },
                                    "end": { "line": 674, "column": 46, "offset": 17394 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 674, "column": 6, "offset": 17354 },
                            "end": { "line": 674, "column": 126, "offset": 17474 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 674, "column": 1, "offset": 17349 }, "end": { "line": 674, "column": 126, "offset": 17474 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 676, "column": 5, "offset": 17480 },
                            "end": { "line": 676, "column": 13, "offset": 17488 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 676, "column": 1, "offset": 17476 }, "end": { "line": 676, "column": 13, "offset": 17488 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Say you have an array for which the ",
                        "position": {
                            "start": { "line": 678, "column": 1, "offset": 17490 },
                            "end": { "line": 678, "column": 37, "offset": 17526 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "i",
                                "position": {
                                    "start": { "line": 678, "column": 38, "offset": 17527 },
                                    "end": { "line": 678, "column": 39, "offset": 17528 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 678, "column": 37, "offset": 17526 },
                            "end": { "line": 678, "column": 40, "offset": 17529 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "th element is the price of a given stock on day ",
                        "position": {
                            "start": { "line": 678, "column": 40, "offset": 17529 },
                            "end": { "line": 678, "column": 88, "offset": 17577 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "i",
                                "position": {
                                    "start": { "line": 678, "column": 89, "offset": 17578 },
                                    "end": { "line": 678, "column": 90, "offset": 17579 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 678, "column": 88, "offset": 17577 },
                            "end": { "line": 678, "column": 91, "offset": 17580 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 678, "column": 91, "offset": 17580 },
                            "end": { "line": 678, "column": 92, "offset": 17581 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 678, "column": 1, "offset": 17490 }, "end": { "line": 678, "column": 92, "offset": 17581 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).",
                        "position": {
                            "start": { "line": 680, "column": 1, "offset": 17583 },
                            "end": { "line": 680, "column": 162, "offset": 17744 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 680, "column": 1, "offset": 17583 }, "end": { "line": 680, "column": 162, "offset": 17744 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note:",
                                "position": {
                                    "start": { "line": 682, "column": 3, "offset": 17748 },
                                    "end": { "line": 682, "column": 8, "offset": 17753 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 682, "column": 1, "offset": 17746 },
                            "end": { "line": 682, "column": 10, "offset": 17755 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).",
                        "position": {
                            "start": { "line": 682, "column": 10, "offset": 17755 },
                            "end": { "line": 682, "column": 125, "offset": 17870 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 682, "column": 1, "offset": 17746 }, "end": { "line": 682, "column": 125, "offset": 17870 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 684, "column": 3, "offset": 17874 },
                                    "end": { "line": 684, "column": 13, "offset": 17884 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 684, "column": 1, "offset": 17872 },
                            "end": { "line": 684, "column": 15, "offset": 17886 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 684, "column": 1, "offset": 17872 }, "end": { "line": 684, "column": 15, "offset": 17886 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.",
                "position": {
                    "start": { "line": 686, "column": 1, "offset": 17888 },
                    "end": { "line": 692, "column": 4, "offset": 18106 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 694, "column": 3, "offset": 18110 },
                                    "end": { "line": 694, "column": 13, "offset": 18120 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 694, "column": 1, "offset": 18108 },
                            "end": { "line": 694, "column": 15, "offset": 18122 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 694, "column": 1, "offset": 18108 }, "end": { "line": 694, "column": 15, "offset": 18122 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.",
                "position": {
                    "start": { "line": 696, "column": 1, "offset": 18124 },
                    "end": { "line": 703, "column": 4, "offset": 18438 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 3:",
                                "position": {
                                    "start": { "line": 705, "column": 3, "offset": 18442 },
                                    "end": { "line": 705, "column": 13, "offset": 18452 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 705, "column": 1, "offset": 18440 },
                            "end": { "line": 705, "column": 15, "offset": 18454 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 705, "column": 1, "offset": 18440 }, "end": { "line": 705, "column": 15, "offset": 18454 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.",
                "position": { "start": { "line": 707, "column": 1, "offset": 18456 }, "end": { "line": 709, "column": 76, "offset": 18568 }, "indent": [1, 1] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 711, "column": 5, "offset": 18574 },
                            "end": { "line": 711, "column": 14, "offset": 18583 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 711, "column": 1, "offset": 18570 }, "end": { "line": 711, "column": 14, "offset": 18583 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).",
                        "position": {
                            "start": { "line": 713, "column": 1, "offset": 18585 },
                            "end": { "line": 713, "column": 144, "offset": 18728 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 713, "column": 1, "offset": 18585 }, "end": { "line": 713, "column": 144, "offset": 18728 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};",
                "position": {
                    "start": { "line": 715, "column": 1, "offset": 18730 },
                    "end": { "line": 729, "column": 4, "offset": 19024 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 731, "column": 1, "offset": 19026 }, "end": { "line": 731, "column": 4, "offset": 19029 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Hard\nRelated Topics:\n\"Array\": ",
                        "position": {
                            "start": { "line": 733, "column": 1, "offset": 19031 },
                            "end": { "line": 735, "column": 10, "offset": 19073 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/array",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/array",
                                "position": {
                                    "start": { "line": 735, "column": 10, "offset": 19073 },
                                    "end": { "line": 735, "column": 40, "offset": 19103 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 735, "column": 10, "offset": 19073 },
                            "end": { "line": 735, "column": 40, "offset": 19103 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Dynamic Programming\": ",
                        "position": {
                            "start": { "line": 735, "column": 40, "offset": 19103 },
                            "end": { "line": 736, "column": 24, "offset": 19127 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/dynamic-programming",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/dynamic-programming",
                                "position": {
                                    "start": { "line": 736, "column": 24, "offset": 19127 },
                                    "end": { "line": 736, "column": 68, "offset": 19171 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 736, "column": 24, "offset": 19127 },
                            "end": { "line": 736, "column": 68, "offset": 19171 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ",
                        "position": {
                            "start": { "line": 736, "column": 68, "offset": 19171 },
                            "end": { "line": 738, "column": 36, "offset": 19226 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
                                "position": {
                                    "start": { "line": 738, "column": 36, "offset": 19226 },
                                    "end": { "line": 738, "column": 97, "offset": 19287 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 738, "column": 36, "offset": 19226 },
                            "end": { "line": 738, "column": 97, "offset": 19287 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock II\": ",
                        "position": {
                            "start": { "line": 738, "column": 97, "offset": 19287 },
                            "end": { "line": 739, "column": 39, "offset": 19326 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
                                "position": {
                                    "start": { "line": 739, "column": 39, "offset": 19326 },
                                    "end": { "line": 739, "column": 103, "offset": 19390 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 739, "column": 39, "offset": 19326 },
                            "end": { "line": 739, "column": 103, "offset": 19390 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Best Time to Buy and Sell Stock IV\": ",
                        "position": {
                            "start": { "line": 739, "column": 103, "offset": 19390 },
                            "end": { "line": 740, "column": 39, "offset": 19429 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
                                "position": {
                                    "start": { "line": 740, "column": 39, "offset": 19429 },
                                    "end": { "line": 740, "column": 103, "offset": 19493 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 740, "column": 39, "offset": 19429 },
                            "end": { "line": 740, "column": 103, "offset": 19493 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ",
                        "position": {
                            "start": { "line": 740, "column": 103, "offset": 19493 },
                            "end": { "line": 741, "column": 47, "offset": 19540 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays",
                                "position": {
                                    "start": { "line": 741, "column": 47, "offset": 19540 },
                                    "end": { "line": 741, "column": 119, "offset": 19612 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 741, "column": 47, "offset": 19540 },
                            "end": { "line": 741, "column": 119, "offset": 19612 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 733, "column": 1, "offset": 19031 },
                    "end": { "line": 741, "column": 119, "offset": 19612 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 743, "column": 1, "offset": 19614 }, "end": { "line": 743, "column": 4, "offset": 19617 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 745, "column": 2, "offset": 19620 },
                                    "end": { "line": 745, "column": 142, "offset": 19760 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 745, "column": 1, "offset": 19619 },
                            "end": { "line": 745, "column": 255, "offset": 19873 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 745, "column": 1, "offset": 19619 }, "end": { "line": 745, "column": 255, "offset": 19873 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 747, "column": 4, "offset": 19878 },
                            "end": { "line": 747, "column": 6, "offset": 19880 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "123. Best Time to Buy and Sell Stock III",
                                "position": {
                                    "start": { "line": 747, "column": 7, "offset": 19881 },
                                    "end": { "line": 747, "column": 47, "offset": 19921 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 747, "column": 6, "offset": 19880 },
                            "end": { "line": 747, "column": 128, "offset": 20002 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 747, "column": 1, "offset": 19875 }, "end": { "line": 747, "column": 128, "offset": 20002 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 749, "column": 5, "offset": 20008 },
                            "end": { "line": 749, "column": 13, "offset": 20016 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 749, "column": 1, "offset": 20004 }, "end": { "line": 749, "column": 13, "offset": 20016 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Say you have an array for which the ",
                        "position": {
                            "start": { "line": 751, "column": 1, "offset": 20018 },
                            "end": { "line": 751, "column": 37, "offset": 20054 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "i",
                                "position": {
                                    "start": { "line": 751, "column": 38, "offset": 20055 },
                                    "end": { "line": 751, "column": 39, "offset": 20056 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 751, "column": 37, "offset": 20054 },
                            "end": { "line": 751, "column": 40, "offset": 20057 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "th element is the price of a given stock on day ",
                        "position": {
                            "start": { "line": 751, "column": 40, "offset": 20057 },
                            "end": { "line": 751, "column": 88, "offset": 20105 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "i",
                                "position": {
                                    "start": { "line": 751, "column": 89, "offset": 20106 },
                                    "end": { "line": 751, "column": 90, "offset": 20107 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 751, "column": 88, "offset": 20105 },
                            "end": { "line": 751, "column": 91, "offset": 20108 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 751, "column": 91, "offset": 20108 },
                            "end": { "line": 751, "column": 92, "offset": 20109 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 751, "column": 1, "offset": 20018 }, "end": { "line": 751, "column": 92, "offset": 20109 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Design an algorithm to find the maximum profit. You may complete at most ",
                        "position": {
                            "start": { "line": 753, "column": 1, "offset": 20111 },
                            "end": { "line": 753, "column": 74, "offset": 20184 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "two",
                                "position": {
                                    "start": { "line": 753, "column": 75, "offset": 20185 },
                                    "end": { "line": 753, "column": 78, "offset": 20188 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 753, "column": 74, "offset": 20184 },
                            "end": { "line": 753, "column": 79, "offset": 20189 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " transactions.",
                        "position": {
                            "start": { "line": 753, "column": 79, "offset": 20189 },
                            "end": { "line": 753, "column": 93, "offset": 20203 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 753, "column": 1, "offset": 20111 }, "end": { "line": 753, "column": 93, "offset": 20203 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "*",
                        "position": {
                            "start": { "line": 755, "column": 1, "offset": 20205 },
                            "end": { "line": 755, "column": 3, "offset": 20207 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "*",
                        "position": {
                            "start": { "line": 755, "column": 3, "offset": 20207 },
                            "end": { "line": 755, "column": 5, "offset": 20209 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "Note:",
                        "position": {
                            "start": { "line": 755, "column": 5, "offset": 20209 },
                            "end": { "line": 755, "column": 10, "offset": 20214 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "*",
                        "position": {
                            "start": { "line": 755, "column": 10, "offset": 20214 },
                            "end": { "line": 755, "column": 12, "offset": 20216 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "*",
                        "position": {
                            "start": { "line": 755, "column": 12, "offset": 20216 },
                            "end": { "line": 755, "column": 14, "offset": 20218 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).",
                        "position": {
                            "start": { "line": 755, "column": 14, "offset": 20218 },
                            "end": { "line": 755, "column": 128, "offset": 20332 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 755, "column": 1, "offset": 20205 }, "end": { "line": 755, "column": 128, "offset": 20332 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 757, "column": 3, "offset": 20336 },
                                    "end": { "line": 757, "column": 13, "offset": 20346 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 757, "column": 1, "offset": 20334 },
                            "end": { "line": 757, "column": 15, "offset": 20348 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 757, "column": 1, "offset": 20334 }, "end": { "line": 757, "column": 15, "offset": 20348 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.",
                "position": {
                    "start": { "line": 759, "column": 1, "offset": 20350 },
                    "end": { "line": 762, "column": 96, "offset": 20579 },
                    "indent": [1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 764, "column": 3, "offset": 20583 },
                                    "end": { "line": 764, "column": 13, "offset": 20593 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 764, "column": 1, "offset": 20581 },
                            "end": { "line": 764, "column": 15, "offset": 20595 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 764, "column": 1, "offset": 20581 }, "end": { "line": 764, "column": 15, "offset": 20595 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.",
                "position": {
                    "start": { "line": 766, "column": 1, "offset": 20597 },
                    "end": { "line": 773, "column": 4, "offset": 20911 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 3:",
                                "position": {
                                    "start": { "line": 775, "column": 3, "offset": 20915 },
                                    "end": { "line": 775, "column": 13, "offset": 20925 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 775, "column": 1, "offset": 20913 },
                            "end": { "line": 775, "column": 15, "offset": 20927 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 775, "column": 1, "offset": 20913 }, "end": { "line": 775, "column": 15, "offset": 20927 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.",
                "position": { "start": { "line": 777, "column": 1, "offset": 20929 }, "end": { "line": 779, "column": 76, "offset": 21041 }, "indent": [1, 1] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 781, "column": 5, "offset": 21047 },
                            "end": { "line": 781, "column": 14, "offset": 21056 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 781, "column": 1, "offset": 21043 }, "end": { "line": 781, "column": 14, "offset": 21056 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ",
                        "position": {
                            "start": { "line": 783, "column": 1, "offset": 21058 },
                            "end": { "line": 783, "column": 200, "offset": 21257 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "two",
                                "position": {
                                    "start": { "line": 783, "column": 201, "offset": 21258 },
                                    "end": { "line": 783, "column": 204, "offset": 21261 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 783, "column": 200, "offset": 21257 },
                            "end": { "line": 783, "column": 205, "offset": 21262 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " transactions, so divide the days into two groups, ",
                        "position": {
                            "start": { "line": 783, "column": 205, "offset": 21262 },
                            "end": { "line": 783, "column": 256, "offset": 21313 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "[0...k]",
                        "position": {
                            "start": { "line": 783, "column": 256, "offset": 21313 },
                            "end": { "line": 783, "column": 265, "offset": 21322 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": {
                            "start": { "line": 783, "column": 265, "offset": 21322 },
                            "end": { "line": 783, "column": 270, "offset": 21327 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "[k...n-1]",
                        "position": {
                            "start": { "line": 783, "column": 270, "offset": 21327 },
                            "end": { "line": 783, "column": 281, "offset": 21338 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". Notice ",
                        "position": {
                            "start": { "line": 783, "column": 281, "offset": 21338 },
                            "end": { "line": 783, "column": 290, "offset": 21347 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "k",
                        "position": {
                            "start": { "line": 783, "column": 290, "offset": 21347 },
                            "end": { "line": 783, "column": 293, "offset": 21350 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " exists in both groups because technically we can sell out then immediately buy in at the same day.",
                        "position": {
                            "start": { "line": 783, "column": 293, "offset": 21350 },
                            "end": { "line": 783, "column": 392, "offset": 21449 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 783, "column": 1, "offset": 21058 }, "end": { "line": 783, "column": 392, "offset": 21449 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Define ",
                        "position": {
                            "start": { "line": 785, "column": 1, "offset": 21451 },
                            "end": { "line": 785, "column": 8, "offset": 21458 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "p1(i)",
                        "position": {
                            "start": { "line": 785, "column": 8, "offset": 21458 },
                            "end": { "line": 785, "column": 15, "offset": 21465 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " to be the max profit of day ",
                        "position": {
                            "start": { "line": 785, "column": 15, "offset": 21465 },
                            "end": { "line": 785, "column": 44, "offset": 21494 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "[0...i]",
                        "position": {
                            "start": { "line": 785, "column": 44, "offset": 21494 },
                            "end": { "line": 785, "column": 53, "offset": 21503 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". This is just like the problem of ",
                        "position": {
                            "start": { "line": 785, "column": 53, "offset": 21503 },
                            "end": { "line": 785, "column": 88, "offset": 21538 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md",
                        "children": [
                            {
                                "type": "text",
                                "value": "121. Best Time to Buy and Sell Stock",
                                "position": {
                                    "start": { "line": 785, "column": 89, "offset": 21539 },
                                    "end": { "line": 785, "column": 125, "offset": 21575 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 785, "column": 88, "offset": 21538 },
                            "end": { "line": 785, "column": 183, "offset": 21633 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 785, "column": 183, "offset": 21633 },
                            "end": { "line": 785, "column": 184, "offset": 21634 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 785, "column": 1, "offset": 21451 }, "end": { "line": 785, "column": 184, "offset": 21634 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1",
                "position": { "start": { "line": 787, "column": 1, "offset": 21636 }, "end": { "line": 788, "column": 87, "offset": 21736 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Define ",
                        "position": {
                            "start": { "line": 790, "column": 1, "offset": 21738 },
                            "end": { "line": 790, "column": 8, "offset": 21745 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "p2(i)",
                        "position": {
                            "start": { "line": 790, "column": 8, "offset": 21745 },
                            "end": { "line": 790, "column": 15, "offset": 21752 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " to be the max profit of day ",
                        "position": {
                            "start": { "line": 790, "column": 15, "offset": 21752 },
                            "end": { "line": 790, "column": 44, "offset": 21781 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "[i...n-1]",
                        "position": {
                            "start": { "line": 790, "column": 44, "offset": 21781 },
                            "end": { "line": 790, "column": 55, "offset": 21792 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". This is the mirror of ",
                        "position": {
                            "start": { "line": 790, "column": 55, "offset": 21792 },
                            "end": { "line": 790, "column": 79, "offset": 21816 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "p1",
                        "position": {
                            "start": { "line": 790, "column": 79, "offset": 21816 },
                            "end": { "line": 790, "column": 83, "offset": 21820 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 790, "column": 83, "offset": 21820 },
                            "end": { "line": 790, "column": 84, "offset": 21821 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 790, "column": 1, "offset": 21738 }, "end": { "line": 790, "column": 84, "offset": 21821 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0",
                "position": { "start": { "line": 792, "column": 1, "offset": 21823 }, "end": { "line": 793, "column": 87, "offset": 21925 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Define ",
                        "position": {
                            "start": { "line": 795, "column": 1, "offset": 21927 },
                            "end": { "line": 795, "column": 8, "offset": 21934 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "f(k)",
                        "position": {
                            "start": { "line": 795, "column": 8, "offset": 21934 },
                            "end": { "line": 795, "column": 14, "offset": 21940 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " to be ",
                        "position": {
                            "start": { "line": 795, "column": 14, "offset": 21940 },
                            "end": { "line": 795, "column": 21, "offset": 21947 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "p1(k) + p2(k)",
                        "position": {
                            "start": { "line": 795, "column": 21, "offset": 21947 },
                            "end": { "line": 795, "column": 36, "offset": 21962 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". We need to get ",
                        "position": {
                            "start": { "line": 795, "column": 36, "offset": 21962 },
                            "end": { "line": 795, "column": 53, "offset": 21979 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "max( f(0), ..., f(n-1) )",
                        "position": {
                            "start": { "line": 795, "column": 53, "offset": 21979 },
                            "end": { "line": 795, "column": 79, "offset": 22005 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 795, "column": 79, "offset": 22005 },
                            "end": { "line": 795, "column": 80, "offset": 22006 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 795, "column": 1, "offset": 21927 }, "end": { "line": 795, "column": 80, "offset": 22006 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};",
                "position": {
                    "start": { "line": 797, "column": 1, "offset": 22008 },
                    "end": { "line": 826, "column": 4, "offset": 22607 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 828, "column": 1, "offset": 22609 }, "end": { "line": 828, "column": 4, "offset": 22612 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Hard\nRelated Topics:\n\"Tree\": ",
                        "position": {
                            "start": { "line": 830, "column": 1, "offset": 22614 },
                            "end": { "line": 832, "column": 9, "offset": 22655 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/tree",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/tree",
                                "position": {
                                    "start": { "line": 832, "column": 9, "offset": 22655 },
                                    "end": { "line": 832, "column": 38, "offset": 22684 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 832, "column": 9, "offset": 22655 },
                            "end": { "line": 832, "column": 38, "offset": 22684 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Depth-first Search\": ",
                        "position": {
                            "start": { "line": 832, "column": 38, "offset": 22684 },
                            "end": { "line": 833, "column": 23, "offset": 22707 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/depth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/depth-first-search",
                                "position": {
                                    "start": { "line": 833, "column": 23, "offset": 22707 },
                                    "end": { "line": 833, "column": 66, "offset": 22750 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 833, "column": 23, "offset": 22707 },
                            "end": { "line": 833, "column": 66, "offset": 22750 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Path Sum\": ",
                        "position": {
                            "start": { "line": 833, "column": 66, "offset": 22750 },
                            "end": { "line": 835, "column": 13, "offset": 22782 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/path-sum",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/path-sum",
                                "position": {
                                    "start": { "line": 835, "column": 13, "offset": 22782 },
                                    "end": { "line": 835, "column": 51, "offset": 22820 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 835, "column": 13, "offset": 22782 },
                            "end": { "line": 835, "column": 51, "offset": 22820 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Sum Root to Leaf Numbers\": ",
                        "position": {
                            "start": { "line": 835, "column": 51, "offset": 22820 },
                            "end": { "line": 836, "column": 29, "offset": 22849 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/sum-root-to-leaf-numbers",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/sum-root-to-leaf-numbers",
                                "position": {
                                    "start": { "line": 836, "column": 29, "offset": 22849 },
                                    "end": { "line": 836, "column": 83, "offset": 22903 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 836, "column": 29, "offset": 22849 },
                            "end": { "line": 836, "column": 83, "offset": 22903 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Path Sum IV\": ",
                        "position": {
                            "start": { "line": 836, "column": 83, "offset": 22903 },
                            "end": { "line": 837, "column": 16, "offset": 22919 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/path-sum-iv",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/path-sum-iv",
                                "position": {
                                    "start": { "line": 837, "column": 16, "offset": 22919 },
                                    "end": { "line": 837, "column": 57, "offset": 22960 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 837, "column": 16, "offset": 22919 },
                            "end": { "line": 837, "column": 57, "offset": 22960 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Longest Univalue Path\": ",
                        "position": {
                            "start": { "line": 837, "column": 57, "offset": 22960 },
                            "end": { "line": 838, "column": 26, "offset": 22986 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/longest-univalue-path",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/longest-univalue-path",
                                "position": {
                                    "start": { "line": 838, "column": 26, "offset": 22986 },
                                    "end": { "line": 838, "column": 77, "offset": 23037 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 838, "column": 26, "offset": 22986 },
                            "end": { "line": 838, "column": 77, "offset": 23037 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 830, "column": 1, "offset": 22614 },
                    "end": { "line": 838, "column": 77, "offset": 23037 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 840, "column": 1, "offset": 23039 }, "end": { "line": 840, "column": 4, "offset": 23042 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 842, "column": 2, "offset": 23045 },
                                    "end": { "line": 842, "column": 142, "offset": 23185 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 842, "column": 1, "offset": 23044 },
                            "end": { "line": 842, "column": 241, "offset": 23284 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 842, "column": 1, "offset": 23044 }, "end": { "line": 842, "column": 241, "offset": 23284 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 844, "column": 4, "offset": 23289 },
                            "end": { "line": 844, "column": 6, "offset": 23291 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/binary-tree-maximum-path-sum/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "124. Binary Tree Maximum Path Sum",
                                "position": {
                                    "start": { "line": 844, "column": 7, "offset": 23292 },
                                    "end": { "line": 844, "column": 40, "offset": 23325 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 844, "column": 6, "offset": 23291 },
                            "end": { "line": 844, "column": 114, "offset": 23399 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 844, "column": 1, "offset": 23286 }, "end": { "line": 844, "column": 114, "offset": 23399 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 846, "column": 5, "offset": 23405 },
                            "end": { "line": 846, "column": 13, "offset": 23413 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 846, "column": 1, "offset": 23401 }, "end": { "line": 846, "column": 13, "offset": 23413 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a ",
                        "position": {
                            "start": { "line": 848, "column": 1, "offset": 23415 },
                            "end": { "line": 848, "column": 9, "offset": 23423 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "non-empty",
                                "position": {
                                    "start": { "line": 848, "column": 11, "offset": 23425 },
                                    "end": { "line": 848, "column": 20, "offset": 23434 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 848, "column": 9, "offset": 23423 },
                            "end": { "line": 848, "column": 22, "offset": 23436 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " binary tree, find the maximum path sum.",
                        "position": {
                            "start": { "line": 848, "column": 22, "offset": 23436 },
                            "end": { "line": 848, "column": 62, "offset": 23476 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 848, "column": 1, "offset": 23415 }, "end": { "line": 848, "column": 62, "offset": 23476 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ",
                        "position": {
                            "start": { "line": 850, "column": 1, "offset": 23478 },
                            "end": { "line": 850, "column": 168, "offset": 23645 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "at least one node",
                                "position": {
                                    "start": { "line": 850, "column": 170, "offset": 23647 },
                                    "end": { "line": 850, "column": 187, "offset": 23664 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 850, "column": 168, "offset": 23645 },
                            "end": { "line": 850, "column": 189, "offset": 23666 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and does not need to go through the root.",
                        "position": {
                            "start": { "line": 850, "column": 189, "offset": 23666 },
                            "end": { "line": 850, "column": 231, "offset": 23708 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 850, "column": 1, "offset": 23478 }, "end": { "line": 850, "column": 231, "offset": 23708 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 852, "column": 3, "offset": 23712 },
                                    "end": { "line": 852, "column": 13, "offset": 23722 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 852, "column": 1, "offset": 23710 },
                            "end": { "line": 852, "column": 15, "offset": 23724 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 852, "column": 1, "offset": 23710 }, "end": { "line": 852, "column": 15, "offset": 23724 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6",
                "position": {
                    "start": { "line": 854, "column": 1, "offset": 23726 },
                    "end": { "line": 863, "column": 4, "offset": 23791 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 865, "column": 3, "offset": 23795 },
                                    "end": { "line": 865, "column": 13, "offset": 23805 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 865, "column": 1, "offset": 23793 },
                            "end": { "line": 865, "column": 15, "offset": 23807 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 865, "column": 1, "offset": 23793 }, "end": { "line": 865, "column": 15, "offset": 23807 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42",
                "position": {
                    "start": { "line": 867, "column": 1, "offset": 23809 },
                    "end": { "line": 878, "column": 4, "offset": 23904 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 880, "column": 5, "offset": 23910 },
                            "end": { "line": 880, "column": 14, "offset": 23919 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 880, "column": 1, "offset": 23906 }, "end": { "line": 880, "column": 14, "offset": 23919 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For every ",
                        "position": {
                            "start": { "line": 882, "column": 1, "offset": 23921 },
                            "end": { "line": 882, "column": 11, "offset": 23931 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "node",
                        "position": {
                            "start": { "line": 882, "column": 11, "offset": 23931 },
                            "end": { "line": 882, "column": 17, "offset": 23937 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ", there are six possible ways to get the max path sum:",
                        "position": {
                            "start": { "line": 882, "column": 17, "offset": 23937 },
                            "end": { "line": 882, "column": 71, "offset": 23991 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 882, "column": 1, "offset": 23921 }, "end": { "line": 882, "column": 71, "offset": 23991 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "With ",
                                        "position": {
                                            "start": { "line": 884, "column": 5, "offset": 23997 },
                                            "end": { "line": 884, "column": 10, "offset": 24002 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "node.val",
                                        "position": {
                                            "start": { "line": 884, "column": 10, "offset": 24002 },
                                            "end": { "line": 884, "column": 20, "offset": 24012 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 884, "column": 5, "offset": 23997 },
                                    "end": { "line": 884, "column": 20, "offset": 24012 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "list",
                                "ordered": true,
                                "start": 1,
                                "spread": false,
                                "children": [
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "node.val",
                                                        "position": {
                                                            "start": { "line": 885, "column": 9, "offset": 24021 },
                                                            "end": { "line": 885, "column": 19, "offset": 24031 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " plus the max sum of a path that ends with ",
                                                        "position": {
                                                            "start": { "line": 885, "column": 19, "offset": 24031 },
                                                            "end": { "line": 885, "column": 62, "offset": 24074 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "node.left",
                                                        "position": {
                                                            "start": { "line": 885, "column": 62, "offset": 24074 },
                                                            "end": { "line": 885, "column": 73, "offset": 24085 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": ".",
                                                        "position": {
                                                            "start": { "line": 885, "column": 73, "offset": 24085 },
                                                            "end": { "line": 885, "column": 74, "offset": 24086 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 885, "column": 9, "offset": 24021 },
                                                    "end": { "line": 885, "column": 74, "offset": 24086 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 885, "column": 5, "offset": 24017 },
                                            "end": { "line": 885, "column": 74, "offset": 24086 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "node.val",
                                                        "position": {
                                                            "start": { "line": 886, "column": 9, "offset": 24095 },
                                                            "end": { "line": 886, "column": 19, "offset": 24105 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " plus the max sum of a path that starts with ",
                                                        "position": {
                                                            "start": { "line": 886, "column": 19, "offset": 24105 },
                                                            "end": { "line": 886, "column": 64, "offset": 24150 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "node.right",
                                                        "position": {
                                                            "start": { "line": 886, "column": 64, "offset": 24150 },
                                                            "end": { "line": 886, "column": 76, "offset": 24162 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": ".",
                                                        "position": {
                                                            "start": { "line": 886, "column": 76, "offset": 24162 },
                                                            "end": { "line": 886, "column": 77, "offset": 24163 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 886, "column": 9, "offset": 24095 },
                                                    "end": { "line": 886, "column": 77, "offset": 24163 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 886, "column": 5, "offset": 24091 },
                                            "end": { "line": 886, "column": 77, "offset": 24163 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "node.val",
                                                        "position": {
                                                            "start": { "line": 887, "column": 9, "offset": 24172 },
                                                            "end": { "line": 887, "column": 19, "offset": 24182 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " plus the max sum of both paths.",
                                                        "position": {
                                                            "start": { "line": 887, "column": 19, "offset": 24182 },
                                                            "end": { "line": 887, "column": 51, "offset": 24214 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 887, "column": 9, "offset": 24172 },
                                                    "end": { "line": 887, "column": 51, "offset": 24214 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 887, "column": 5, "offset": 24168 },
                                            "end": { "line": 887, "column": 51, "offset": 24214 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "text",
                                                        "value": "Just ",
                                                        "position": {
                                                            "start": { "line": 888, "column": 9, "offset": 24223 },
                                                            "end": { "line": 888, "column": 14, "offset": 24228 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "node.val",
                                                        "position": {
                                                            "start": { "line": 888, "column": 14, "offset": 24228 },
                                                            "end": { "line": 888, "column": 24, "offset": 24238 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " (the max sum of both paths are negative).",
                                                        "position": {
                                                            "start": { "line": 888, "column": 24, "offset": 24238 },
                                                            "end": { "line": 888, "column": 66, "offset": 24280 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 888, "column": 9, "offset": 24223 },
                                                    "end": { "line": 888, "column": 66, "offset": 24280 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 888, "column": 5, "offset": 24219 },
                                            "end": { "line": 888, "column": 66, "offset": 24280 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 885, "column": 5, "offset": 24017 },
                                    "end": { "line": 888, "column": 66, "offset": 24280 },
                                    "indent": [5, 5, 5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 884, "column": 1, "offset": 23993 },
                            "end": { "line": 888, "column": 66, "offset": 24280 },
                            "indent": [1, 1, 1, 1]
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Without",
                                        "position": {
                                            "start": { "line": 889, "column": 5, "offset": 24285 },
                                            "end": { "line": 889, "column": 12, "offset": 24292 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "node.val",
                                        "position": {
                                            "start": { "line": 889, "column": 12, "offset": 24292 },
                                            "end": { "line": 889, "column": 22, "offset": 24302 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " (disconnected)",
                                        "position": {
                                            "start": { "line": 889, "column": 22, "offset": 24302 },
                                            "end": { "line": 889, "column": 37, "offset": 24317 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 889, "column": 5, "offset": 24285 },
                                    "end": { "line": 889, "column": 37, "offset": 24317 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "list",
                                "ordered": true,
                                "start": 1,
                                "spread": false,
                                "children": [
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "text",
                                                        "value": "The max-sum path is somewhere under the ",
                                                        "position": {
                                                            "start": { "line": 890, "column": 9, "offset": 24326 },
                                                            "end": { "line": 890, "column": 49, "offset": 24366 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "node.left",
                                                        "position": {
                                                            "start": { "line": 890, "column": 49, "offset": 24366 },
                                                            "end": { "line": 890, "column": 60, "offset": 24377 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " subtree.",
                                                        "position": {
                                                            "start": { "line": 890, "column": 60, "offset": 24377 },
                                                            "end": { "line": 890, "column": 69, "offset": 24386 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 890, "column": 9, "offset": 24326 },
                                                    "end": { "line": 890, "column": 69, "offset": 24386 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 890, "column": 5, "offset": 24322 },
                                            "end": { "line": 890, "column": 69, "offset": 24386 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "listItem",
                                        "spread": false,
                                        "checked": null,
                                        "children": [
                                            {
                                                "type": "paragraph",
                                                "children": [
                                                    {
                                                        "type": "text",
                                                        "value": "The max-sum path is somewhere under the ",
                                                        "position": {
                                                            "start": { "line": 891, "column": 9, "offset": 24395 },
                                                            "end": { "line": 891, "column": 49, "offset": 24435 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "inlineCode",
                                                        "value": "node.right",
                                                        "position": {
                                                            "start": { "line": 891, "column": 49, "offset": 24435 },
                                                            "end": { "line": 891, "column": 61, "offset": 24447 },
                                                            "indent": []
                                                        }
                                                    },
                                                    {
                                                        "type": "text",
                                                        "value": " subtree.",
                                                        "position": {
                                                            "start": { "line": 891, "column": 61, "offset": 24447 },
                                                            "end": { "line": 891, "column": 70, "offset": 24456 },
                                                            "indent": []
                                                        }
                                                    }
                                                ],
                                                "position": {
                                                    "start": { "line": 891, "column": 9, "offset": 24395 },
                                                    "end": { "line": 891, "column": 70, "offset": 24456 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 891, "column": 5, "offset": 24391 },
                                            "end": { "line": 891, "column": 70, "offset": 24456 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 890, "column": 5, "offset": 24322 },
                                    "end": { "line": 891, "column": 70, "offset": 24456 },
                                    "indent": [5]
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 889, "column": 1, "offset": 24281 },
                            "end": { "line": 891, "column": 70, "offset": 24456 },
                            "indent": [1, 1]
                        }
                    }
                ],
                "position": {
                    "start": { "line": 884, "column": 1, "offset": 23993 },
                    "end": { "line": 891, "column": 70, "offset": 24456 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "There are two ways to implement this.",
                        "position": {
                            "start": { "line": 893, "column": 1, "offset": 24458 },
                            "end": { "line": 893, "column": 38, "offset": 24495 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 893, "column": 1, "offset": 24458 }, "end": { "line": 893, "column": 38, "offset": 24495 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "ONE",
                        "position": {
                            "start": { "line": 895, "column": 6, "offset": 24502 },
                            "end": { "line": 895, "column": 9, "offset": 24505 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 895, "column": 1, "offset": 24497 }, "end": { "line": 895, "column": 9, "offset": 24505 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Define a function that returns two values. The max sum of a path that may or may not end with ",
                        "position": {
                            "start": { "line": 897, "column": 1, "offset": 24507 },
                            "end": { "line": 897, "column": 95, "offset": 24601 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "root",
                        "position": {
                            "start": { "line": 897, "column": 95, "offset": 24601 },
                            "end": { "line": 897, "column": 101, "offset": 24607 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " node, and the max sum of the path that ends with ",
                        "position": {
                            "start": { "line": 897, "column": 101, "offset": 24607 },
                            "end": { "line": 897, "column": 151, "offset": 24657 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "root",
                        "position": {
                            "start": { "line": 897, "column": 151, "offset": 24657 },
                            "end": { "line": 897, "column": 157, "offset": 24663 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " node.",
                        "position": {
                            "start": { "line": 897, "column": 157, "offset": 24663 },
                            "end": { "line": 897, "column": 163, "offset": 24669 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 897, "column": 1, "offset": 24507 }, "end": { "line": 897, "column": 163, "offset": 24669 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}",
                "position": {
                    "start": { "line": 899, "column": 1, "offset": 24671 },
                    "end": { "line": 928, "column": 4, "offset": 25346 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "TWO",
                        "position": {
                            "start": { "line": 930, "column": 6, "offset": 25353 },
                            "end": { "line": 930, "column": 9, "offset": 25356 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 930, "column": 1, "offset": 25348 }, "end": { "line": 930, "column": 9, "offset": 25356 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Just return the later (max sum of a path that ends with ",
                        "position": {
                            "start": { "line": 932, "column": 1, "offset": 25358 },
                            "end": { "line": 932, "column": 57, "offset": 25414 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "root",
                        "position": {
                            "start": { "line": 932, "column": 57, "offset": 25414 },
                            "end": { "line": 932, "column": 63, "offset": 25420 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "). Maintain a global variable to store the disconnected max sum.",
                        "position": {
                            "start": { "line": 932, "column": 63, "offset": 25420 },
                            "end": { "line": 932, "column": 127, "offset": 25484 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 932, "column": 1, "offset": 25358 }, "end": { "line": 932, "column": 127, "offset": 25484 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}",
                "position": {
                    "start": { "line": 934, "column": 1, "offset": 25486 },
                    "end": { "line": 969, "column": 4, "offset": 26283 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 971, "column": 1, "offset": 26285 }, "end": { "line": 971, "column": 4, "offset": 26288 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ",
                        "position": {
                            "start": { "line": 973, "column": 1, "offset": 26290 },
                            "end": { "line": 975, "column": 17, "offset": 26339 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/two-pointers",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/two-pointers",
                                "position": {
                                    "start": { "line": 975, "column": 17, "offset": 26339 },
                                    "end": { "line": 975, "column": 54, "offset": 26376 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 975, "column": 17, "offset": 26339 },
                            "end": { "line": 975, "column": 54, "offset": 26376 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"String\": ",
                        "position": {
                            "start": { "line": 975, "column": 54, "offset": 26376 },
                            "end": { "line": 976, "column": 11, "offset": 26387 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/string",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/string",
                                "position": {
                                    "start": { "line": 976, "column": 11, "offset": 26387 },
                                    "end": { "line": 976, "column": 42, "offset": 26418 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 976, "column": 11, "offset": 26387 },
                            "end": { "line": 976, "column": 42, "offset": 26418 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Palindrome Linked List\": ",
                        "position": {
                            "start": { "line": 976, "column": 42, "offset": 26418 },
                            "end": { "line": 978, "column": 27, "offset": 26464 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/palindrome-linked-list",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/palindrome-linked-list",
                                "position": {
                                    "start": { "line": 978, "column": 27, "offset": 26464 },
                                    "end": { "line": 978, "column": 79, "offset": 26516 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 978, "column": 27, "offset": 26464 },
                            "end": { "line": 978, "column": 79, "offset": 26516 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Valid Palindrome II\": ",
                        "position": {
                            "start": { "line": 978, "column": 79, "offset": 26516 },
                            "end": { "line": 979, "column": 24, "offset": 26540 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/valid-palindrome-ii",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/valid-palindrome-ii",
                                "position": {
                                    "start": { "line": 979, "column": 24, "offset": 26540 },
                                    "end": { "line": 979, "column": 73, "offset": 26589 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 979, "column": 24, "offset": 26540 },
                            "end": { "line": 979, "column": 73, "offset": 26589 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 973, "column": 1, "offset": 26290 },
                    "end": { "line": 979, "column": 73, "offset": 26589 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 981, "column": 1, "offset": 26591 }, "end": { "line": 981, "column": 4, "offset": 26594 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 983, "column": 2, "offset": 26597 },
                                    "end": { "line": 983, "column": 142, "offset": 26737 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 983, "column": 1, "offset": 26596 },
                            "end": { "line": 983, "column": 217, "offset": 26812 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 983, "column": 1, "offset": 26596 }, "end": { "line": 983, "column": 217, "offset": 26812 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 985, "column": 4, "offset": 26817 },
                            "end": { "line": 985, "column": 6, "offset": 26819 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/valid-palindrome/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "125. Valid Palindrome",
                                "position": {
                                    "start": { "line": 985, "column": 7, "offset": 26820 },
                                    "end": { "line": 985, "column": 28, "offset": 26841 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 985, "column": 6, "offset": 26819 },
                            "end": { "line": 985, "column": 90, "offset": 26903 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 985, "column": 1, "offset": 26814 }, "end": { "line": 985, "column": 90, "offset": 26903 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 987, "column": 5, "offset": 26909 },
                            "end": { "line": 987, "column": 13, "offset": 26917 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 987, "column": 1, "offset": 26905 }, "end": { "line": 987, "column": 13, "offset": 26917 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.",
                        "position": {
                            "start": { "line": 989, "column": 1, "offset": 26919 },
                            "end": { "line": 989, "column": 110, "offset": 27028 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 989, "column": 1, "offset": 26919 }, "end": { "line": 989, "column": 110, "offset": 27028 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note:",
                                "position": {
                                    "start": { "line": 991, "column": 3, "offset": 27032 },
                                    "end": { "line": 991, "column": 8, "offset": 27037 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 991, "column": 1, "offset": 27030 },
                            "end": { "line": 991, "column": 10, "offset": 27039 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " For the purpose of this problem, we define empty string as valid palindrome.",
                        "position": {
                            "start": { "line": 991, "column": 10, "offset": 27039 },
                            "end": { "line": 991, "column": 87, "offset": 27116 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 991, "column": 1, "offset": 27030 }, "end": { "line": 991, "column": 87, "offset": 27116 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 993, "column": 3, "offset": 27120 },
                                    "end": { "line": 993, "column": 13, "offset": 27130 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 993, "column": 1, "offset": 27118 },
                            "end": { "line": 993, "column": 15, "offset": 27132 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 993, "column": 1, "offset": 27118 }, "end": { "line": 993, "column": 15, "offset": 27132 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: \"A man, a plan, a canal: Panama\"\nOutput: true",
                "position": {
                    "start": { "line": 995, "column": 1, "offset": 27134 },
                    "end": { "line": 999, "column": 4, "offset": 27195 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 1001, "column": 3, "offset": 27199 },
                                    "end": { "line": 1001, "column": 13, "offset": 27209 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1001, "column": 1, "offset": 27197 },
                            "end": { "line": 1001, "column": 15, "offset": 27211 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1001, "column": 1, "offset": 27197 }, "end": { "line": 1001, "column": 15, "offset": 27211 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: \"race a car\"\nOutput: false",
                "position": {
                    "start": { "line": 1003, "column": 1, "offset": 27213 },
                    "end": { "line": 1007, "column": 4, "offset": 27255 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 1009, "column": 5, "offset": 27261 },
                            "end": { "line": 1009, "column": 14, "offset": 27270 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1009, "column": 1, "offset": 27257 }, "end": { "line": 1009, "column": 14, "offset": 27270 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "ONE",
                        "position": {
                            "start": { "line": 1011, "column": 6, "offset": 27277 },
                            "end": { "line": 1011, "column": 9, "offset": 27280 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1011, "column": 1, "offset": 27272 }, "end": { "line": 1011, "column": 9, "offset": 27280 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};",
                "position": {
                    "start": { "line": 1013, "column": 1, "offset": 27282 },
                    "end": { "line": 1022, "column": 4, "offset": 27497 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "TWO",
                        "position": {
                            "start": { "line": 1024, "column": 6, "offset": 27504 },
                            "end": { "line": 1024, "column": 9, "offset": 27507 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1024, "column": 1, "offset": 27499 }, "end": { "line": 1024, "column": 9, "offset": 27507 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Remove non-alphanumeric characters then compare.",
                        "position": {
                            "start": { "line": 1026, "column": 1, "offset": 27509 },
                            "end": { "line": 1026, "column": 49, "offset": 27557 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1026, "column": 1, "offset": 27509 }, "end": { "line": 1026, "column": 49, "offset": 27557 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};",
                "position": {
                    "start": { "line": 1028, "column": 1, "offset": 27559 },
                    "end": { "line": 1042, "column": 4, "offset": 27884 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 4,
                "children": [
                    {
                        "type": "text",
                        "value": "THREE",
                        "position": {
                            "start": { "line": 1044, "column": 6, "offset": 27891 },
                            "end": { "line": 1044, "column": 11, "offset": 27896 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1044, "column": 1, "offset": 27886 }, "end": { "line": 1044, "column": 11, "offset": 27896 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Compare the char codes.",
                        "position": {
                            "start": { "line": 1046, "column": 1, "offset": 27898 },
                            "end": { "line": 1046, "column": 24, "offset": 27921 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1046, "column": 1, "offset": 27898 }, "end": { "line": 1046, "column": 24, "offset": 27921 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};",
                "position": {
                    "start": { "line": 1048, "column": 1, "offset": 27923 },
                    "end": { "line": 1084, "column": 4, "offset": 28835 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1086, "column": 1, "offset": 28837 }, "end": { "line": 1086, "column": 4, "offset": 28840 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Hard\nRelated Topics:\n\"Array\": ",
                        "position": {
                            "start": { "line": 1088, "column": 1, "offset": 28842 },
                            "end": { "line": 1090, "column": 10, "offset": 28884 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/array",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/array",
                                "position": {
                                    "start": { "line": 1090, "column": 10, "offset": 28884 },
                                    "end": { "line": 1090, "column": 40, "offset": 28914 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1090, "column": 10, "offset": 28884 },
                            "end": { "line": 1090, "column": 40, "offset": 28914 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"String\": ",
                        "position": {
                            "start": { "line": 1090, "column": 40, "offset": 28914 },
                            "end": { "line": 1091, "column": 11, "offset": 28925 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/string",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/string",
                                "position": {
                                    "start": { "line": 1091, "column": 11, "offset": 28925 },
                                    "end": { "line": 1091, "column": 42, "offset": 28956 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1091, "column": 11, "offset": 28925 },
                            "end": { "line": 1091, "column": 42, "offset": 28956 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Backtracking\": ",
                        "position": {
                            "start": { "line": 1091, "column": 42, "offset": 28956 },
                            "end": { "line": 1092, "column": 17, "offset": 28973 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/backtracking",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/backtracking",
                                "position": {
                                    "start": { "line": 1092, "column": 17, "offset": 28973 },
                                    "end": { "line": 1092, "column": 54, "offset": 29010 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1092, "column": 17, "offset": 28973 },
                            "end": { "line": 1092, "column": 54, "offset": 29010 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Breadth-first Search\": ",
                        "position": {
                            "start": { "line": 1092, "column": 54, "offset": 29010 },
                            "end": { "line": 1093, "column": 25, "offset": 29035 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/breadth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/breadth-first-search",
                                "position": {
                                    "start": { "line": 1093, "column": 25, "offset": 29035 },
                                    "end": { "line": 1093, "column": 70, "offset": 29080 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1093, "column": 25, "offset": 29035 },
                            "end": { "line": 1093, "column": 70, "offset": 29080 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Word Ladder\": ",
                        "position": {
                            "start": { "line": 1093, "column": 70, "offset": 29080 },
                            "end": { "line": 1095, "column": 16, "offset": 29115 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/word-ladder",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/word-ladder",
                                "position": {
                                    "start": { "line": 1095, "column": 16, "offset": 29115 },
                                    "end": { "line": 1095, "column": 57, "offset": 29156 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1095, "column": 16, "offset": 29115 },
                            "end": { "line": 1095, "column": 57, "offset": 29156 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1088, "column": 1, "offset": 28842 },
                    "end": { "line": 1095, "column": 57, "offset": 29156 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1097, "column": 1, "offset": 29158 }, "end": { "line": 1097, "column": 4, "offset": 29161 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 1099, "column": 2, "offset": 29164 },
                                    "end": { "line": 1099, "column": 142, "offset": 29304 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1099, "column": 1, "offset": 29163 },
                            "end": { "line": 1099, "column": 213, "offset": 29375 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1099, "column": 1, "offset": 29163 }, "end": { "line": 1099, "column": 213, "offset": 29375 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 1101, "column": 4, "offset": 29380 },
                            "end": { "line": 1101, "column": 6, "offset": 29382 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/word-ladder-ii/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "126. Word Ladder II",
                                "position": {
                                    "start": { "line": 1101, "column": 7, "offset": 29383 },
                                    "end": { "line": 1101, "column": 26, "offset": 29402 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1101, "column": 6, "offset": 29382 },
                            "end": { "line": 1101, "column": 86, "offset": 29462 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1101, "column": 1, "offset": 29377 }, "end": { "line": 1101, "column": 86, "offset": 29462 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 1103, "column": 5, "offset": 29468 },
                            "end": { "line": 1103, "column": 13, "offset": 29476 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1103, "column": 1, "offset": 29464 }, "end": { "line": 1103, "column": 13, "offset": 29476 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given two words (",
                        "position": {
                            "start": { "line": 1105, "column": 1, "offset": 29478 },
                            "end": { "line": 1105, "column": 18, "offset": 29495 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "beginWord",
                                "position": {
                                    "start": { "line": 1105, "column": 19, "offset": 29496 },
                                    "end": { "line": 1105, "column": 28, "offset": 29505 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1105, "column": 18, "offset": 29495 },
                            "end": { "line": 1105, "column": 29, "offset": 29506 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": {
                            "start": { "line": 1105, "column": 29, "offset": 29506 },
                            "end": { "line": 1105, "column": 34, "offset": 29511 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "endWord",
                                "position": {
                                    "start": { "line": 1105, "column": 35, "offset": 29512 },
                                    "end": { "line": 1105, "column": 42, "offset": 29519 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1105, "column": 34, "offset": 29511 },
                            "end": { "line": 1105, "column": 43, "offset": 29520 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "), and a dictionary's word list, find all shortest transformation sequence(s) from ",
                        "position": {
                            "start": { "line": 1105, "column": 43, "offset": 29520 },
                            "end": { "line": 1105, "column": 126, "offset": 29603 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "beginWord",
                                "position": {
                                    "start": { "line": 1105, "column": 127, "offset": 29604 },
                                    "end": { "line": 1105, "column": 136, "offset": 29613 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1105, "column": 126, "offset": 29603 },
                            "end": { "line": 1105, "column": 137, "offset": 29614 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " to ",
                        "position": {
                            "start": { "line": 1105, "column": 137, "offset": 29614 },
                            "end": { "line": 1105, "column": 141, "offset": 29618 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "endWord",
                                "position": {
                                    "start": { "line": 1105, "column": 142, "offset": 29619 },
                                    "end": { "line": 1105, "column": 149, "offset": 29626 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1105, "column": 141, "offset": 29618 },
                            "end": { "line": 1105, "column": 150, "offset": 29627 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ", such that:",
                        "position": {
                            "start": { "line": 1105, "column": 150, "offset": 29627 },
                            "end": { "line": 1105, "column": 162, "offset": 29639 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1105, "column": 1, "offset": 29478 }, "end": { "line": 1105, "column": 162, "offset": 29639 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": true,
                "start": 1,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Only one letter can be changed at a time",
                                        "position": {
                                            "start": { "line": 1107, "column": 5, "offset": 29645 },
                                            "end": { "line": 1107, "column": 45, "offset": 29685 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1107, "column": 5, "offset": 29645 },
                                    "end": { "line": 1107, "column": 45, "offset": 29685 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1107, "column": 1, "offset": 29641 },
                            "end": { "line": 1107, "column": 45, "offset": 29685 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Each transformed word must exist in the word list. Note that ",
                                        "position": {
                                            "start": { "line": 1108, "column": 5, "offset": 29690 },
                                            "end": { "line": 1108, "column": 66, "offset": 29751 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "beginWord",
                                                "position": {
                                                    "start": { "line": 1108, "column": 67, "offset": 29752 },
                                                    "end": { "line": 1108, "column": 76, "offset": 29761 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1108, "column": 66, "offset": 29751 },
                                            "end": { "line": 1108, "column": 77, "offset": 29762 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " is ",
                                        "position": {
                                            "start": { "line": 1108, "column": 77, "offset": 29762 },
                                            "end": { "line": 1108, "column": 81, "offset": 29766 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "not",
                                                "position": {
                                                    "start": { "line": 1108, "column": 82, "offset": 29767 },
                                                    "end": { "line": 1108, "column": 85, "offset": 29770 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1108, "column": 81, "offset": 29766 },
                                            "end": { "line": 1108, "column": 86, "offset": 29771 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " a transformed word.",
                                        "position": {
                                            "start": { "line": 1108, "column": 86, "offset": 29771 },
                                            "end": { "line": 1108, "column": 106, "offset": 29791 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1108, "column": 5, "offset": 29690 },
                                    "end": { "line": 1108, "column": 106, "offset": 29791 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1108, "column": 1, "offset": 29686 },
                            "end": { "line": 1108, "column": 106, "offset": 29791 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1107, "column": 1, "offset": 29641 }, "end": { "line": 1108, "column": 106, "offset": 29791 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note:",
                                "position": {
                                    "start": { "line": 1110, "column": 3, "offset": 29795 },
                                    "end": { "line": 1110, "column": 8, "offset": 29800 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1110, "column": 1, "offset": 29793 },
                            "end": { "line": 1110, "column": 10, "offset": 29802 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1110, "column": 1, "offset": 29793 }, "end": { "line": 1110, "column": 10, "offset": 29802 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Return an empty list if there is no such transformation sequence.",
                                        "position": {
                                            "start": { "line": 1112, "column": 5, "offset": 29808 },
                                            "end": { "line": 1112, "column": 70, "offset": 29873 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1112, "column": 5, "offset": 29808 },
                                    "end": { "line": 1112, "column": 70, "offset": 29873 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1112, "column": 1, "offset": 29804 },
                            "end": { "line": 1112, "column": 70, "offset": 29873 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "All words have the same length.",
                                        "position": {
                                            "start": { "line": 1113, "column": 5, "offset": 29878 },
                                            "end": { "line": 1113, "column": 36, "offset": 29909 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1113, "column": 5, "offset": 29878 },
                                    "end": { "line": 1113, "column": 36, "offset": 29909 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1113, "column": 1, "offset": 29874 },
                            "end": { "line": 1113, "column": 36, "offset": 29909 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "All words contain only lowercase alphabetic characters.",
                                        "position": {
                                            "start": { "line": 1114, "column": 5, "offset": 29914 },
                                            "end": { "line": 1114, "column": 60, "offset": 29969 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1114, "column": 5, "offset": 29914 },
                                    "end": { "line": 1114, "column": 60, "offset": 29969 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1114, "column": 1, "offset": 29910 },
                            "end": { "line": 1114, "column": 60, "offset": 29969 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "You may assume no duplicates in the word list.",
                                        "position": {
                                            "start": { "line": 1115, "column": 5, "offset": 29974 },
                                            "end": { "line": 1115, "column": 51, "offset": 30020 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1115, "column": 5, "offset": 29974 },
                                    "end": { "line": 1115, "column": 51, "offset": 30020 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1115, "column": 1, "offset": 29970 },
                            "end": { "line": 1115, "column": 51, "offset": 30020 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "You may assume ",
                                        "position": {
                                            "start": { "line": 1116, "column": 5, "offset": 30025 },
                                            "end": { "line": 1116, "column": 20, "offset": 30040 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "beginWord",
                                                "position": {
                                                    "start": { "line": 1116, "column": 21, "offset": 30041 },
                                                    "end": { "line": 1116, "column": 30, "offset": 30050 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1116, "column": 20, "offset": 30040 },
                                            "end": { "line": 1116, "column": 31, "offset": 30051 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " and ",
                                        "position": {
                                            "start": { "line": 1116, "column": 31, "offset": 30051 },
                                            "end": { "line": 1116, "column": 36, "offset": 30056 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "endWord",
                                                "position": {
                                                    "start": { "line": 1116, "column": 37, "offset": 30057 },
                                                    "end": { "line": 1116, "column": 44, "offset": 30064 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1116, "column": 36, "offset": 30056 },
                                            "end": { "line": 1116, "column": 45, "offset": 30065 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " are non-empty and are not the same.",
                                        "position": {
                                            "start": { "line": 1116, "column": 45, "offset": 30065 },
                                            "end": { "line": 1116, "column": 81, "offset": 30101 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1116, "column": 5, "offset": 30025 },
                                    "end": { "line": 1116, "column": 81, "offset": 30101 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1116, "column": 1, "offset": 30021 },
                            "end": { "line": 1116, "column": 81, "offset": 30101 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1112, "column": 1, "offset": 29804 },
                    "end": { "line": 1116, "column": 81, "offset": 30101 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 1118, "column": 3, "offset": 30105 },
                                    "end": { "line": 1118, "column": 13, "offset": 30115 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1118, "column": 1, "offset": 30103 },
                            "end": { "line": 1118, "column": 15, "offset": 30117 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1118, "column": 1, "offset": 30103 }, "end": { "line": 1118, "column": 15, "offset": 30117 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]",
                "position": {
                    "start": { "line": 1120, "column": 1, "offset": 30119 },
                    "end": { "line": 1132, "column": 4, "offset": 30301 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 1134, "column": 3, "offset": 30305 },
                                    "end": { "line": 1134, "column": 13, "offset": 30315 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1134, "column": 1, "offset": 30303 },
                            "end": { "line": 1134, "column": 15, "offset": 30317 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1134, "column": 1, "offset": 30303 }, "end": { "line": 1134, "column": 15, "offset": 30317 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.",
                "position": {
                    "start": { "line": 1136, "column": 1, "offset": 30319 },
                    "end": { "line": 1146, "column": 4, "offset": 30513 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 1148, "column": 5, "offset": 30519 },
                            "end": { "line": 1148, "column": 14, "offset": 30528 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1148, "column": 1, "offset": 30515 }, "end": { "line": 1148, "column": 14, "offset": 30528 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "This is just like ",
                        "position": {
                            "start": { "line": 1150, "column": 1, "offset": 30530 },
                            "end": { "line": 1150, "column": 19, "offset": 30548 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "./127.%20Word%20Ladder",
                        "children": [
                            {
                                "type": "text",
                                "value": "127. Word Ladder",
                                "position": {
                                    "start": { "line": 1150, "column": 20, "offset": 30549 },
                                    "end": { "line": 1150, "column": 36, "offset": 30565 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1150, "column": 19, "offset": 30548 },
                            "end": { "line": 1150, "column": 61, "offset": 30590 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1150, "column": 61, "offset": 30590 },
                            "end": { "line": 1150, "column": 62, "offset": 30591 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1150, "column": 1, "offset": 30530 }, "end": { "line": 1150, "column": 62, "offset": 30591 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).",
                        "position": {
                            "start": { "line": 1152, "column": 1, "offset": 30593 },
                            "end": { "line": 1152, "column": 204, "offset": 30796 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1152, "column": 1, "offset": 30593 }, "end": { "line": 1152, "column": 204, "offset": 30796 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.",
                        "position": {
                            "start": { "line": 1154, "column": 1, "offset": 30798 },
                            "end": { "line": 1154, "column": 122, "offset": 30919 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1154, "column": 1, "offset": 30798 }, "end": { "line": 1154, "column": 122, "offset": 30919 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}",
                "position": {
                    "start": { "line": 1156, "column": 1, "offset": 30921 },
                    "end": { "line": 1216, "column": 4, "offset": 32603 },
                    "indent": [
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                    ]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1218, "column": 1, "offset": 32605 }, "end": { "line": 1218, "column": 4, "offset": 32608 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ",
                        "position": {
                            "start": { "line": 1220, "column": 1, "offset": 32610 },
                            "end": { "line": 1222, "column": 25, "offset": 32669 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/breadth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/breadth-first-search",
                                "position": {
                                    "start": { "line": 1222, "column": 25, "offset": 32669 },
                                    "end": { "line": 1222, "column": 70, "offset": 32714 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1222, "column": 25, "offset": 32669 },
                            "end": { "line": 1222, "column": 70, "offset": 32714 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Word Ladder II\": ",
                        "position": {
                            "start": { "line": 1222, "column": 70, "offset": 32714 },
                            "end": { "line": 1224, "column": 19, "offset": 32752 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/word-ladder-ii",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/word-ladder-ii",
                                "position": {
                                    "start": { "line": 1224, "column": 19, "offset": 32752 },
                                    "end": { "line": 1224, "column": 63, "offset": 32796 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1224, "column": 19, "offset": 32752 },
                            "end": { "line": 1224, "column": 63, "offset": 32796 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Minimum Genetic Mutation\": ",
                        "position": {
                            "start": { "line": 1224, "column": 63, "offset": 32796 },
                            "end": { "line": 1225, "column": 29, "offset": 32825 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/minimum-genetic-mutation",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/minimum-genetic-mutation",
                                "position": {
                                    "start": { "line": 1225, "column": 29, "offset": 32825 },
                                    "end": { "line": 1225, "column": 83, "offset": 32879 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1225, "column": 29, "offset": 32825 },
                            "end": { "line": 1225, "column": 83, "offset": 32879 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1220, "column": 1, "offset": 32610 },
                    "end": { "line": 1225, "column": 83, "offset": 32879 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1227, "column": 1, "offset": 32881 }, "end": { "line": 1227, "column": 4, "offset": 32884 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 1229, "column": 2, "offset": 32887 },
                                    "end": { "line": 1229, "column": 142, "offset": 33027 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1229, "column": 1, "offset": 32886 },
                            "end": { "line": 1229, "column": 207, "offset": 33092 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1229, "column": 1, "offset": 32886 }, "end": { "line": 1229, "column": 207, "offset": 33092 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 1231, "column": 4, "offset": 33097 },
                            "end": { "line": 1231, "column": 6, "offset": 33099 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/word-ladder/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "127. Word Ladder",
                                "position": {
                                    "start": { "line": 1231, "column": 7, "offset": 33100 },
                                    "end": { "line": 1231, "column": 23, "offset": 33116 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1231, "column": 6, "offset": 33099 },
                            "end": { "line": 1231, "column": 80, "offset": 33173 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1231, "column": 1, "offset": 33094 }, "end": { "line": 1231, "column": 80, "offset": 33173 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 1233, "column": 5, "offset": 33179 },
                            "end": { "line": 1233, "column": 13, "offset": 33187 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1233, "column": 1, "offset": 33175 }, "end": { "line": 1233, "column": 13, "offset": 33187 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given two words (",
                        "position": {
                            "start": { "line": 1235, "column": 1, "offset": 33189 },
                            "end": { "line": 1235, "column": 18, "offset": 33206 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "beginWord",
                                "position": {
                                    "start": { "line": 1235, "column": 19, "offset": 33207 },
                                    "end": { "line": 1235, "column": 28, "offset": 33216 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1235, "column": 18, "offset": 33206 },
                            "end": { "line": 1235, "column": 29, "offset": 33217 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": {
                            "start": { "line": 1235, "column": 29, "offset": 33217 },
                            "end": { "line": 1235, "column": 34, "offset": 33222 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "endWord",
                                "position": {
                                    "start": { "line": 1235, "column": 35, "offset": 33223 },
                                    "end": { "line": 1235, "column": 42, "offset": 33230 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1235, "column": 34, "offset": 33222 },
                            "end": { "line": 1235, "column": 43, "offset": 33231 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "), and a dictionary's word list, find the length of shortest transformation sequence from ",
                        "position": {
                            "start": { "line": 1235, "column": 43, "offset": 33231 },
                            "end": { "line": 1235, "column": 133, "offset": 33321 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "beginWord",
                                "position": {
                                    "start": { "line": 1235, "column": 134, "offset": 33322 },
                                    "end": { "line": 1235, "column": 143, "offset": 33331 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1235, "column": 133, "offset": 33321 },
                            "end": { "line": 1235, "column": 144, "offset": 33332 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " to ",
                        "position": {
                            "start": { "line": 1235, "column": 144, "offset": 33332 },
                            "end": { "line": 1235, "column": 148, "offset": 33336 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "endWord",
                                "position": {
                                    "start": { "line": 1235, "column": 149, "offset": 33337 },
                                    "end": { "line": 1235, "column": 156, "offset": 33344 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1235, "column": 148, "offset": 33336 },
                            "end": { "line": 1235, "column": 157, "offset": 33345 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ", such that:",
                        "position": {
                            "start": { "line": 1235, "column": 157, "offset": 33345 },
                            "end": { "line": 1235, "column": 169, "offset": 33357 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1235, "column": 1, "offset": 33189 }, "end": { "line": 1235, "column": 169, "offset": 33357 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": true,
                "start": 1,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Only one letter can be changed at a time.",
                                        "position": {
                                            "start": { "line": 1237, "column": 5, "offset": 33363 },
                                            "end": { "line": 1237, "column": 46, "offset": 33404 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1237, "column": 5, "offset": 33363 },
                                    "end": { "line": 1237, "column": 46, "offset": 33404 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1237, "column": 1, "offset": 33359 },
                            "end": { "line": 1237, "column": 46, "offset": 33404 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Each transformed word must exist in the word list. Note that ",
                                        "position": {
                                            "start": { "line": 1238, "column": 5, "offset": 33409 },
                                            "end": { "line": 1238, "column": 66, "offset": 33470 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "beginWord",
                                                "position": {
                                                    "start": { "line": 1238, "column": 67, "offset": 33471 },
                                                    "end": { "line": 1238, "column": 76, "offset": 33480 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1238, "column": 66, "offset": 33470 },
                                            "end": { "line": 1238, "column": 77, "offset": 33481 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " is ",
                                        "position": {
                                            "start": { "line": 1238, "column": 77, "offset": 33481 },
                                            "end": { "line": 1238, "column": 81, "offset": 33485 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "not",
                                                "position": {
                                                    "start": { "line": 1238, "column": 82, "offset": 33486 },
                                                    "end": { "line": 1238, "column": 85, "offset": 33489 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1238, "column": 81, "offset": 33485 },
                                            "end": { "line": 1238, "column": 86, "offset": 33490 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " a transformed word.",
                                        "position": {
                                            "start": { "line": 1238, "column": 86, "offset": 33490 },
                                            "end": { "line": 1238, "column": 106, "offset": 33510 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1238, "column": 5, "offset": 33409 },
                                    "end": { "line": 1238, "column": 106, "offset": 33510 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1238, "column": 1, "offset": 33405 },
                            "end": { "line": 1238, "column": 106, "offset": 33510 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1237, "column": 1, "offset": 33359 }, "end": { "line": 1238, "column": 106, "offset": 33510 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note:",
                                "position": {
                                    "start": { "line": 1240, "column": 3, "offset": 33514 },
                                    "end": { "line": 1240, "column": 8, "offset": 33519 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1240, "column": 1, "offset": 33512 },
                            "end": { "line": 1240, "column": 10, "offset": 33521 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1240, "column": 1, "offset": 33512 }, "end": { "line": 1240, "column": 10, "offset": 33521 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Return 0 if there is no such transformation sequence.",
                                        "position": {
                                            "start": { "line": 1242, "column": 5, "offset": 33527 },
                                            "end": { "line": 1242, "column": 58, "offset": 33580 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1242, "column": 5, "offset": 33527 },
                                    "end": { "line": 1242, "column": 58, "offset": 33580 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1242, "column": 1, "offset": 33523 },
                            "end": { "line": 1242, "column": 58, "offset": 33580 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "All words have the same length.",
                                        "position": {
                                            "start": { "line": 1243, "column": 5, "offset": 33585 },
                                            "end": { "line": 1243, "column": 36, "offset": 33616 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1243, "column": 5, "offset": 33585 },
                                    "end": { "line": 1243, "column": 36, "offset": 33616 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1243, "column": 1, "offset": 33581 },
                            "end": { "line": 1243, "column": 36, "offset": 33616 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "All words contain only lowercase alphabetic characters.",
                                        "position": {
                                            "start": { "line": 1244, "column": 5, "offset": 33621 },
                                            "end": { "line": 1244, "column": 60, "offset": 33676 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1244, "column": 5, "offset": 33621 },
                                    "end": { "line": 1244, "column": 60, "offset": 33676 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1244, "column": 1, "offset": 33617 },
                            "end": { "line": 1244, "column": 60, "offset": 33676 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "You may assume no duplicates in the word list.",
                                        "position": {
                                            "start": { "line": 1245, "column": 5, "offset": 33681 },
                                            "end": { "line": 1245, "column": 51, "offset": 33727 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1245, "column": 5, "offset": 33681 },
                                    "end": { "line": 1245, "column": 51, "offset": 33727 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1245, "column": 1, "offset": 33677 },
                            "end": { "line": 1245, "column": 51, "offset": 33727 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "You may assume ",
                                        "position": {
                                            "start": { "line": 1246, "column": 5, "offset": 33732 },
                                            "end": { "line": 1246, "column": 20, "offset": 33747 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "beginWord",
                                                "position": {
                                                    "start": { "line": 1246, "column": 21, "offset": 33748 },
                                                    "end": { "line": 1246, "column": 30, "offset": 33757 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1246, "column": 20, "offset": 33747 },
                                            "end": { "line": 1246, "column": 31, "offset": 33758 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " and ",
                                        "position": {
                                            "start": { "line": 1246, "column": 31, "offset": 33758 },
                                            "end": { "line": 1246, "column": 36, "offset": 33763 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "emphasis",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "endWord",
                                                "position": {
                                                    "start": { "line": 1246, "column": 37, "offset": 33764 },
                                                    "end": { "line": 1246, "column": 44, "offset": 33771 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1246, "column": 36, "offset": 33763 },
                                            "end": { "line": 1246, "column": 45, "offset": 33772 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " are non-empty and are not the same.",
                                        "position": {
                                            "start": { "line": 1246, "column": 45, "offset": 33772 },
                                            "end": { "line": 1246, "column": 81, "offset": 33808 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1246, "column": 5, "offset": 33732 },
                                    "end": { "line": 1246, "column": 81, "offset": 33808 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1246, "column": 1, "offset": 33728 },
                            "end": { "line": 1246, "column": 81, "offset": 33808 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1242, "column": 1, "offset": 33523 },
                    "end": { "line": 1246, "column": 81, "offset": 33808 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 1248, "column": 3, "offset": 33812 },
                                    "end": { "line": 1248, "column": 13, "offset": 33822 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1248, "column": 1, "offset": 33810 },
                            "end": { "line": 1248, "column": 15, "offset": 33824 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1248, "column": 1, "offset": 33810 }, "end": { "line": 1248, "column": 15, "offset": 33824 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.",
                "position": {
                    "start": { "line": 1250, "column": 1, "offset": 33826 },
                    "end": { "line": 1261, "column": 4, "offset": 34049 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 1263, "column": 3, "offset": 34053 },
                                    "end": { "line": 1263, "column": 13, "offset": 34063 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1263, "column": 1, "offset": 34051 },
                            "end": { "line": 1263, "column": 15, "offset": 34065 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1263, "column": 1, "offset": 34051 }, "end": { "line": 1263, "column": 15, "offset": 34065 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.",
                "position": {
                    "start": { "line": 1265, "column": 1, "offset": 34067 },
                    "end": { "line": 1275, "column": 4, "offset": 34260 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 1277, "column": 5, "offset": 34266 },
                            "end": { "line": 1277, "column": 14, "offset": 34275 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1277, "column": 1, "offset": 34262 }, "end": { "line": 1277, "column": 14, "offset": 34275 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Think of it as building a tree, with ",
                        "position": {
                            "start": { "line": 1279, "column": 1, "offset": 34277 },
                            "end": { "line": 1279, "column": 38, "offset": 34314 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "begineWord",
                        "position": {
                            "start": { "line": 1279, "column": 38, "offset": 34314 },
                            "end": { "line": 1279, "column": 50, "offset": 34326 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " as root and ",
                        "position": {
                            "start": { "line": 1279, "column": 50, "offset": 34326 },
                            "end": { "line": 1279, "column": 63, "offset": 34339 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "endWord",
                        "position": {
                            "start": { "line": 1279, "column": 63, "offset": 34339 },
                            "end": { "line": 1279, "column": 72, "offset": 34348 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " as leaves.",
                        "position": {
                            "start": { "line": 1279, "column": 72, "offset": 34348 },
                            "end": { "line": 1279, "column": 83, "offset": 34359 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1279, "column": 1, "offset": 34277 }, "end": { "line": 1279, "column": 83, "offset": 34359 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).",
                        "position": {
                            "start": { "line": 1281, "column": 1, "offset": 34361 },
                            "end": { "line": 1281, "column": 128, "offset": 34488 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1281, "column": 1, "offset": 34361 }, "end": { "line": 1281, "column": 128, "offset": 34488 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ",
                        "position": {
                            "start": { "line": 1283, "column": 1, "offset": 34490 },
                            "end": { "line": 1283, "column": 205, "offset": 34694 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "i",
                        "position": {
                            "start": { "line": 1283, "column": 205, "offset": 34694 },
                            "end": { "line": 1283, "column": 208, "offset": 34697 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ") we encounter a word that turns out to be in a shortest path, then level ",
                        "position": {
                            "start": { "line": 1283, "column": 208, "offset": 34697 },
                            "end": { "line": 1283, "column": 282, "offset": 34771 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "i",
                        "position": {
                            "start": { "line": 1283, "column": 282, "offset": 34771 },
                            "end": { "line": 1283, "column": 285, "offset": 34774 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " is the lowest level this word could ever get. We can safely remove it from the ",
                        "position": {
                            "start": { "line": 1283, "column": 285, "offset": 34774 },
                            "end": { "line": 1283, "column": 365, "offset": 34854 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "wordList",
                        "position": {
                            "start": { "line": 1283, "column": 365, "offset": 34854 },
                            "end": { "line": 1283, "column": 375, "offset": 34864 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1283, "column": 375, "offset": 34864 },
                            "end": { "line": 1283, "column": 376, "offset": 34865 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1283, "column": 1, "offset": 34490 }, "end": { "line": 1283, "column": 376, "offset": 34865 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "To find all the next words, instead of filtering the ",
                        "position": {
                            "start": { "line": 1285, "column": 1, "offset": 34867 },
                            "end": { "line": 1285, "column": 54, "offset": 34920 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "wordList",
                        "position": {
                            "start": { "line": 1285, "column": 54, "offset": 34920 },
                            "end": { "line": 1285, "column": 64, "offset": 34930 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ", enumerate all 25 possible words and check if in ",
                        "position": {
                            "start": { "line": 1285, "column": 64, "offset": 34930 },
                            "end": { "line": 1285, "column": 114, "offset": 34980 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "wordList",
                        "position": {
                            "start": { "line": 1285, "column": 114, "offset": 34980 },
                            "end": { "line": 1285, "column": 124, "offset": 34990 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1285, "column": 124, "offset": 34990 },
                            "end": { "line": 1285, "column": 125, "offset": 34991 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1285, "column": 1, "offset": 34867 }, "end": { "line": 1285, "column": 125, "offset": 34991 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};",
                "position": {
                    "start": { "line": 1287, "column": 1, "offset": 34993 },
                    "end": { "line": 1333, "column": 4, "offset": 36145 },
                    "indent": [
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                    ]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1335, "column": 1, "offset": 36147 }, "end": { "line": 1335, "column": 4, "offset": 36150 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Hard\nRelated Topics:\n\"Array\": ",
                        "position": {
                            "start": { "line": 1337, "column": 1, "offset": 36152 },
                            "end": { "line": 1339, "column": 10, "offset": 36194 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/array",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/array",
                                "position": {
                                    "start": { "line": 1339, "column": 10, "offset": 36194 },
                                    "end": { "line": 1339, "column": 40, "offset": 36224 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1339, "column": 10, "offset": 36194 },
                            "end": { "line": 1339, "column": 40, "offset": 36224 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Union Find\": ",
                        "position": {
                            "start": { "line": 1339, "column": 40, "offset": 36224 },
                            "end": { "line": 1340, "column": 15, "offset": 36239 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/union-find",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/union-find",
                                "position": {
                                    "start": { "line": 1340, "column": 15, "offset": 36239 },
                                    "end": { "line": 1340, "column": 50, "offset": 36274 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1340, "column": 15, "offset": 36239 },
                            "end": { "line": 1340, "column": 50, "offset": 36274 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ",
                        "position": {
                            "start": { "line": 1340, "column": 50, "offset": 36274 },
                            "end": { "line": 1342, "column": 45, "offset": 36338 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence",
                                "position": {
                                    "start": { "line": 1342, "column": 45, "offset": 36338 },
                                    "end": { "line": 1342, "column": 115, "offset": 36408 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1342, "column": 45, "offset": 36338 },
                            "end": { "line": 1342, "column": 115, "offset": 36408 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1337, "column": 1, "offset": 36152 },
                    "end": { "line": 1342, "column": 115, "offset": 36408 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1344, "column": 1, "offset": 36410 }, "end": { "line": 1344, "column": 4, "offset": 36413 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 1346, "column": 2, "offset": 36416 },
                                    "end": { "line": 1346, "column": 142, "offset": 36556 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1346, "column": 1, "offset": 36415 },
                            "end": { "line": 1346, "column": 241, "offset": 36655 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1346, "column": 1, "offset": 36415 }, "end": { "line": 1346, "column": 241, "offset": 36655 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 1348, "column": 4, "offset": 36660 },
                            "end": { "line": 1348, "column": 6, "offset": 36662 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/longest-consecutive-sequence/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "128. Longest Consecutive Sequence",
                                "position": {
                                    "start": { "line": 1348, "column": 7, "offset": 36663 },
                                    "end": { "line": 1348, "column": 40, "offset": 36696 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1348, "column": 6, "offset": 36662 },
                            "end": { "line": 1348, "column": 114, "offset": 36770 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1348, "column": 1, "offset": 36657 }, "end": { "line": 1348, "column": 114, "offset": 36770 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 1350, "column": 5, "offset": 36776 },
                            "end": { "line": 1350, "column": 13, "offset": 36784 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1350, "column": 1, "offset": 36772 }, "end": { "line": 1350, "column": 13, "offset": 36784 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given an unsorted array of integers, find the length of the longest consecutive elements sequence.",
                        "position": {
                            "start": { "line": 1352, "column": 1, "offset": 36786 },
                            "end": { "line": 1352, "column": 99, "offset": 36884 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1352, "column": 1, "offset": 36786 }, "end": { "line": 1352, "column": 99, "offset": 36884 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Your algorithm should run in O(",
                        "position": {
                            "start": { "line": 1354, "column": 1, "offset": 36886 },
                            "end": { "line": 1354, "column": 32, "offset": 36917 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "n",
                                "position": {
                                    "start": { "line": 1354, "column": 33, "offset": 36918 },
                                    "end": { "line": 1354, "column": 34, "offset": 36919 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1354, "column": 32, "offset": 36917 },
                            "end": { "line": 1354, "column": 35, "offset": 36920 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ") complexity.",
                        "position": {
                            "start": { "line": 1354, "column": 35, "offset": 36920 },
                            "end": { "line": 1354, "column": 48, "offset": 36933 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1354, "column": 1, "offset": 36886 }, "end": { "line": 1354, "column": 48, "offset": 36933 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example:",
                                "position": {
                                    "start": { "line": 1356, "column": 3, "offset": 36937 },
                                    "end": { "line": 1356, "column": 11, "offset": 36945 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1356, "column": 1, "offset": 36935 },
                            "end": { "line": 1356, "column": 13, "offset": 36947 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1356, "column": 1, "offset": 36935 }, "end": { "line": 1356, "column": 13, "offset": 36947 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.",
                "position": {
                    "start": { "line": 1358, "column": 1, "offset": 36949 },
                    "end": { "line": 1363, "column": 4, "offset": 37096 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 1365, "column": 5, "offset": 37102 },
                            "end": { "line": 1365, "column": 14, "offset": 37111 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1365, "column": 1, "offset": 37098 }, "end": { "line": 1365, "column": 14, "offset": 37111 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).",
                        "position": {
                            "start": { "line": 1367, "column": 1, "offset": 37113 },
                            "end": { "line": 1367, "column": 208, "offset": 37320 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1367, "column": 1, "offset": 37113 }, "end": { "line": 1367, "column": 208, "offset": 37320 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};",
                "position": {
                    "start": { "line": 1369, "column": 1, "offset": 37322 },
                    "end": { "line": 1393, "column": 4, "offset": 37897 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1395, "column": 1, "offset": 37899 }, "end": { "line": 1395, "column": 4, "offset": 37902 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Medium\nRelated Topics:\n\"Tree\": ",
                        "position": {
                            "start": { "line": 1397, "column": 1, "offset": 37904 },
                            "end": { "line": 1399, "column": 9, "offset": 37947 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/tree",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/tree",
                                "position": {
                                    "start": { "line": 1399, "column": 9, "offset": 37947 },
                                    "end": { "line": 1399, "column": 38, "offset": 37976 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1399, "column": 9, "offset": 37947 },
                            "end": { "line": 1399, "column": 38, "offset": 37976 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Depth-first Search\": ",
                        "position": {
                            "start": { "line": 1399, "column": 38, "offset": 37976 },
                            "end": { "line": 1400, "column": 23, "offset": 37999 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/depth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/depth-first-search",
                                "position": {
                                    "start": { "line": 1400, "column": 23, "offset": 37999 },
                                    "end": { "line": 1400, "column": 66, "offset": 38042 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1400, "column": 23, "offset": 37999 },
                            "end": { "line": 1400, "column": 66, "offset": 38042 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Path Sum\": ",
                        "position": {
                            "start": { "line": 1400, "column": 66, "offset": 38042 },
                            "end": { "line": 1402, "column": 13, "offset": 38074 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/path-sum",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/path-sum",
                                "position": {
                                    "start": { "line": 1402, "column": 13, "offset": 38074 },
                                    "end": { "line": 1402, "column": 51, "offset": 38112 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1402, "column": 13, "offset": 38074 },
                            "end": { "line": 1402, "column": 51, "offset": 38112 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Binary Tree Maximum Path Sum\": ",
                        "position": {
                            "start": { "line": 1402, "column": 51, "offset": 38112 },
                            "end": { "line": 1403, "column": 33, "offset": 38145 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
                                "position": {
                                    "start": { "line": 1403, "column": 33, "offset": 38145 },
                                    "end": { "line": 1403, "column": 91, "offset": 38203 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1403, "column": 33, "offset": 38145 },
                            "end": { "line": 1403, "column": 91, "offset": 38203 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1397, "column": 1, "offset": 37904 },
                    "end": { "line": 1403, "column": 91, "offset": 38203 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1405, "column": 1, "offset": 38205 }, "end": { "line": 1405, "column": 4, "offset": 38208 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 1407, "column": 2, "offset": 38211 },
                                    "end": { "line": 1407, "column": 142, "offset": 38351 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1407, "column": 1, "offset": 38210 },
                            "end": { "line": 1407, "column": 233, "offset": 38442 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1407, "column": 1, "offset": 38210 }, "end": { "line": 1407, "column": 233, "offset": 38442 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 1409, "column": 4, "offset": 38447 },
                            "end": { "line": 1409, "column": 6, "offset": 38449 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/sum-root-to-leaf-numbers/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "129. Sum Root to Leaf Numbers",
                                "position": {
                                    "start": { "line": 1409, "column": 7, "offset": 38450 },
                                    "end": { "line": 1409, "column": 36, "offset": 38479 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1409, "column": 6, "offset": 38449 },
                            "end": { "line": 1409, "column": 106, "offset": 38549 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1409, "column": 1, "offset": 38444 }, "end": { "line": 1409, "column": 106, "offset": 38549 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 1411, "column": 5, "offset": 38555 },
                            "end": { "line": 1411, "column": 13, "offset": 38563 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1411, "column": 1, "offset": 38551 }, "end": { "line": 1411, "column": 13, "offset": 38563 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a binary tree containing digits from ",
                        "position": {
                            "start": { "line": 1413, "column": 1, "offset": 38565 },
                            "end": { "line": 1413, "column": 44, "offset": 38608 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "0-9",
                        "position": {
                            "start": { "line": 1413, "column": 44, "offset": 38608 },
                            "end": { "line": 1413, "column": 49, "offset": 38613 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " only, each root-to-leaf path could represent a number.",
                        "position": {
                            "start": { "line": 1413, "column": 49, "offset": 38613 },
                            "end": { "line": 1413, "column": 104, "offset": 38668 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1413, "column": 1, "offset": 38565 }, "end": { "line": 1413, "column": 104, "offset": 38668 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "An example is the root-to-leaf path ",
                        "position": {
                            "start": { "line": 1415, "column": 1, "offset": 38670 },
                            "end": { "line": 1415, "column": 37, "offset": 38706 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "1->2->3",
                        "position": {
                            "start": { "line": 1415, "column": 37, "offset": 38706 },
                            "end": { "line": 1415, "column": 46, "offset": 38715 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " which represents the number ",
                        "position": {
                            "start": { "line": 1415, "column": 46, "offset": 38715 },
                            "end": { "line": 1415, "column": 75, "offset": 38744 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "123",
                        "position": {
                            "start": { "line": 1415, "column": 75, "offset": 38744 },
                            "end": { "line": 1415, "column": 80, "offset": 38749 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1415, "column": 80, "offset": 38749 },
                            "end": { "line": 1415, "column": 81, "offset": 38750 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1415, "column": 1, "offset": 38670 }, "end": { "line": 1415, "column": 81, "offset": 38750 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Find the total sum of all root-to-leaf numbers.",
                        "position": {
                            "start": { "line": 1417, "column": 1, "offset": 38752 },
                            "end": { "line": 1417, "column": 48, "offset": 38799 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1417, "column": 1, "offset": 38752 }, "end": { "line": 1417, "column": 48, "offset": 38799 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note:",
                                "position": {
                                    "start": { "line": 1419, "column": 3, "offset": 38803 },
                                    "end": { "line": 1419, "column": 8, "offset": 38808 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1419, "column": 1, "offset": 38801 },
                            "end": { "line": 1419, "column": 10, "offset": 38810 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " A leaf is a node with no children.",
                        "position": {
                            "start": { "line": 1419, "column": 10, "offset": 38810 },
                            "end": { "line": 1419, "column": 45, "offset": 38845 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1419, "column": 1, "offset": 38801 }, "end": { "line": 1419, "column": 45, "offset": 38845 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example:",
                                "position": {
                                    "start": { "line": 1421, "column": 3, "offset": 38849 },
                                    "end": { "line": 1421, "column": 11, "offset": 38857 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1421, "column": 1, "offset": 38847 },
                            "end": { "line": 1421, "column": 13, "offset": 38859 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1421, "column": 1, "offset": 38847 }, "end": { "line": 1421, "column": 13, "offset": 38859 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.",
                "position": {
                    "start": { "line": 1423, "column": 1, "offset": 38861 },
                    "end": { "line": 1431, "column": 35, "offset": 39093 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 1433, "column": 3, "offset": 39097 },
                                    "end": { "line": 1433, "column": 13, "offset": 39107 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1433, "column": 1, "offset": 39095 },
                            "end": { "line": 1433, "column": 15, "offset": 39109 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1433, "column": 1, "offset": 39095 }, "end": { "line": 1433, "column": 15, "offset": 39109 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.",
                "position": {
                    "start": { "line": 1435, "column": 1, "offset": 39111 },
                    "end": { "line": 1446, "column": 44, "offset": 39442 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 1448, "column": 5, "offset": 39448 },
                            "end": { "line": 1448, "column": 14, "offset": 39457 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1448, "column": 1, "offset": 39444 }, "end": { "line": 1448, "column": 14, "offset": 39457 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "To write a clean solution for this promblem, use ",
                        "position": {
                            "start": { "line": 1450, "column": 1, "offset": 39459 },
                            "end": { "line": 1450, "column": 50, "offset": 39508 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "0",
                        "position": {
                            "start": { "line": 1450, "column": 50, "offset": 39508 },
                            "end": { "line": 1450, "column": 53, "offset": 39511 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " as indicator of leaf node. If all the children get ",
                        "position": {
                            "start": { "line": 1450, "column": 53, "offset": 39511 },
                            "end": { "line": 1450, "column": 105, "offset": 39563 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "0",
                        "position": {
                            "start": { "line": 1450, "column": 105, "offset": 39563 },
                            "end": { "line": 1450, "column": 108, "offset": 39566 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ", it is a leaf node, return the sum of current level.",
                        "position": {
                            "start": { "line": 1450, "column": 108, "offset": 39566 },
                            "end": { "line": 1450, "column": 161, "offset": 39619 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1450, "column": 1, "offset": 39459 }, "end": { "line": 1450, "column": 161, "offset": 39619 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};",
                "position": {
                    "start": { "line": 1452, "column": 1, "offset": 39621 },
                    "end": { "line": 1471, "column": 4, "offset": 40027 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1473, "column": 1, "offset": 40029 }, "end": { "line": 1473, "column": 4, "offset": 40032 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ",
                        "position": {
                            "start": { "line": 1475, "column": 1, "offset": 40034 },
                            "end": { "line": 1477, "column": 23, "offset": 40091 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/depth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/depth-first-search",
                                "position": {
                                    "start": { "line": 1477, "column": 23, "offset": 40091 },
                                    "end": { "line": 1477, "column": 66, "offset": 40134 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1477, "column": 23, "offset": 40091 },
                            "end": { "line": 1477, "column": 66, "offset": 40134 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Breadth-first Search\": ",
                        "position": {
                            "start": { "line": 1477, "column": 66, "offset": 40134 },
                            "end": { "line": 1478, "column": 25, "offset": 40159 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/breadth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/breadth-first-search",
                                "position": {
                                    "start": { "line": 1478, "column": 25, "offset": 40159 },
                                    "end": { "line": 1478, "column": 70, "offset": 40204 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1478, "column": 25, "offset": 40159 },
                            "end": { "line": 1478, "column": 70, "offset": 40204 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Union Find\": ",
                        "position": {
                            "start": { "line": 1478, "column": 70, "offset": 40204 },
                            "end": { "line": 1479, "column": 15, "offset": 40219 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/union-find",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/union-find",
                                "position": {
                                    "start": { "line": 1479, "column": 15, "offset": 40219 },
                                    "end": { "line": 1479, "column": 50, "offset": 40254 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1479, "column": 15, "offset": 40219 },
                            "end": { "line": 1479, "column": 50, "offset": 40254 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Number of Islands\": ",
                        "position": {
                            "start": { "line": 1479, "column": 50, "offset": 40254 },
                            "end": { "line": 1481, "column": 22, "offset": 40295 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/number-of-islands",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/number-of-islands",
                                "position": {
                                    "start": { "line": 1481, "column": 22, "offset": 40295 },
                                    "end": { "line": 1481, "column": 69, "offset": 40342 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1481, "column": 22, "offset": 40295 },
                            "end": { "line": 1481, "column": 69, "offset": 40342 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Walls and Gates\": ",
                        "position": {
                            "start": { "line": 1481, "column": 69, "offset": 40342 },
                            "end": { "line": 1482, "column": 20, "offset": 40362 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/walls-and-gates",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/walls-and-gates",
                                "position": {
                                    "start": { "line": 1482, "column": 20, "offset": 40362 },
                                    "end": { "line": 1482, "column": 65, "offset": 40407 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1482, "column": 20, "offset": 40362 },
                            "end": { "line": 1482, "column": 65, "offset": 40407 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1475, "column": 1, "offset": 40034 },
                    "end": { "line": 1482, "column": 65, "offset": 40407 },
                    "indent": [1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1484, "column": 1, "offset": 40409 }, "end": { "line": 1484, "column": 4, "offset": 40412 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 1486, "column": 2, "offset": 40415 },
                                    "end": { "line": 1486, "column": 142, "offset": 40555 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1486, "column": 1, "offset": 40414 },
                            "end": { "line": 1486, "column": 221, "offset": 40634 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1486, "column": 1, "offset": 40414 }, "end": { "line": 1486, "column": 221, "offset": 40634 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 1488, "column": 4, "offset": 40639 },
                            "end": { "line": 1488, "column": 6, "offset": 40641 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/surrounded-regions/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "130. Surrounded Regions",
                                "position": {
                                    "start": { "line": 1488, "column": 7, "offset": 40642 },
                                    "end": { "line": 1488, "column": 30, "offset": 40665 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1488, "column": 6, "offset": 40641 },
                            "end": { "line": 1488, "column": 94, "offset": 40729 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1488, "column": 1, "offset": 40636 }, "end": { "line": 1488, "column": 94, "offset": 40729 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 1490, "column": 5, "offset": 40735 },
                            "end": { "line": 1490, "column": 13, "offset": 40743 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1490, "column": 1, "offset": 40731 }, "end": { "line": 1490, "column": 13, "offset": 40743 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a 2D board containing ",
                        "position": {
                            "start": { "line": 1492, "column": 1, "offset": 40745 },
                            "end": { "line": 1492, "column": 29, "offset": 40773 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'X'",
                        "position": {
                            "start": { "line": 1492, "column": 29, "offset": 40773 },
                            "end": { "line": 1492, "column": 34, "offset": 40778 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": {
                            "start": { "line": 1492, "column": 34, "offset": 40778 },
                            "end": { "line": 1492, "column": 39, "offset": 40783 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'O'",
                        "position": {
                            "start": { "line": 1492, "column": 39, "offset": 40783 },
                            "end": { "line": 1492, "column": 44, "offset": 40788 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " (",
                        "position": {
                            "start": { "line": 1492, "column": 44, "offset": 40788 },
                            "end": { "line": 1492, "column": 46, "offset": 40790 },
                            "indent": []
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "the letter O",
                                "position": {
                                    "start": { "line": 1492, "column": 48, "offset": 40792 },
                                    "end": { "line": 1492, "column": 60, "offset": 40804 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1492, "column": 46, "offset": 40790 },
                            "end": { "line": 1492, "column": 62, "offset": 40806 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "), capture all regions surrounded by ",
                        "position": {
                            "start": { "line": 1492, "column": 62, "offset": 40806 },
                            "end": { "line": 1492, "column": 99, "offset": 40843 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'X'",
                        "position": {
                            "start": { "line": 1492, "column": 99, "offset": 40843 },
                            "end": { "line": 1492, "column": 104, "offset": 40848 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1492, "column": 104, "offset": 40848 },
                            "end": { "line": 1492, "column": 105, "offset": 40849 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1492, "column": 1, "offset": 40745 }, "end": { "line": 1492, "column": 105, "offset": 40849 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "A region is captured by flipping all ",
                        "position": {
                            "start": { "line": 1494, "column": 1, "offset": 40851 },
                            "end": { "line": 1494, "column": 38, "offset": 40888 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'O'",
                        "position": {
                            "start": { "line": 1494, "column": 38, "offset": 40888 },
                            "end": { "line": 1494, "column": 43, "offset": 40893 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "s into ",
                        "position": {
                            "start": { "line": 1494, "column": 43, "offset": 40893 },
                            "end": { "line": 1494, "column": 50, "offset": 40900 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'X'",
                        "position": {
                            "start": { "line": 1494, "column": 50, "offset": 40900 },
                            "end": { "line": 1494, "column": 55, "offset": 40905 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "s in that surrounded region.",
                        "position": {
                            "start": { "line": 1494, "column": 55, "offset": 40905 },
                            "end": { "line": 1494, "column": 83, "offset": 40933 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1494, "column": 1, "offset": 40851 }, "end": { "line": 1494, "column": 83, "offset": 40933 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example:",
                                "position": {
                                    "start": { "line": 1496, "column": 3, "offset": 40937 },
                                    "end": { "line": 1496, "column": 11, "offset": 40945 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1496, "column": 1, "offset": 40935 },
                            "end": { "line": 1496, "column": 13, "offset": 40947 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1496, "column": 1, "offset": 40935 }, "end": { "line": 1496, "column": 13, "offset": 40947 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "X X X X\nX O O X\nX X O X\nX O X X",
                "position": {
                    "start": { "line": 1498, "column": 1, "offset": 40949 },
                    "end": { "line": 1504, "column": 4, "offset": 40989 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "After running your function, the board should be:",
                        "position": {
                            "start": { "line": 1506, "column": 1, "offset": 40991 },
                            "end": { "line": 1506, "column": 50, "offset": 41040 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1506, "column": 1, "offset": 40991 }, "end": { "line": 1506, "column": 50, "offset": 41040 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "X X X X\nX X X X\nX X X X\nX O X X",
                "position": {
                    "start": { "line": 1508, "column": 1, "offset": 41042 },
                    "end": { "line": 1514, "column": 4, "offset": 41082 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Explanation:",
                                "position": {
                                    "start": { "line": 1516, "column": 3, "offset": 41086 },
                                    "end": { "line": 1516, "column": 15, "offset": 41098 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1516, "column": 1, "offset": 41084 },
                            "end": { "line": 1516, "column": 17, "offset": 41100 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1516, "column": 1, "offset": 41084 }, "end": { "line": 1516, "column": 17, "offset": 41100 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Surrounded regions shouldn't be on the border, which means that any ",
                        "position": {
                            "start": { "line": 1518, "column": 1, "offset": 41102 },
                            "end": { "line": 1518, "column": 69, "offset": 41170 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'O'",
                        "position": {
                            "start": { "line": 1518, "column": 69, "offset": 41170 },
                            "end": { "line": 1518, "column": 74, "offset": 41175 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " on the border of the board are not flipped to ",
                        "position": {
                            "start": { "line": 1518, "column": 74, "offset": 41175 },
                            "end": { "line": 1518, "column": 121, "offset": 41222 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'X'",
                        "position": {
                            "start": { "line": 1518, "column": 121, "offset": 41222 },
                            "end": { "line": 1518, "column": 126, "offset": 41227 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". Any ",
                        "position": {
                            "start": { "line": 1518, "column": 126, "offset": 41227 },
                            "end": { "line": 1518, "column": 132, "offset": 41233 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'O'",
                        "position": {
                            "start": { "line": 1518, "column": 132, "offset": 41233 },
                            "end": { "line": 1518, "column": 137, "offset": 41238 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " that is not on the border and it is not connected to an ",
                        "position": {
                            "start": { "line": 1518, "column": 137, "offset": 41238 },
                            "end": { "line": 1518, "column": 194, "offset": 41295 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'O'",
                        "position": {
                            "start": { "line": 1518, "column": 194, "offset": 41295 },
                            "end": { "line": 1518, "column": 199, "offset": 41300 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " on the border will be flipped to ",
                        "position": {
                            "start": { "line": 1518, "column": 199, "offset": 41300 },
                            "end": { "line": 1518, "column": 233, "offset": 41334 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "'X'",
                        "position": {
                            "start": { "line": 1518, "column": 233, "offset": 41334 },
                            "end": { "line": 1518, "column": 238, "offset": 41339 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". Two cells are connected if they are adjacent cells connected horizontally or vertically.",
                        "position": {
                            "start": { "line": 1518, "column": 238, "offset": 41339 },
                            "end": { "line": 1518, "column": 328, "offset": 41429 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1518, "column": 1, "offset": 41102 }, "end": { "line": 1518, "column": 328, "offset": 41429 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 1520, "column": 5, "offset": 41435 },
                            "end": { "line": 1520, "column": 14, "offset": 41444 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1520, "column": 1, "offset": 41431 }, "end": { "line": 1520, "column": 14, "offset": 41444 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Find all the ",
                        "position": {
                            "start": { "line": 1522, "column": 1, "offset": 41446 },
                            "end": { "line": 1522, "column": 14, "offset": 41459 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "O",
                        "position": {
                            "start": { "line": 1522, "column": 14, "offset": 41459 },
                            "end": { "line": 1522, "column": 17, "offset": 41462 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "s that are connected to the ",
                        "position": {
                            "start": { "line": 1522, "column": 17, "offset": 41462 },
                            "end": { "line": 1522, "column": 45, "offset": 41490 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "O",
                        "position": {
                            "start": { "line": 1522, "column": 45, "offset": 41490 },
                            "end": { "line": 1522, "column": 48, "offset": 41493 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "s on the border, change them to ",
                        "position": {
                            "start": { "line": 1522, "column": 48, "offset": 41493 },
                            "end": { "line": 1522, "column": 80, "offset": 41525 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "#",
                        "position": {
                            "start": { "line": 1522, "column": 80, "offset": 41525 },
                            "end": { "line": 1522, "column": 83, "offset": 41528 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". Then scan the board, change ",
                        "position": {
                            "start": { "line": 1522, "column": 83, "offset": 41528 },
                            "end": { "line": 1522, "column": 113, "offset": 41558 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "O",
                        "position": {
                            "start": { "line": 1522, "column": 113, "offset": 41558 },
                            "end": { "line": 1522, "column": 116, "offset": 41561 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " to ",
                        "position": {
                            "start": { "line": 1522, "column": 116, "offset": 41561 },
                            "end": { "line": 1522, "column": 120, "offset": 41565 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "X",
                        "position": {
                            "start": { "line": 1522, "column": 120, "offset": 41565 },
                            "end": { "line": 1522, "column": 123, "offset": 41568 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " and ",
                        "position": {
                            "start": { "line": 1522, "column": 123, "offset": 41568 },
                            "end": { "line": 1522, "column": 128, "offset": 41573 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "#",
                        "position": {
                            "start": { "line": 1522, "column": 128, "offset": 41573 },
                            "end": { "line": 1522, "column": 131, "offset": 41576 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " back to ",
                        "position": {
                            "start": { "line": 1522, "column": 131, "offset": 41576 },
                            "end": { "line": 1522, "column": 140, "offset": 41585 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "O",
                        "position": {
                            "start": { "line": 1522, "column": 140, "offset": 41585 },
                            "end": { "line": 1522, "column": 143, "offset": 41588 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1522, "column": 143, "offset": 41588 },
                            "end": { "line": 1522, "column": 144, "offset": 41589 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1522, "column": 1, "offset": 41446 }, "end": { "line": 1522, "column": 144, "offset": 41589 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The process of finding the connected ",
                        "position": {
                            "start": { "line": 1524, "column": 1, "offset": 41591 },
                            "end": { "line": 1524, "column": 38, "offset": 41628 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "O",
                        "position": {
                            "start": { "line": 1524, "column": 38, "offset": 41628 },
                            "end": { "line": 1524, "column": 41, "offset": 41631 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "s is just like tree traversal. ",
                        "position": {
                            "start": { "line": 1524, "column": 41, "offset": 41631 },
                            "end": { "line": 1524, "column": 72, "offset": 41662 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "O",
                        "position": {
                            "start": { "line": 1524, "column": 72, "offset": 41662 },
                            "end": { "line": 1524, "column": 75, "offset": 41665 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "s on the border are the same level. Their children are the second level. And so on.",
                        "position": {
                            "start": { "line": 1524, "column": 75, "offset": 41665 },
                            "end": { "line": 1524, "column": 158, "offset": 41748 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1524, "column": 1, "offset": 41591 }, "end": { "line": 1524, "column": 158, "offset": 41748 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.",
                        "position": {
                            "start": { "line": 1526, "column": 1, "offset": 41750 },
                            "end": { "line": 1526, "column": 99, "offset": 41848 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1526, "column": 1, "offset": 41750 }, "end": { "line": 1526, "column": 99, "offset": 41848 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};",
                "position": {
                    "start": { "line": 1528, "column": 1, "offset": 41850 },
                    "end": { "line": 1601, "column": 4, "offset": 43787 },
                    "indent": [
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
                    ]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1603, "column": 1, "offset": 43789 }, "end": { "line": 1603, "column": 4, "offset": 43792 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ",
                        "position": {
                            "start": { "line": 1605, "column": 1, "offset": 43794 },
                            "end": { "line": 1607, "column": 23, "offset": 43851 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/depth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/depth-first-search",
                                "position": {
                                    "start": { "line": 1607, "column": 23, "offset": 43851 },
                                    "end": { "line": 1607, "column": 66, "offset": 43894 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1607, "column": 23, "offset": 43851 },
                            "end": { "line": 1607, "column": 66, "offset": 43894 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Breadth-first Search\": ",
                        "position": {
                            "start": { "line": 1607, "column": 66, "offset": 43894 },
                            "end": { "line": 1608, "column": 25, "offset": 43919 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/breadth-first-search",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/breadth-first-search",
                                "position": {
                                    "start": { "line": 1608, "column": 25, "offset": 43919 },
                                    "end": { "line": 1608, "column": 70, "offset": 43964 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1608, "column": 25, "offset": 43919 },
                            "end": { "line": 1608, "column": 70, "offset": 43964 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n\"Graph\": ",
                        "position": {
                            "start": { "line": 1608, "column": 70, "offset": 43964 },
                            "end": { "line": 1609, "column": 10, "offset": 43974 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/tag/graph",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/tag/graph",
                                "position": {
                                    "start": { "line": 1609, "column": 10, "offset": 43974 },
                                    "end": { "line": 1609, "column": 40, "offset": 44004 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1609, "column": 10, "offset": 43974 },
                            "end": { "line": 1609, "column": 40, "offset": 44004 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\nSimilar Questions:\n\"Copy List with Random Pointer\": ",
                        "position": {
                            "start": { "line": 1609, "column": 40, "offset": 44004 },
                            "end": { "line": 1611, "column": 34, "offset": 44057 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/copy-list-with-random-pointer",
                        "children": [
                            {
                                "type": "text",
                                "value": "https://leetcode.com/problems/copy-list-with-random-pointer",
                                "position": {
                                    "start": { "line": 1611, "column": 34, "offset": 44057 },
                                    "end": { "line": 1611, "column": 93, "offset": 44116 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1611, "column": 34, "offset": 44057 },
                            "end": { "line": 1611, "column": 93, "offset": 44116 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1605, "column": 1, "offset": 43794 },
                    "end": { "line": 1611, "column": 93, "offset": 44116 },
                    "indent": [1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "thematicBreak",
                "position": { "start": { "line": 1613, "column": 1, "offset": 44118 }, "end": { "line": 1613, "column": 4, "offset": 44121 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 1615, "column": 2, "offset": 44124 },
                                    "end": { "line": 1615, "column": 142, "offset": 44264 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1615, "column": 1, "offset": 44123 },
                            "end": { "line": 1615, "column": 207, "offset": 44329 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1615, "column": 1, "offset": 44123 }, "end": { "line": 1615, "column": 207, "offset": 44329 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 2,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ ",
                        "position": {
                            "start": { "line": 1617, "column": 4, "offset": 44334 },
                            "end": { "line": 1617, "column": 6, "offset": 44336 },
                            "indent": []
                        }
                    },
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/clone-graph/description/",
                        "children": [
                            {
                                "type": "text",
                                "value": "133. Clone Graph",
                                "position": {
                                    "start": { "line": 1617, "column": 7, "offset": 44337 },
                                    "end": { "line": 1617, "column": 23, "offset": 44353 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1617, "column": 6, "offset": 44336 },
                            "end": { "line": 1617, "column": 80, "offset": 44410 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1617, "column": 1, "offset": 44331 }, "end": { "line": 1617, "column": 80, "offset": 44410 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Problem:",
                        "position": {
                            "start": { "line": 1619, "column": 5, "offset": 44416 },
                            "end": { "line": 1619, "column": 13, "offset": 44424 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1619, "column": 1, "offset": 44412 }, "end": { "line": 1619, "column": 13, "offset": 44424 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ",
                        "position": {
                            "start": { "line": 1621, "column": 1, "offset": 44426 },
                            "end": { "line": 1621, "column": 103, "offset": 44528 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "label",
                        "position": {
                            "start": { "line": 1621, "column": 103, "offset": 44528 },
                            "end": { "line": 1621, "column": 110, "offset": 44535 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " (",
                        "position": {
                            "start": { "line": 1621, "column": 110, "offset": 44535 },
                            "end": { "line": 1621, "column": 112, "offset": 44537 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "int",
                        "position": {
                            "start": { "line": 1621, "column": 112, "offset": 44537 },
                            "end": { "line": 1621, "column": 117, "offset": 44542 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ") and a list (",
                        "position": {
                            "start": { "line": 1621, "column": 117, "offset": 44542 },
                            "end": { "line": 1621, "column": 131, "offset": 44556 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "List[UndirectedGraphNode]",
                        "position": {
                            "start": { "line": 1621, "column": 131, "offset": 44556 },
                            "end": { "line": 1621, "column": 158, "offset": 44583 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ") of its ",
                        "position": {
                            "start": { "line": 1621, "column": 158, "offset": 44583 },
                            "end": { "line": 1621, "column": 167, "offset": 44592 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "neighbors",
                        "position": {
                            "start": { "line": 1621, "column": 167, "offset": 44592 },
                            "end": { "line": 1621, "column": 178, "offset": 44603 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ". There is an edge between the given node and each of the nodes in its neighbors.",
                        "position": {
                            "start": { "line": 1621, "column": 178, "offset": 44603 },
                            "end": { "line": 1621, "column": 259, "offset": 44684 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1621, "column": 1, "offset": 44426 }, "end": { "line": 1621, "column": 259, "offset": 44684 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "OJ's undirected graph serialization (so you can understand error output):",
                        "position": {
                            "start": { "line": 1623, "column": 1, "offset": 44686 },
                            "end": { "line": 1623, "column": 74, "offset": 44759 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1623, "column": 1, "offset": 44686 }, "end": { "line": 1623, "column": 74, "offset": 44759 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Nodes are labeled uniquely.",
                        "position": {
                            "start": { "line": 1625, "column": 1, "offset": 44761 },
                            "end": { "line": 1625, "column": 28, "offset": 44788 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1625, "column": 1, "offset": 44761 }, "end": { "line": 1625, "column": 28, "offset": 44788 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "We use ",
                        "position": {
                            "start": { "line": 1627, "column": 1, "offset": 44790 },
                            "end": { "line": 1627, "column": 8, "offset": 44797 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "#",
                        "position": {
                            "start": { "line": 1627, "column": 8, "offset": 44797 },
                            "end": { "line": 1627, "column": 11, "offset": 44800 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " as a separator for each node, and ",
                        "position": {
                            "start": { "line": 1627, "column": 11, "offset": 44800 },
                            "end": { "line": 1627, "column": 46, "offset": 44835 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": ",",
                        "position": {
                            "start": { "line": 1627, "column": 46, "offset": 44835 },
                            "end": { "line": 1627, "column": 49, "offset": 44838 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " as a separator for node label and each neighbor of the node.",
                        "position": {
                            "start": { "line": 1627, "column": 49, "offset": 44838 },
                            "end": { "line": 1627, "column": 110, "offset": 44899 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1627, "column": 1, "offset": 44790 }, "end": { "line": 1627, "column": 110, "offset": 44899 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "As an example, consider the serialized graph ",
                        "position": {
                            "start": { "line": 1629, "column": 1, "offset": 44901 },
                            "end": { "line": 1629, "column": 46, "offset": 44946 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "{0,1,2#1,2#2,2}",
                        "position": {
                            "start": { "line": 1629, "column": 46, "offset": 44946 },
                            "end": { "line": 1629, "column": 63, "offset": 44963 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1629, "column": 63, "offset": 44963 },
                            "end": { "line": 1629, "column": 64, "offset": 44964 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1629, "column": 1, "offset": 44901 }, "end": { "line": 1629, "column": 64, "offset": 44964 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "The graph has a total of three nodes, and therefore contains three parts as separated by ",
                        "position": {
                            "start": { "line": 1631, "column": 1, "offset": 44966 },
                            "end": { "line": 1631, "column": 90, "offset": 45055 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "#",
                        "position": {
                            "start": { "line": 1631, "column": 90, "offset": 45055 },
                            "end": { "line": 1631, "column": 93, "offset": 45058 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ".",
                        "position": {
                            "start": { "line": 1631, "column": 93, "offset": 45058 },
                            "end": { "line": 1631, "column": 94, "offset": 45059 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1631, "column": 1, "offset": 44966 }, "end": { "line": 1631, "column": 94, "offset": 45059 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": true,
                "start": 1,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "First node is labeled as ",
                                        "position": {
                                            "start": { "line": 1633, "column": 5, "offset": 45065 },
                                            "end": { "line": 1633, "column": 30, "offset": 45090 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "0",
                                        "position": {
                                            "start": { "line": 1633, "column": 30, "offset": 45090 },
                                            "end": { "line": 1633, "column": 33, "offset": 45093 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ". Connect node ",
                                        "position": {
                                            "start": { "line": 1633, "column": 33, "offset": 45093 },
                                            "end": { "line": 1633, "column": 48, "offset": 45108 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "0",
                                        "position": {
                                            "start": { "line": 1633, "column": 48, "offset": 45108 },
                                            "end": { "line": 1633, "column": 51, "offset": 45111 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " to both nodes ",
                                        "position": {
                                            "start": { "line": 1633, "column": 51, "offset": 45111 },
                                            "end": { "line": 1633, "column": 66, "offset": 45126 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "1",
                                        "position": {
                                            "start": { "line": 1633, "column": 66, "offset": 45126 },
                                            "end": { "line": 1633, "column": 69, "offset": 45129 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " and ",
                                        "position": {
                                            "start": { "line": 1633, "column": 69, "offset": 45129 },
                                            "end": { "line": 1633, "column": 74, "offset": 45134 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "2",
                                        "position": {
                                            "start": { "line": 1633, "column": 74, "offset": 45134 },
                                            "end": { "line": 1633, "column": 77, "offset": 45137 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ".",
                                        "position": {
                                            "start": { "line": 1633, "column": 77, "offset": 45137 },
                                            "end": { "line": 1633, "column": 78, "offset": 45138 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1633, "column": 5, "offset": 45065 },
                                    "end": { "line": 1633, "column": 78, "offset": 45138 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1633, "column": 1, "offset": 45061 },
                            "end": { "line": 1633, "column": 78, "offset": 45138 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Second node is labeled as ",
                                        "position": {
                                            "start": { "line": 1634, "column": 5, "offset": 45143 },
                                            "end": { "line": 1634, "column": 31, "offset": 45169 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "1",
                                        "position": {
                                            "start": { "line": 1634, "column": 31, "offset": 45169 },
                                            "end": { "line": 1634, "column": 34, "offset": 45172 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ". Connect node ",
                                        "position": {
                                            "start": { "line": 1634, "column": 34, "offset": 45172 },
                                            "end": { "line": 1634, "column": 49, "offset": 45187 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "1",
                                        "position": {
                                            "start": { "line": 1634, "column": 49, "offset": 45187 },
                                            "end": { "line": 1634, "column": 52, "offset": 45190 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " to node ",
                                        "position": {
                                            "start": { "line": 1634, "column": 52, "offset": 45190 },
                                            "end": { "line": 1634, "column": 61, "offset": 45199 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "2",
                                        "position": {
                                            "start": { "line": 1634, "column": 61, "offset": 45199 },
                                            "end": { "line": 1634, "column": 64, "offset": 45202 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ".",
                                        "position": {
                                            "start": { "line": 1634, "column": 64, "offset": 45202 },
                                            "end": { "line": 1634, "column": 65, "offset": 45203 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1634, "column": 5, "offset": 45143 },
                                    "end": { "line": 1634, "column": 65, "offset": 45203 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1634, "column": 1, "offset": 45139 },
                            "end": { "line": 1634, "column": 65, "offset": 45203 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Third node is labeled as ",
                                        "position": {
                                            "start": { "line": 1635, "column": 5, "offset": 45208 },
                                            "end": { "line": 1635, "column": 30, "offset": 45233 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "2",
                                        "position": {
                                            "start": { "line": 1635, "column": 30, "offset": 45233 },
                                            "end": { "line": 1635, "column": 33, "offset": 45236 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ". Connect node ",
                                        "position": {
                                            "start": { "line": 1635, "column": 33, "offset": 45236 },
                                            "end": { "line": 1635, "column": 48, "offset": 45251 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "2",
                                        "position": {
                                            "start": { "line": 1635, "column": 48, "offset": 45251 },
                                            "end": { "line": 1635, "column": 51, "offset": 45254 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " to node ",
                                        "position": {
                                            "start": { "line": 1635, "column": 51, "offset": 45254 },
                                            "end": { "line": 1635, "column": 60, "offset": 45263 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "2",
                                        "position": {
                                            "start": { "line": 1635, "column": 60, "offset": 45263 },
                                            "end": { "line": 1635, "column": 63, "offset": 45266 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " (itself), thus forming a self-cycle.",
                                        "position": {
                                            "start": { "line": 1635, "column": 63, "offset": 45266 },
                                            "end": { "line": 1635, "column": 100, "offset": 45303 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1635, "column": 5, "offset": 45208 },
                                    "end": { "line": 1635, "column": 100, "offset": 45303 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1635, "column": 1, "offset": 45204 },
                            "end": { "line": 1635, "column": 100, "offset": 45303 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1633, "column": 1, "offset": 45061 },
                    "end": { "line": 1635, "column": 100, "offset": 45303 },
                    "indent": [1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Visually, the graph looks like the following:",
                        "position": {
                            "start": { "line": 1637, "column": 1, "offset": 45305 },
                            "end": { "line": 1637, "column": 46, "offset": 45350 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1637, "column": 1, "offset": 45305 }, "end": { "line": 1637, "column": 46, "offset": 45350 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/",
                "position": {
                    "start": { "line": 1639, "column": 1, "offset": 45352 },
                    "end": { "line": 1647, "column": 4, "offset": 45428 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Note",
                                "position": {
                                    "start": { "line": 1649, "column": 3, "offset": 45432 },
                                    "end": { "line": 1649, "column": 7, "offset": 45436 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1649, "column": 1, "offset": 45430 },
                            "end": { "line": 1649, "column": 9, "offset": 45438 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": ": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.",
                        "position": {
                            "start": { "line": 1649, "column": 9, "offset": 45438 },
                            "end": { "line": 1649, "column": 205, "offset": 45634 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1649, "column": 1, "offset": 45430 }, "end": { "line": 1649, "column": 205, "offset": 45634 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 3,
                "children": [
                    {
                        "type": "text",
                        "value": "Solution:",
                        "position": {
                            "start": { "line": 1651, "column": 5, "offset": 45640 },
                            "end": { "line": 1651, "column": 14, "offset": 45649 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1651, "column": 1, "offset": 45636 }, "end": { "line": 1651, "column": 14, "offset": 45649 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "DFS. Cache the visited node before entering the next recursion.",
                        "position": {
                            "start": { "line": 1653, "column": 1, "offset": 45651 },
                            "end": { "line": 1653, "column": 64, "offset": 45714 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1653, "column": 1, "offset": 45651 }, "end": { "line": 1653, "column": 64, "offset": 45714 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};",
                "position": {
                    "start": { "line": 1655, "column": 1, "offset": 45716 },
                    "end": { "line": 1684, "column": 4, "offset": 46401 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": "binary-tree-upside-down",
                        "url": "https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp",
                        "alt": "alt text",
                        "position": {
                            "start": { "line": 1686, "column": 1, "offset": 46403 },
                            "end": { "line": 1686, "column": 127, "offset": 46529 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1686, "column": 1, "offset": 46403 }, "end": { "line": 1686, "column": 127, "offset": 46529 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "js",
                "meta": null,
                "value": "/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};",
                "position": {
                    "start": { "line": 1688, "column": 1, "offset": 46531 },
                    "end": { "line": 1729, "column": 4, "offset": 47383 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": "maximum-sum-circular-subarray",
                        "url": "https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png",
                        "alt": "alt text",
                        "position": {
                            "start": { "line": 1731, "column": 1, "offset": 47385 },
                            "end": { "line": 1731, "column": 138, "offset": 47522 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1731, "column": 1, "offset": 47385 }, "end": { "line": 1731, "column": 138, "offset": 47522 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": "js",
                "meta": null,
                "value": "/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};",
                "position": {
                    "start": { "line": 1733, "column": 1, "offset": 47524 },
                    "end": { "line": 1753, "column": 4, "offset": 48027 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#balanced-binary-tree---leetcode",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 1755, "column": 2, "offset": 48030 },
                                    "end": { "line": 1755, "column": 142, "offset": 48170 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1755, "column": 1, "offset": 48029 },
                            "end": { "line": 1755, "column": 177, "offset": 48205 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1755, "column": 1, "offset": 48029 }, "end": { "line": 1755, "column": 177, "offset": 48205 }, "indent": [] }
            },
            {
                "type": "heading",
                "depth": 1,
                "children": [
                    {
                        "type": "text",
                        "value": "âž¤ Balanced Binary Tree - LeetCode",
                        "position": {
                            "start": { "line": 1757, "column": 3, "offset": 48209 },
                            "end": { "line": 1757, "column": 36, "offset": 48242 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1757, "column": 1, "offset": 48207 }, "end": { "line": 1757, "column": 36, "offset": 48242 }, "indent": [] }
            },
            {
                "type": "blockquote",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.",
                                "position": {
                                    "start": { "line": 1759, "column": 3, "offset": 48246 },
                                    "end": { "line": 1759, "column": 144, "offset": 48387 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1759, "column": 3, "offset": 48246 },
                            "end": { "line": 1759, "column": 144, "offset": 48387 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1759, "column": 1, "offset": 48244 }, "end": { "line": 1759, "column": 144, "offset": 48387 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a binary tree, determine if it is height-balanced.",
                        "position": {
                            "start": { "line": 1761, "column": 1, "offset": 48389 },
                            "end": { "line": 1761, "column": 57, "offset": 48445 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1761, "column": 1, "offset": 48389 }, "end": { "line": 1761, "column": 57, "offset": 48445 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For this problem, a height-balanced binary tree is defined as:",
                        "position": {
                            "start": { "line": 1763, "column": 1, "offset": 48447 },
                            "end": { "line": 1763, "column": 63, "offset": 48509 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1763, "column": 1, "offset": 48447 }, "end": { "line": 1763, "column": 63, "offset": 48509 }, "indent": [] }
            },
            {
                "type": "blockquote",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "a binary tree in which the left and right subtrees of ",
                                "position": {
                                    "start": { "line": 1765, "column": 3, "offset": 48513 },
                                    "end": { "line": 1765, "column": 57, "offset": 48567 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "emphasis",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "every",
                                        "position": {
                                            "start": { "line": 1765, "column": 58, "offset": 48568 },
                                            "end": { "line": 1765, "column": 63, "offset": 48573 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1765, "column": 57, "offset": 48567 },
                                    "end": { "line": 1765, "column": 64, "offset": 48574 },
                                    "indent": []
                                }
                            },
                            {
                                "type": "text",
                                "value": " node differ in height by no more than 1.",
                                "position": {
                                    "start": { "line": 1765, "column": 64, "offset": 48574 },
                                    "end": { "line": 1765, "column": 105, "offset": 48615 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1765, "column": 3, "offset": 48513 },
                            "end": { "line": 1765, "column": 105, "offset": 48615 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1765, "column": 1, "offset": 48511 }, "end": { "line": 1765, "column": 105, "offset": 48615 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 1767, "column": 3, "offset": 48619 },
                                    "end": { "line": 1767, "column": 13, "offset": 48629 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1767, "column": 1, "offset": 48617 },
                            "end": { "line": 1767, "column": 15, "offset": 48631 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1767, "column": 1, "offset": 48617 }, "end": { "line": 1767, "column": 15, "offset": 48631 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg",
                        "alt": null,
                        "position": {
                            "start": { "line": 1769, "column": 1, "offset": 48633 },
                            "end": { "line": 1769, "column": 66, "offset": 48698 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1769, "column": 1, "offset": 48633 }, "end": { "line": 1769, "column": 66, "offset": 48698 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Input:",
                                "position": {
                                    "start": { "line": 1771, "column": 3, "offset": 48702 },
                                    "end": { "line": 1771, "column": 9, "offset": 48708 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1771, "column": 1, "offset": 48700 },
                            "end": { "line": 1771, "column": 11, "offset": 48710 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " root = ",
                        "position": {
                            "start": { "line": 1771, "column": 11, "offset": 48710 },
                            "end": { "line": 1771, "column": 19, "offset": 48718 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1771, "column": 19, "offset": 48718 },
                            "end": { "line": 1771, "column": 21, "offset": 48720 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "3,9,20,null,null,15,7]\n",
                        "position": {
                            "start": { "line": 1771, "column": 21, "offset": 48720 },
                            "end": { "line": 1772, "column": 1, "offset": 48743 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Output:",
                                "position": {
                                    "start": { "line": 1772, "column": 3, "offset": 48745 },
                                    "end": { "line": 1772, "column": 10, "offset": 48752 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1772, "column": 1, "offset": 48743 },
                            "end": { "line": 1772, "column": 12, "offset": 48754 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " true",
                        "position": {
                            "start": { "line": 1772, "column": 12, "offset": 48754 },
                            "end": { "line": 1772, "column": 17, "offset": 48759 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1771, "column": 1, "offset": 48700 }, "end": { "line": 1772, "column": 17, "offset": 48759 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 1774, "column": 3, "offset": 48763 },
                                    "end": { "line": 1774, "column": 13, "offset": 48773 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1774, "column": 1, "offset": 48761 },
                            "end": { "line": 1774, "column": 15, "offset": 48775 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1774, "column": 1, "offset": 48761 }, "end": { "line": 1774, "column": 15, "offset": 48775 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg",
                        "alt": null,
                        "position": {
                            "start": { "line": 1776, "column": 1, "offset": 48777 },
                            "end": { "line": 1776, "column": 66, "offset": 48842 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1776, "column": 1, "offset": 48777 }, "end": { "line": 1776, "column": 66, "offset": 48842 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Input:",
                                "position": {
                                    "start": { "line": 1778, "column": 3, "offset": 48846 },
                                    "end": { "line": 1778, "column": 9, "offset": 48852 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1778, "column": 1, "offset": 48844 },
                            "end": { "line": 1778, "column": 11, "offset": 48854 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " root = ",
                        "position": {
                            "start": { "line": 1778, "column": 11, "offset": 48854 },
                            "end": { "line": 1778, "column": 19, "offset": 48862 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1778, "column": 19, "offset": 48862 },
                            "end": { "line": 1778, "column": 21, "offset": 48864 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "1,2,2,3,3,null,null,4,4]\n",
                        "position": {
                            "start": { "line": 1778, "column": 21, "offset": 48864 },
                            "end": { "line": 1779, "column": 1, "offset": 48889 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Output:",
                                "position": {
                                    "start": { "line": 1779, "column": 3, "offset": 48891 },
                                    "end": { "line": 1779, "column": 10, "offset": 48898 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1779, "column": 1, "offset": 48889 },
                            "end": { "line": 1779, "column": 12, "offset": 48900 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " false",
                        "position": {
                            "start": { "line": 1779, "column": 12, "offset": 48900 },
                            "end": { "line": 1779, "column": 18, "offset": 48906 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1778, "column": 1, "offset": 48844 }, "end": { "line": 1779, "column": 18, "offset": 48906 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 3:",
                                "position": {
                                    "start": { "line": 1781, "column": 3, "offset": 48910 },
                                    "end": { "line": 1781, "column": 13, "offset": 48920 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1781, "column": 1, "offset": 48908 },
                            "end": { "line": 1781, "column": 15, "offset": 48922 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1781, "column": 1, "offset": 48908 }, "end": { "line": 1781, "column": 15, "offset": 48922 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Input:",
                                "position": {
                                    "start": { "line": 1783, "column": 3, "offset": 48926 },
                                    "end": { "line": 1783, "column": 9, "offset": 48932 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1783, "column": 1, "offset": 48924 },
                            "end": { "line": 1783, "column": 11, "offset": 48934 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " root = ",
                        "position": {
                            "start": { "line": 1783, "column": 11, "offset": 48934 },
                            "end": { "line": 1783, "column": 19, "offset": 48942 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1783, "column": 19, "offset": 48942 },
                            "end": { "line": 1783, "column": 21, "offset": 48944 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "]\n",
                        "position": {
                            "start": { "line": 1783, "column": 21, "offset": 48944 },
                            "end": { "line": 1784, "column": 1, "offset": 48946 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Output:",
                                "position": {
                                    "start": { "line": 1784, "column": 3, "offset": 48948 },
                                    "end": { "line": 1784, "column": 10, "offset": 48955 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1784, "column": 1, "offset": 48946 },
                            "end": { "line": 1784, "column": 12, "offset": 48957 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " true",
                        "position": {
                            "start": { "line": 1784, "column": 12, "offset": 48957 },
                            "end": { "line": 1784, "column": 17, "offset": 48962 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1783, "column": 1, "offset": 48924 }, "end": { "line": 1784, "column": 17, "offset": 48962 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Constraints:",
                                "position": {
                                    "start": { "line": 1786, "column": 3, "offset": 48966 },
                                    "end": { "line": 1786, "column": 15, "offset": 48978 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1786, "column": 1, "offset": 48964 },
                            "end": { "line": 1786, "column": 17, "offset": 48980 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1786, "column": 1, "offset": 48964 }, "end": { "line": 1786, "column": 17, "offset": 48980 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "The number of nodes in the tree is in the range ",
                                        "position": {
                                            "start": { "line": 1788, "column": 5, "offset": 48986 },
                                            "end": { "line": 1788, "column": 53, "offset": 49034 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "[0, 5000]",
                                        "position": {
                                            "start": { "line": 1788, "column": 53, "offset": 49034 },
                                            "end": { "line": 1788, "column": 64, "offset": 49045 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ".",
                                        "position": {
                                            "start": { "line": 1788, "column": 64, "offset": 49045 },
                                            "end": { "line": 1788, "column": 65, "offset": 49046 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1788, "column": 5, "offset": 48986 },
                                    "end": { "line": 1788, "column": 65, "offset": 49046 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1788, "column": 1, "offset": 48982 },
                            "end": { "line": 1788, "column": 65, "offset": 49046 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "-104 <= Node.val <= 104",
                                        "position": {
                                            "start": { "line": 1789, "column": 5, "offset": 49051 },
                                            "end": { "line": 1789, "column": 30, "offset": 49076 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1789, "column": 5, "offset": 49051 },
                                    "end": { "line": 1789, "column": 30, "offset": 49076 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1789, "column": 1, "offset": 49047 },
                            "end": { "line": 1789, "column": 30, "offset": 49076 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1788, "column": 1, "offset": 48982 }, "end": { "line": 1789, "column": 30, "offset": 49076 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/balanced-binary-tree/",
                        "children": [
                            {
                                "type": "text",
                                "value": "Source",
                                "position": {
                                    "start": { "line": 1791, "column": 2, "offset": 49079 },
                                    "end": { "line": 1791, "column": 8, "offset": 49085 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1791, "column": 1, "offset": 49078 },
                            "end": { "line": 1791, "column": 62, "offset": 49139 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "# Convert Sorted Array to Binary Search Tree",
                        "position": {
                            "start": { "line": 1791, "column": 62, "offset": 49139 },
                            "end": { "line": 1791, "column": 106, "offset": 49183 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1791, "column": 1, "offset": 49078 }, "end": { "line": 1791, "column": 106, "offset": 49183 }, "indent": [] }
            },
            {
                "type": "blockquote",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.",
                                "position": {
                                    "start": { "line": 1793, "column": 3, "offset": 49187 },
                                    "end": { "line": 1793, "column": 144, "offset": 49328 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1793, "column": 3, "offset": 49187 },
                            "end": { "line": 1793, "column": 144, "offset": 49328 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1793, "column": 1, "offset": 49185 }, "end": { "line": 1793, "column": 144, "offset": 49328 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given an array where elements are sorted in ascending order, convert it to a height balanced BST.",
                        "position": {
                            "start": { "line": 1795, "column": 1, "offset": 49330 },
                            "end": { "line": 1795, "column": 98, "offset": 49427 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1795, "column": 1, "offset": 49330 }, "end": { "line": 1795, "column": 98, "offset": 49427 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ",
                        "position": {
                            "start": { "line": 1797, "column": 1, "offset": 49429 },
                            "end": { "line": 1797, "column": 119, "offset": 49547 },
                            "indent": []
                        }
                    },
                    {
                        "type": "emphasis",
                        "children": [
                            {
                                "type": "text",
                                "value": "every",
                                "position": {
                                    "start": { "line": 1797, "column": 120, "offset": 49548 },
                                    "end": { "line": 1797, "column": 125, "offset": 49553 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1797, "column": 119, "offset": 49547 },
                            "end": { "line": 1797, "column": 126, "offset": 49554 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " node never differ by more than 1.",
                        "position": {
                            "start": { "line": 1797, "column": 126, "offset": 49554 },
                            "end": { "line": 1797, "column": 160, "offset": 49588 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1797, "column": 1, "offset": 49429 }, "end": { "line": 1797, "column": 160, "offset": 49588 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example:",
                                "position": {
                                    "start": { "line": 1799, "column": 3, "offset": 49592 },
                                    "end": { "line": 1799, "column": 11, "offset": 49600 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1799, "column": 1, "offset": 49590 },
                            "end": { "line": 1799, "column": 13, "offset": 49602 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1799, "column": 1, "offset": 49590 }, "end": { "line": 1799, "column": 13, "offset": 49602 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given the sorted array: ",
                        "position": {
                            "start": { "line": 1801, "column": 1, "offset": 49604 },
                            "end": { "line": 1801, "column": 25, "offset": 49628 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1801, "column": 25, "offset": 49628 },
                            "end": { "line": 1801, "column": 27, "offset": 49630 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "-10,-3,0,5,9],",
                        "position": {
                            "start": { "line": 1801, "column": 27, "offset": 49630 },
                            "end": { "line": 1801, "column": 41, "offset": 49644 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1801, "column": 1, "offset": 49604 }, "end": { "line": 1801, "column": 41, "offset": 49644 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "One possible answer is: ",
                        "position": {
                            "start": { "line": 1803, "column": 1, "offset": 49646 },
                            "end": { "line": 1803, "column": 25, "offset": 49670 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1803, "column": 25, "offset": 49670 },
                            "end": { "line": 1803, "column": 27, "offset": 49672 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "0,-3,9,-10,null,5], which represents the following height balanced BST:",
                        "position": {
                            "start": { "line": 1803, "column": 27, "offset": 49672 },
                            "end": { "line": 1803, "column": 98, "offset": 49743 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1803, "column": 1, "offset": 49646 }, "end": { "line": 1803, "column": 98, "offset": 49743 }, "indent": [] }
            },
            {
                "type": "code",
                "lang": null,
                "meta": null,
                "value": "  0\n / \\\\",
                "position": { "start": { "line": 1805, "column": 1, "offset": 49745 }, "end": { "line": 1806, "column": 10, "offset": 49762 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "-",
                        "position": {
                            "start": { "line": 1808, "column": 1, "offset": 49764 },
                            "end": { "line": 1808, "column": 3, "offset": 49766 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "3 9\n/ /\n",
                        "position": {
                            "start": { "line": 1808, "column": 3, "offset": 49766 },
                            "end": { "line": 1810, "column": 1, "offset": 49774 },
                            "indent": [1, 1]
                        }
                    },
                    {
                        "type": "text",
                        "value": "-",
                        "position": {
                            "start": { "line": 1810, "column": 1, "offset": 49774 },
                            "end": { "line": 1810, "column": 3, "offset": 49776 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "10 5",
                        "position": {
                            "start": { "line": 1810, "column": 3, "offset": 49776 },
                            "end": { "line": 1810, "column": 7, "offset": 49780 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1808, "column": 1, "offset": 49764 }, "end": { "line": 1810, "column": 7, "offset": 49780 }, "indent": [1, 1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",
                        "children": [
                            {
                                "type": "text",
                                "value": "Source",
                                "position": {
                                    "start": { "line": 1812, "column": 2, "offset": 49783 },
                                    "end": { "line": 1812, "column": 8, "offset": 49789 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1812, "column": 1, "offset": 49782 },
                            "end": { "line": 1812, "column": 84, "offset": 49865 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "# Delete Node in a BST",
                        "position": {
                            "start": { "line": 1812, "column": 84, "offset": 49865 },
                            "end": { "line": 1812, "column": 106, "offset": 49887 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1812, "column": 1, "offset": 49782 }, "end": { "line": 1812, "column": 106, "offset": 49887 }, "indent": [] }
            },
            {
                "type": "blockquote",
                "children": [
                    {
                        "type": "paragraph",
                        "children": [
                            {
                                "type": "text",
                                "value": "Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.",
                                "position": {
                                    "start": { "line": 1814, "column": 3, "offset": 49891 },
                                    "end": { "line": 1814, "column": 144, "offset": 50032 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1814, "column": 3, "offset": 49891 },
                            "end": { "line": 1814, "column": 144, "offset": 50032 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1814, "column": 1, "offset": 49889 }, "end": { "line": 1814, "column": 144, "offset": 50032 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.",
                        "position": {
                            "start": { "line": 1816, "column": 1, "offset": 50034 },
                            "end": { "line": 1816, "column": 157, "offset": 50190 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1816, "column": 1, "offset": 50034 }, "end": { "line": 1816, "column": 157, "offset": 50190 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "text",
                        "value": "Basically, the deletion can be divided into two stages:",
                        "position": {
                            "start": { "line": 1818, "column": 1, "offset": 50192 },
                            "end": { "line": 1818, "column": 56, "offset": 50247 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1818, "column": 1, "offset": 50192 }, "end": { "line": 1818, "column": 56, "offset": 50247 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": true,
                "start": 1,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Search for a node to remove.",
                                        "position": {
                                            "start": { "line": 1820, "column": 5, "offset": 50253 },
                                            "end": { "line": 1820, "column": 33, "offset": 50281 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1820, "column": 5, "offset": 50253 },
                                    "end": { "line": 1820, "column": 33, "offset": 50281 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1820, "column": 1, "offset": 50249 },
                            "end": { "line": 1820, "column": 33, "offset": 50281 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "If the node is found, delete the node.",
                                        "position": {
                                            "start": { "line": 1821, "column": 5, "offset": 50286 },
                                            "end": { "line": 1821, "column": 43, "offset": 50324 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1821, "column": 5, "offset": 50286 },
                                    "end": { "line": 1821, "column": 43, "offset": 50324 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1821, "column": 1, "offset": 50282 },
                            "end": { "line": 1821, "column": 43, "offset": 50324 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1820, "column": 1, "offset": 50249 }, "end": { "line": 1821, "column": 43, "offset": 50324 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Follow up:",
                                "position": {
                                    "start": { "line": 1823, "column": 3, "offset": 50328 },
                                    "end": { "line": 1823, "column": 13, "offset": 50338 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1823, "column": 1, "offset": 50326 },
                            "end": { "line": 1823, "column": 15, "offset": 50340 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " Can you solve it with time complexity ",
                        "position": {
                            "start": { "line": 1823, "column": 15, "offset": 50340 },
                            "end": { "line": 1823, "column": 54, "offset": 50379 },
                            "indent": []
                        }
                    },
                    {
                        "type": "inlineCode",
                        "value": "O(height of tree)",
                        "position": {
                            "start": { "line": 1823, "column": 54, "offset": 50379 },
                            "end": { "line": 1823, "column": 73, "offset": 50398 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "?",
                        "position": {
                            "start": { "line": 1823, "column": 73, "offset": 50398 },
                            "end": { "line": 1823, "column": 74, "offset": 50399 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1823, "column": 1, "offset": 50326 }, "end": { "line": 1823, "column": 74, "offset": 50399 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 1:",
                                "position": {
                                    "start": { "line": 1825, "column": 3, "offset": 50403 },
                                    "end": { "line": 1825, "column": 13, "offset": 50413 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1825, "column": 1, "offset": 50401 },
                            "end": { "line": 1825, "column": 15, "offset": 50415 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1825, "column": 1, "offset": 50401 }, "end": { "line": 1825, "column": 15, "offset": 50415 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "image",
                        "title": null,
                        "url": "https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg",
                        "alt": null,
                        "position": {
                            "start": { "line": 1827, "column": 1, "offset": 50417 },
                            "end": { "line": 1827, "column": 67, "offset": 50483 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1827, "column": 1, "offset": 50417 }, "end": { "line": 1827, "column": 67, "offset": 50483 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Input:",
                                "position": {
                                    "start": { "line": 1829, "column": 3, "offset": 50487 },
                                    "end": { "line": 1829, "column": 9, "offset": 50493 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1829, "column": 1, "offset": 50485 },
                            "end": { "line": 1829, "column": 11, "offset": 50495 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " root = ",
                        "position": {
                            "start": { "line": 1829, "column": 11, "offset": 50495 },
                            "end": { "line": 1829, "column": 19, "offset": 50503 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1829, "column": 19, "offset": 50503 },
                            "end": { "line": 1829, "column": 21, "offset": 50505 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "5,3,6,2,4,null,7], key = 3\n",
                        "position": {
                            "start": { "line": 1829, "column": 21, "offset": 50505 },
                            "end": { "line": 1830, "column": 1, "offset": 50532 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Output:",
                                "position": {
                                    "start": { "line": 1830, "column": 3, "offset": 50534 },
                                    "end": { "line": 1830, "column": 10, "offset": 50541 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1830, "column": 1, "offset": 50532 },
                            "end": { "line": 1830, "column": 12, "offset": 50543 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " ",
                        "position": {
                            "start": { "line": 1830, "column": 12, "offset": 50543 },
                            "end": { "line": 1830, "column": 13, "offset": 50544 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1830, "column": 13, "offset": 50544 },
                            "end": { "line": 1830, "column": 15, "offset": 50546 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "5,4,6,2,null,null,7]\n",
                        "position": {
                            "start": { "line": 1830, "column": 15, "offset": 50546 },
                            "end": { "line": 1831, "column": 1, "offset": 50567 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Explanation:",
                                "position": {
                                    "start": { "line": 1831, "column": 3, "offset": 50569 },
                                    "end": { "line": 1831, "column": 15, "offset": 50581 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1831, "column": 1, "offset": 50567 },
                            "end": { "line": 1831, "column": 17, "offset": 50583 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ",
                        "position": {
                            "start": { "line": 1831, "column": 17, "offset": 50583 },
                            "end": { "line": 1832, "column": 21, "offset": 50678 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1832, "column": 21, "offset": 50678 },
                            "end": { "line": 1832, "column": 23, "offset": 50680 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is ",
                        "position": {
                            "start": { "line": 1832, "column": 23, "offset": 50680 },
                            "end": { "line": 1833, "column": 44, "offset": 50769 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1833, "column": 44, "offset": 50769 },
                            "end": { "line": 1833, "column": 46, "offset": 50771 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "5,2,6,null,4,null,7] and it's also accepted.\n",
                        "position": {
                            "start": { "line": 1833, "column": 46, "offset": 50771 },
                            "end": { "line": 1834, "column": 1, "offset": 50816 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "image",
                        "title": null,
                        "url": "https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg",
                        "alt": null,
                        "position": {
                            "start": { "line": 1834, "column": 1, "offset": 50816 },
                            "end": { "line": 1834, "column": 70, "offset": 50885 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1829, "column": 1, "offset": 50485 },
                    "end": { "line": 1834, "column": 70, "offset": 50885 },
                    "indent": [1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 2:",
                                "position": {
                                    "start": { "line": 1836, "column": 3, "offset": 50889 },
                                    "end": { "line": 1836, "column": 13, "offset": 50899 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1836, "column": 1, "offset": 50887 },
                            "end": { "line": 1836, "column": 15, "offset": 50901 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1836, "column": 1, "offset": 50887 }, "end": { "line": 1836, "column": 15, "offset": 50901 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Input:",
                                "position": {
                                    "start": { "line": 1838, "column": 3, "offset": 50905 },
                                    "end": { "line": 1838, "column": 9, "offset": 50911 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1838, "column": 1, "offset": 50903 },
                            "end": { "line": 1838, "column": 11, "offset": 50913 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " root = ",
                        "position": {
                            "start": { "line": 1838, "column": 11, "offset": 50913 },
                            "end": { "line": 1838, "column": 19, "offset": 50921 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1838, "column": 19, "offset": 50921 },
                            "end": { "line": 1838, "column": 21, "offset": 50923 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "5,3,6,2,4,null,7], key = 0\n",
                        "position": {
                            "start": { "line": 1838, "column": 21, "offset": 50923 },
                            "end": { "line": 1839, "column": 1, "offset": 50950 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Output:",
                                "position": {
                                    "start": { "line": 1839, "column": 3, "offset": 50952 },
                                    "end": { "line": 1839, "column": 10, "offset": 50959 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1839, "column": 1, "offset": 50950 },
                            "end": { "line": 1839, "column": 12, "offset": 50961 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " ",
                        "position": {
                            "start": { "line": 1839, "column": 12, "offset": 50961 },
                            "end": { "line": 1839, "column": 13, "offset": 50962 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1839, "column": 13, "offset": 50962 },
                            "end": { "line": 1839, "column": 15, "offset": 50964 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "5,3,6,2,4,null,7]\n",
                        "position": {
                            "start": { "line": 1839, "column": 15, "offset": 50964 },
                            "end": { "line": 1840, "column": 1, "offset": 50982 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Explanation:",
                                "position": {
                                    "start": { "line": 1840, "column": 3, "offset": 50984 },
                                    "end": { "line": 1840, "column": 15, "offset": 50996 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1840, "column": 1, "offset": 50982 },
                            "end": { "line": 1840, "column": 17, "offset": 50998 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " The tree does not contain a node with value = 0.",
                        "position": {
                            "start": { "line": 1840, "column": 17, "offset": 50998 },
                            "end": { "line": 1840, "column": 66, "offset": 51047 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1838, "column": 1, "offset": 50903 },
                    "end": { "line": 1840, "column": 66, "offset": 51047 },
                    "indent": [1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Example 3:",
                                "position": {
                                    "start": { "line": 1842, "column": 3, "offset": 51051 },
                                    "end": { "line": 1842, "column": 13, "offset": 51061 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1842, "column": 1, "offset": 51049 },
                            "end": { "line": 1842, "column": 15, "offset": 51063 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1842, "column": 1, "offset": 51049 }, "end": { "line": 1842, "column": 15, "offset": 51063 }, "indent": [] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Input:",
                                "position": {
                                    "start": { "line": 1844, "column": 3, "offset": 51067 },
                                    "end": { "line": 1844, "column": 9, "offset": 51073 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1844, "column": 1, "offset": 51065 },
                            "end": { "line": 1844, "column": 11, "offset": 51075 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " root = ",
                        "position": {
                            "start": { "line": 1844, "column": 11, "offset": 51075 },
                            "end": { "line": 1844, "column": 19, "offset": 51083 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1844, "column": 19, "offset": 51083 },
                            "end": { "line": 1844, "column": 21, "offset": 51085 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "], key = 0\n",
                        "position": {
                            "start": { "line": 1844, "column": 21, "offset": 51085 },
                            "end": { "line": 1845, "column": 1, "offset": 51096 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Output:",
                                "position": {
                                    "start": { "line": 1845, "column": 3, "offset": 51098 },
                                    "end": { "line": 1845, "column": 10, "offset": 51105 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1845, "column": 1, "offset": 51096 },
                            "end": { "line": 1845, "column": 12, "offset": 51107 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": " ",
                        "position": {
                            "start": { "line": 1845, "column": 12, "offset": 51107 },
                            "end": { "line": 1845, "column": 13, "offset": 51108 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "[",
                        "position": {
                            "start": { "line": 1845, "column": 13, "offset": 51108 },
                            "end": { "line": 1845, "column": 15, "offset": 51110 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "]",
                        "position": {
                            "start": { "line": 1845, "column": 15, "offset": 51110 },
                            "end": { "line": 1845, "column": 16, "offset": 51111 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1844, "column": 1, "offset": 51065 }, "end": { "line": 1845, "column": 16, "offset": 51111 }, "indent": [1] }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "strong",
                        "children": [
                            {
                                "type": "text",
                                "value": "Constraints:",
                                "position": {
                                    "start": { "line": 1847, "column": 3, "offset": 51115 },
                                    "end": { "line": 1847, "column": 15, "offset": 51127 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1847, "column": 1, "offset": 51113 },
                            "end": { "line": 1847, "column": 17, "offset": 51129 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1847, "column": 1, "offset": 51113 }, "end": { "line": 1847, "column": 17, "offset": 51129 }, "indent": [] }
            },
            {
                "type": "list",
                "ordered": false,
                "start": null,
                "spread": false,
                "children": [
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "The number of nodes in the tree is in the range ",
                                        "position": {
                                            "start": { "line": 1849, "column": 5, "offset": 51135 },
                                            "end": { "line": 1849, "column": 53, "offset": 51183 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "inlineCode",
                                        "value": "[0, 104]",
                                        "position": {
                                            "start": { "line": 1849, "column": 53, "offset": 51183 },
                                            "end": { "line": 1849, "column": 63, "offset": 51193 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": ".",
                                        "position": {
                                            "start": { "line": 1849, "column": 63, "offset": 51193 },
                                            "end": { "line": 1849, "column": 64, "offset": 51194 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1849, "column": 5, "offset": 51135 },
                                    "end": { "line": 1849, "column": 64, "offset": 51194 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1849, "column": 1, "offset": 51131 },
                            "end": { "line": 1849, "column": 64, "offset": 51194 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "-105 <= Node.val <= 105",
                                        "position": {
                                            "start": { "line": 1850, "column": 5, "offset": 51199 },
                                            "end": { "line": 1850, "column": 30, "offset": 51224 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1850, "column": 5, "offset": 51199 },
                                    "end": { "line": 1850, "column": 30, "offset": 51224 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1850, "column": 1, "offset": 51195 },
                            "end": { "line": 1850, "column": 30, "offset": 51224 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "text",
                                        "value": "Each node has a ",
                                        "position": {
                                            "start": { "line": 1851, "column": 5, "offset": 51229 },
                                            "end": { "line": 1851, "column": 21, "offset": 51245 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "strong",
                                        "children": [
                                            {
                                                "type": "text",
                                                "value": "unique",
                                                "position": {
                                                    "start": { "line": 1851, "column": 23, "offset": 51247 },
                                                    "end": { "line": 1851, "column": 29, "offset": 51253 },
                                                    "indent": []
                                                }
                                            }
                                        ],
                                        "position": {
                                            "start": { "line": 1851, "column": 21, "offset": 51245 },
                                            "end": { "line": 1851, "column": 31, "offset": 51255 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " value.",
                                        "position": {
                                            "start": { "line": 1851, "column": 31, "offset": 51255 },
                                            "end": { "line": 1851, "column": 38, "offset": 51262 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1851, "column": 5, "offset": 51229 },
                                    "end": { "line": 1851, "column": 38, "offset": 51262 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1851, "column": 1, "offset": 51225 },
                            "end": { "line": 1851, "column": 38, "offset": 51262 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "root",
                                        "position": {
                                            "start": { "line": 1852, "column": 5, "offset": 51267 },
                                            "end": { "line": 1852, "column": 11, "offset": 51273 },
                                            "indent": []
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "value": " is a valid binary search tree.",
                                        "position": {
                                            "start": { "line": 1852, "column": 11, "offset": 51273 },
                                            "end": { "line": 1852, "column": 42, "offset": 51304 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1852, "column": 5, "offset": 51267 },
                                    "end": { "line": 1852, "column": 42, "offset": 51304 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1852, "column": 1, "offset": 51263 },
                            "end": { "line": 1852, "column": 42, "offset": 51304 },
                            "indent": []
                        }
                    },
                    {
                        "type": "listItem",
                        "spread": false,
                        "checked": null,
                        "children": [
                            {
                                "type": "paragraph",
                                "children": [
                                    {
                                        "type": "inlineCode",
                                        "value": "-105 <= key <= 105",
                                        "position": {
                                            "start": { "line": 1853, "column": 5, "offset": 51309 },
                                            "end": { "line": 1853, "column": 25, "offset": 51329 },
                                            "indent": []
                                        }
                                    }
                                ],
                                "position": {
                                    "start": { "line": 1853, "column": 5, "offset": 51309 },
                                    "end": { "line": 1853, "column": 25, "offset": 51329 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1853, "column": 1, "offset": 51305 },
                            "end": { "line": 1853, "column": 25, "offset": 51329 },
                            "indent": []
                        }
                    }
                ],
                "position": {
                    "start": { "line": 1849, "column": 1, "offset": 51131 },
                    "end": { "line": 1853, "column": 25, "offset": 51329 },
                    "indent": [1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "https://leetcode.com/problems/delete-node-in-a-bst/",
                        "children": [
                            {
                                "type": "text",
                                "value": "Source",
                                "position": {
                                    "start": { "line": 1855, "column": 2, "offset": 51332 },
                                    "end": { "line": 1855, "column": 8, "offset": 51338 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1855, "column": 1, "offset": 51331 },
                            "end": { "line": 1855, "column": 62, "offset": 51392 },
                            "indent": []
                        }
                    },
                    {
                        "type": "image",
                        "title": "meeting-room-ii",
                        "url": "https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg",
                        "alt": "alt text",
                        "position": {
                            "start": { "line": 1855, "column": 62, "offset": 51392 },
                            "end": { "line": 1855, "column": 173, "offset": 51503 },
                            "indent": []
                        }
                    },
                    {
                        "type": "text",
                        "value": "\n",
                        "position": {
                            "start": { "line": 1855, "column": 173, "offset": 51503 },
                            "end": { "line": 1856, "column": 1, "offset": 51504 },
                            "indent": [1]
                        }
                    },
                    {
                        "type": "image",
                        "title": "meeting-room-ii",
                        "url": "https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg",
                        "alt": "alt text",
                        "position": {
                            "start": { "line": 1856, "column": 1, "offset": 51504 },
                            "end": { "line": 1856, "column": 112, "offset": 51615 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1855, "column": 1, "offset": 51331 }, "end": { "line": 1856, "column": 112, "offset": 51615 }, "indent": [1] }
            },
            {
                "type": "code",
                "lang": "javascript",
                "meta": null,
                "value": "/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};",
                "position": {
                    "start": { "line": 1858, "column": 1, "offset": 51617 },
                    "end": { "line": 1881, "column": 4, "offset": 52199 },
                    "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
                }
            },
            {
                "type": "paragraph",
                "children": [
                    {
                        "type": "link",
                        "title": null,
                        "url": "#-",
                        "children": [
                            {
                                "type": "image",
                                "title": null,
                                "url": "https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png",
                                "alt": "-----------------------------------------------------",
                                "position": {
                                    "start": { "line": 1883, "column": 2, "offset": 52202 },
                                    "end": { "line": 1883, "column": 142, "offset": 52342 },
                                    "indent": []
                                }
                            }
                        ],
                        "position": {
                            "start": { "line": 1883, "column": 1, "offset": 52201 },
                            "end": { "line": 1883, "column": 147, "offset": 52347 },
                            "indent": []
                        }
                    }
                ],
                "position": { "start": { "line": 1883, "column": 1, "offset": 52201 }, "end": { "line": 1883, "column": 147, "offset": 52347 }, "indent": [] }
            }
        ],
        "position": { "start": { "line": 1, "column": 1, "offset": 0 }, "end": { "line": 1884, "column": 1, "offset": 52348 } }
    }
}
