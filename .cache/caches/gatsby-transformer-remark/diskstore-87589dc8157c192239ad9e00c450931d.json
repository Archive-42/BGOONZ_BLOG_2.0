{"expireTime":9007200882630521000,"key":"transformer-remark-markdown-ast-0fc7e8141149afb881c16708a868a962--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Go To Sitemap: ","position":{"start":{"line":3,"column":3,"offset":6},"end":{"line":3,"column":18,"offset":21},"indent":[]}},{"type":"link","title":null,"url":"https://bgoonz-blog.netlify.app/docs/sitemap/","children":[{"type":"text","value":"Go Now -->","position":{"start":{"line":3,"column":19,"offset":22},"end":{"line":3,"column":29,"offset":32},"indent":[]}}],"position":{"start":{"line":3,"column":18,"offset":21},"end":{"line":3,"column":77,"offset":80},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":4},"end":{"line":3,"column":77,"offset":80},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Doc Websites & Repos","position":{"start":{"line":6,"column":4,"offset":89},"end":{"line":6,"column":24,"offset":109},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":24,"offset":109},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/PYTHON_PRAC","children":[{"type":"text","value":"Python Practice","position":{"start":{"line":8,"column":6,"offset":118},"end":{"line":8,"column":21,"offset":133},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":117},"end":{"line":8,"column":61,"offset":173},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":117},"end":{"line":8,"column":61,"offset":173},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":113},"end":{"line":8,"column":61,"offset":173},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://lambda-resources.netlify.app/","children":[{"type":"text","value":"Lambda Bootcamp Website","position":{"start":{"line":9,"column":6,"offset":180},"end":{"line":9,"column":29,"offset":203},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":179},"end":{"line":9,"column":69,"offset":243},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":179},"end":{"line":9,"column":69,"offset":243},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":175},"end":{"line":9,"column":69,"offset":243},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/React_Notes_V3","children":[{"type":"text","value":"React Notes","position":{"start":{"line":10,"column":6,"offset":250},"end":{"line":10,"column":17,"offset":261},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":249},"end":{"line":10,"column":60,"offset":304},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":249},"end":{"line":10,"column":60,"offset":304},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":245},"end":{"line":10,"column":60,"offset":304},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Project-Showcase","children":[{"type":"text","value":"Project Showcase","position":{"start":{"line":11,"column":6,"offset":311},"end":{"line":11,"column":22,"offset":327},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":310},"end":{"line":11,"column":67,"offset":372},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":310},"end":{"line":11,"column":67,"offset":372},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":306},"end":{"line":11,"column":67,"offset":372},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/DS-ALGO-OFFICIAL","children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":12,"column":6,"offset":379},"end":{"line":12,"column":34,"offset":407},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":378},"end":{"line":12,"column":79,"offset":452},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":378},"end":{"line":12,"column":79,"offset":452},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":374},"end":{"line":12,"column":79,"offset":452},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Lambda-Resource-Static-Assets","children":[{"type":"text","value":"Lambda Site Static Content Server","position":{"start":{"line":13,"column":6,"offset":459},"end":{"line":13,"column":39,"offset":492},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":458},"end":{"line":13,"column":97,"offset":550},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":458},"end":{"line":13,"column":97,"offset":550},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":454},"end":{"line":13,"column":97,"offset":550},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/mini-project-showcase","children":[{"type":"text","value":"Mini-Project Showcase","position":{"start":{"line":14,"column":6,"offset":557},"end":{"line":14,"column":27,"offset":578},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":556},"end":{"line":14,"column":77,"offset":628},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":556},"end":{"line":14,"column":77,"offset":628},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":552},"end":{"line":14,"column":77,"offset":628},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Useful-Snippets-js","children":[{"type":"text","value":"Useful Snippets","position":{"start":{"line":15,"column":6,"offset":635},"end":{"line":15,"column":21,"offset":650},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":634},"end":{"line":15,"column":68,"offset":697},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":634},"end":{"line":15,"column":68,"offset":697},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":630},"end":{"line":15,"column":68,"offset":697},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Markdown-Templates","children":[{"type":"text","value":"Markdown Templates","position":{"start":{"line":16,"column":6,"offset":704},"end":{"line":16,"column":24,"offset":722},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":703},"end":{"line":16,"column":71,"offset":769},"indent":[]}}],"position":{"start":{"line":16,"column":5,"offset":703},"end":{"line":16,"column":71,"offset":769},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":699},"end":{"line":16,"column":71,"offset":769},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/zumzi-chat-messenger","children":[{"type":"text","value":"Zumzi Video Conferencing App (mesibo api backend)","position":{"start":{"line":17,"column":6,"offset":776},"end":{"line":17,"column":55,"offset":825},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":775},"end":{"line":17,"column":104,"offset":874},"indent":[]}}],"position":{"start":{"line":17,"column":5,"offset":775},"end":{"line":17,"column":104,"offset":874},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":771},"end":{"line":17,"column":104,"offset":874},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":113},"end":{"line":17,"column":104,"offset":874},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Core Concepts","position":{"start":{"line":19,"column":3,"offset":880},"end":{"line":19,"column":16,"offset":893},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":878},"end":{"line":19,"column":16,"offset":893},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"index","position":{"start":{"line":21,"column":3,"offset":899},"end":{"line":21,"column":8,"offset":904},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":897},"end":{"line":21,"column":8,"offset":904},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.","position":{"start":{"line":23,"column":1,"offset":908},"end":{"line":23,"column":175,"offset":1082},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":908},"end":{"line":23,"column":175,"offset":1082},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ","position":{"start":{"line":25,"column":1,"offset":1086},"end":{"line":25,"column":319,"offset":1404},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/","children":[{"type":"text","value":"Mozilla Developer Network's website","position":{"start":{"line":25,"column":320,"offset":1405},"end":{"line":25,"column":355,"offset":1440},"indent":[]}}],"position":{"start":{"line":25,"column":319,"offset":1404},"end":{"line":25,"column":388,"offset":1473},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":25,"column":388,"offset":1473},"end":{"line":25,"column":389,"offset":1474},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":25,"column":389,"offset":1474},"end":{"line":25,"column":391,"offset":1476},"indent":[]}},{"type":"text","value":"MDN","position":{"start":{"line":25,"column":391,"offset":1476},"end":{"line":25,"column":394,"offset":1479},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":25,"column":394,"offset":1479},"end":{"line":25,"column":396,"offset":1481},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":25,"column":396,"offset":1481},"end":{"line":25,"column":397,"offset":1482},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1086},"end":{"line":25,"column":397,"offset":1482},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prefer ","position":{"start":{"line":27,"column":4,"offset":1489},"end":{"line":27,"column":11,"offset":1496},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":27,"column":11,"offset":1496},"end":{"line":27,"column":18,"offset":1503},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":27,"column":18,"offset":1503},"end":{"line":27,"column":23,"offset":1508},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":27,"column":23,"offset":1508},"end":{"line":27,"column":28,"offset":1513},"indent":[]}},{"type":"text","value":" over ","position":{"start":{"line":27,"column":28,"offset":1513},"end":{"line":27,"column":34,"offset":1519},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":27,"column":34,"offset":1519},"end":{"line":27,"column":39,"offset":1524},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1486},"end":{"line":27,"column":39,"offset":1524},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ","position":{"start":{"line":29,"column":1,"offset":1528},"end":{"line":29,"column":99,"offset":1626},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":29,"column":99,"offset":1626},"end":{"line":29,"column":104,"offset":1631},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":29,"column":104,"offset":1631},"end":{"line":29,"column":105,"offset":1632},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1528},"end":{"line":29,"column":105,"offset":1632},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar myVariable = 5;","position":{"start":{"line":31,"column":1,"offset":1636},"end":{"line":33,"column":4,"offset":1666},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Both the ","position":{"start":{"line":35,"column":1,"offset":1670},"end":{"line":35,"column":10,"offset":1679},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":35,"column":10,"offset":1679},"end":{"line":35,"column":17,"offset":1686},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":35,"column":17,"offset":1686},"end":{"line":35,"column":22,"offset":1691},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":35,"column":22,"offset":1691},"end":{"line":35,"column":27,"offset":1696},"indent":[]}},{"type":"text","value":" statements also declare variables. They were introduced in ES6.","position":{"start":{"line":35,"column":27,"offset":1696},"end":{"line":35,"column":91,"offset":1760},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1670},"end":{"line":35,"column":91,"offset":1760},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":37,"column":1,"offset":1764},"end":{"line":37,"column":5,"offset":1768},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":37,"column":5,"offset":1768},"end":{"line":37,"column":12,"offset":1775},"indent":[]}},{"type":"text","value":" in cases where a variable is never re-assigned. Using ","position":{"start":{"line":37,"column":12,"offset":1775},"end":{"line":37,"column":67,"offset":1830},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":37,"column":67,"offset":1830},"end":{"line":37,"column":74,"offset":1837},"indent":[]}},{"type":"text","value":" makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.","position":{"start":{"line":37,"column":74,"offset":1837},"end":{"line":37,"column":211,"offset":1974},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1764},"end":{"line":37,"column":211,"offset":1974},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the variable will be re-assigned, use ","position":{"start":{"line":39,"column":1,"offset":1978},"end":{"line":39,"column":42,"offset":2019},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":39,"column":42,"offset":2019},"end":{"line":39,"column":47,"offset":2024},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":39,"column":47,"offset":2024},"end":{"line":39,"column":48,"offset":2025},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1978},"end":{"line":39,"column":48,"offset":2025},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We encourage the use of ","position":{"start":{"line":41,"column":1,"offset":2029},"end":{"line":41,"column":25,"offset":2053},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":41,"column":25,"offset":2053},"end":{"line":41,"column":32,"offset":2060},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":41,"column":32,"offset":2060},"end":{"line":41,"column":37,"offset":2065},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":41,"column":37,"offset":2065},"end":{"line":41,"column":42,"offset":2070},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":41,"column":42,"offset":2070},"end":{"line":41,"column":54,"offset":2082},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":41,"column":54,"offset":2082},"end":{"line":41,"column":59,"offset":2087},"indent":[]}},{"type":"text","value":". In addition to the restriction introduced by ","position":{"start":{"line":41,"column":59,"offset":2087},"end":{"line":41,"column":106,"offset":2134},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":41,"column":106,"offset":2134},"end":{"line":41,"column":113,"offset":2141},"indent":[]}},{"type":"text","value":", both ","position":{"start":{"line":41,"column":113,"offset":2141},"end":{"line":41,"column":120,"offset":2148},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":41,"column":120,"offset":2148},"end":{"line":41,"column":127,"offset":2155},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":41,"column":127,"offset":2155},"end":{"line":41,"column":132,"offset":2160},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":41,"column":132,"offset":2160},"end":{"line":41,"column":137,"offset":2165},"indent":[]}},{"type":"text","value":" are ","position":{"start":{"line":41,"column":137,"offset":2165},"end":{"line":41,"column":142,"offset":2170},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"block scoped","position":{"start":{"line":41,"column":143,"offset":2171},"end":{"line":41,"column":155,"offset":2183},"indent":[]}}],"position":{"start":{"line":41,"column":142,"offset":2170},"end":{"line":41,"column":156,"offset":2184},"indent":[]}},{"type":"text","value":" as opposed to ","position":{"start":{"line":41,"column":156,"offset":2184},"end":{"line":41,"column":171,"offset":2199},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function scoped","position":{"start":{"line":41,"column":172,"offset":2200},"end":{"line":41,"column":187,"offset":2215},"indent":[]}}],"position":{"start":{"line":41,"column":171,"offset":2199},"end":{"line":41,"column":188,"offset":2216},"indent":[]}},{"type":"text","value":". This scoping can help avoid unexpected bugs.","position":{"start":{"line":41,"column":188,"offset":2216},"end":{"line":41,"column":234,"offset":2262},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2029},"end":{"line":41,"column":234,"offset":2262},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":43,"column":4,"offset":2269},"end":{"line":43,"column":19,"offset":2284},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2266},"end":{"line":43,"column":19,"offset":2284},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:","position":{"start":{"line":45,"column":1,"offset":2288},"end":{"line":45,"column":121,"offset":2408},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":2288},"end":{"line":45,"column":121,"offset":2408},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];","position":{"start":{"line":47,"column":1,"offset":2412},"end":{"line":52,"column":4,"offset":2515},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:","position":{"start":{"line":54,"column":1,"offset":2519},"end":{"line":54,"column":116,"offset":2634},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2519},"end":{"line":54,"column":116,"offset":2634},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations = cities.map((city) => {\n    const popMM = (city.pop / 1000000).toFixed(2);\n    return popMM + ' million';\n});\nconsole.log(formattedPopulations);","position":{"start":{"line":56,"column":1,"offset":2638},"end":{"line":62,"column":4,"offset":2826},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that we must also explicitly specify a ","position":{"start":{"line":64,"column":1,"offset":2830},"end":{"line":64,"column":45,"offset":2874},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":64,"column":45,"offset":2874},"end":{"line":64,"column":53,"offset":2882},"indent":[]}},{"type":"text","value":" for the function.","position":{"start":{"line":64,"column":53,"offset":2882},"end":{"line":64,"column":71,"offset":2900},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2830},"end":{"line":64,"column":71,"offset":2900},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, if we write a function body that is only a single line ","position":{"start":{"line":66,"column":1,"offset":2904},"end":{"line":66,"column":65,"offset":2968},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":66,"column":65,"offset":2968},"end":{"line":66,"column":67,"offset":2970},"indent":[]}},{"type":"text","value":"or single expression","position":{"start":{"line":66,"column":67,"offset":2970},"end":{"line":66,"column":87,"offset":2990},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":66,"column":87,"offset":2990},"end":{"line":66,"column":89,"offset":2992},"indent":[]}},{"type":"text","value":" we can use parentheses to delimit it:","position":{"start":{"line":66,"column":89,"offset":2992},"end":{"line":66,"column":127,"offset":3030},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":2904},"end":{"line":66,"column":127,"offset":3030},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations2 = cities.map((city) => (city.pop / 1000000).toFixed(2) + ' million');","position":{"start":{"line":68,"column":1,"offset":3034},"end":{"line":70,"column":4,"offset":3143},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notably, we don't use ","position":{"start":{"line":72,"column":1,"offset":3147},"end":{"line":72,"column":23,"offset":3169},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":72,"column":23,"offset":3169},"end":{"line":72,"column":31,"offset":3177},"indent":[]}},{"type":"text","value":" as it's implied.","position":{"start":{"line":72,"column":31,"offset":3177},"end":{"line":72,"column":48,"offset":3194},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":3147},"end":{"line":72,"column":48,"offset":3194},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Furthermore, if your function body is terse you can write it like so:","position":{"start":{"line":74,"column":1,"offset":3198},"end":{"line":74,"column":70,"offset":3267},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3198},"end":{"line":74,"column":70,"offset":3267},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const pops = cities.map((city) => city.pop);\nconsole.log(pops);","position":{"start":{"line":76,"column":1,"offset":3271},"end":{"line":79,"column":4,"offset":3347},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:","position":{"start":{"line":81,"column":1,"offset":3351},"end":{"line":81,"column":110,"offset":3460},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":3351},"end":{"line":81,"column":110,"offset":3460},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const popsNoArrow = cities.map(function (city) {\n    return city.pop;\n});","position":{"start":{"line":83,"column":1,"offset":3464},"end":{"line":87,"column":4,"offset":3551},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Of greater benefit, though, is how arrow functions bind the ","position":{"start":{"line":89,"column":1,"offset":3555},"end":{"line":89,"column":61,"offset":3615},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":89,"column":61,"offset":3615},"end":{"line":89,"column":67,"offset":3621},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":89,"column":67,"offset":3621},"end":{"line":89,"column":75,"offset":3629},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3555},"end":{"line":89,"column":75,"offset":3629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The traditional JavaScript function declaration syntax ","position":{"start":{"line":91,"column":1,"offset":3633},"end":{"line":91,"column":56,"offset":3688},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":91,"column":56,"offset":3688},"end":{"line":91,"column":58,"offset":3690},"indent":[]}},{"type":"inlineCode","value":"function () {}","position":{"start":{"line":91,"column":58,"offset":3690},"end":{"line":91,"column":74,"offset":3706},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":91,"column":74,"offset":3706},"end":{"line":91,"column":76,"offset":3708},"indent":[]}},{"type":"text","value":" will bind ","position":{"start":{"line":91,"column":76,"offset":3708},"end":{"line":91,"column":87,"offset":3719},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":91,"column":87,"offset":3719},"end":{"line":91,"column":93,"offset":3725},"indent":[]}},{"type":"text","value":" in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:","position":{"start":{"line":91,"column":93,"offset":3725},"end":{"line":91,"column":211,"offset":3843},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3633},"end":{"line":91,"column":211,"offset":3843},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":93,"column":1,"offset":3847},"end":{"line":122,"column":4,"offset":4364},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The method ","position":{"start":{"line":124,"column":1,"offset":4368},"end":{"line":124,"column":12,"offset":4379},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":124,"column":12,"offset":4379},"end":{"line":124,"column":26,"offset":4393},"indent":[]}},{"type":"text","value":" iterates over ","position":{"start":{"line":124,"column":26,"offset":4393},"end":{"line":124,"column":41,"offset":4408},"indent":[]}},{"type":"inlineCode","value":"this.songs","position":{"start":{"line":124,"column":41,"offset":4408},"end":{"line":124,"column":53,"offset":4420},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":124,"column":53,"offset":4420},"end":{"line":124,"column":59,"offset":4426},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":124,"column":59,"offset":4426},"end":{"line":124,"column":70,"offset":4437},"indent":[]}},{"type":"text","value":". In this context, ","position":{"start":{"line":124,"column":70,"offset":4437},"end":{"line":124,"column":89,"offset":4456},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":124,"column":89,"offset":4456},"end":{"line":124,"column":95,"offset":4462},"indent":[]}},{"type":"text","value":" is bound to the object ","position":{"start":{"line":124,"column":95,"offset":4462},"end":{"line":124,"column":119,"offset":4486},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":124,"column":119,"offset":4486},"end":{"line":124,"column":121,"offset":4488},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":124,"column":121,"offset":4488},"end":{"line":124,"column":130,"offset":4497},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":124,"column":130,"offset":4497},"end":{"line":124,"column":132,"offset":4499},"indent":[]}},{"type":"text","value":" as expected. However, the anonymous function passed to ","position":{"start":{"line":124,"column":132,"offset":4499},"end":{"line":124,"column":188,"offset":4555},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":124,"column":188,"offset":4555},"end":{"line":124,"column":199,"offset":4566},"indent":[]}},{"type":"text","value":" binds its internal ","position":{"start":{"line":124,"column":199,"offset":4566},"end":{"line":124,"column":219,"offset":4586},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":124,"column":219,"offset":4586},"end":{"line":124,"column":225,"offset":4592},"indent":[]}},{"type":"text","value":" to the global object. As such, ","position":{"start":{"line":124,"column":225,"offset":4592},"end":{"line":124,"column":257,"offset":4624},"indent":[]}},{"type":"inlineCode","value":"this.printSong(song)","position":{"start":{"line":124,"column":257,"offset":4624},"end":{"line":124,"column":279,"offset":4646},"indent":[]}},{"type":"text","value":" calls the function declared at the top of the example, ","position":{"start":{"line":124,"column":279,"offset":4646},"end":{"line":124,"column":335,"offset":4702},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":124,"column":336,"offset":4703},"end":{"line":124,"column":339,"offset":4706},"indent":[]}}],"position":{"start":{"line":124,"column":335,"offset":4702},"end":{"line":124,"column":340,"offset":4707},"indent":[]}},{"type":"text","value":" the method on ","position":{"start":{"line":124,"column":340,"offset":4707},"end":{"line":124,"column":355,"offset":4722},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":124,"column":355,"offset":4722},"end":{"line":124,"column":364,"offset":4731},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":124,"column":364,"offset":4731},"end":{"line":124,"column":365,"offset":4732},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":4368},"end":{"line":124,"column":365,"offset":4732},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ","position":{"start":{"line":126,"column":1,"offset":4736},"end":{"line":126,"column":119,"offset":4854},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"capturing the ","position":{"start":{"line":126,"column":121,"offset":4856},"end":{"line":126,"column":135,"offset":4870},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":126,"column":135,"offset":4870},"end":{"line":126,"column":141,"offset":4876},"indent":[]}},{"type":"text","value":" value of the enclosing context","position":{"start":{"line":126,"column":141,"offset":4876},"end":{"line":126,"column":172,"offset":4907},"indent":[]}}],"position":{"start":{"line":126,"column":119,"offset":4854},"end":{"line":126,"column":174,"offset":4909},"indent":[]}},{"type":"text","value":". Using an arrow function for ","position":{"start":{"line":126,"column":174,"offset":4909},"end":{"line":126,"column":204,"offset":4939},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":126,"column":204,"offset":4939},"end":{"line":126,"column":218,"offset":4953},"indent":[]}},{"type":"text","value":" has the expected result:","position":{"start":{"line":126,"column":218,"offset":4953},"end":{"line":126,"column":243,"offset":4978},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":4736},"end":{"line":126,"column":243,"offset":4978},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":128,"column":1,"offset":4982},"end":{"line":138,"column":4,"offset":5131},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For this reason, throughout the book we use arrow functions for all anonymous functions.","position":{"start":{"line":140,"column":1,"offset":5135},"end":{"line":140,"column":89,"offset":5223},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5135},"end":{"line":140,"column":89,"offset":5223},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Modules","position":{"start":{"line":142,"column":4,"offset":5230},"end":{"line":142,"column":11,"offset":5237},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5227},"end":{"line":142,"column":11,"offset":5237},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ES6 formally supports modules using the ","position":{"start":{"line":144,"column":1,"offset":5241},"end":{"line":144,"column":41,"offset":5281},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":144,"column":41,"offset":5281},"end":{"line":144,"column":49,"offset":5289},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":144,"column":49,"offset":5289},"end":{"line":144,"column":50,"offset":5290},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":144,"column":50,"offset":5290},"end":{"line":144,"column":58,"offset":5298},"indent":[]}},{"type":"text","value":" syntax.","position":{"start":{"line":144,"column":58,"offset":5298},"end":{"line":144,"column":66,"offset":5306},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5241},"end":{"line":144,"column":66,"offset":5306},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Named exports","position":{"start":{"line":146,"column":3,"offset":5312},"end":{"line":146,"column":16,"offset":5325},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5310},"end":{"line":146,"column":18,"offset":5327},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5310},"end":{"line":146,"column":18,"offset":5327},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inside any file, you can use ","position":{"start":{"line":148,"column":1,"offset":5331},"end":{"line":148,"column":30,"offset":5360},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":148,"column":30,"offset":5360},"end":{"line":148,"column":38,"offset":5368},"indent":[]}},{"type":"text","value":" to specify a variable the module should expose. Here's an example of a file that exports two functions:","position":{"start":{"line":148,"column":38,"offset":5368},"end":{"line":148,"column":142,"offset":5472},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":5331},"end":{"line":148,"column":142,"offset":5472},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const sayHi = () => console.log('Hi!');\nexport const sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');","position":{"start":{"line":150,"column":1,"offset":5476},"end":{"line":155,"column":4,"offset":5641},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, anywhere we wanted to use these functions we could use ","position":{"start":{"line":157,"column":1,"offset":5645},"end":{"line":157,"column":61,"offset":5705},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":157,"column":61,"offset":5705},"end":{"line":157,"column":69,"offset":5713},"indent":[]}},{"type":"text","value":". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:","position":{"start":{"line":157,"column":69,"offset":5713},"end":{"line":157,"column":226,"offset":5870},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5645},"end":{"line":157,"column":226,"offset":5870},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();","position":{"start":{"line":159,"column":1,"offset":5874},"end":{"line":164,"column":4,"offset":5953},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Importantly, the function that was ","position":{"start":{"line":166,"column":1,"offset":5957},"end":{"line":166,"column":36,"offset":5992},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":166,"column":37,"offset":5993},"end":{"line":166,"column":40,"offset":5996},"indent":[]}}],"position":{"start":{"line":166,"column":36,"offset":5992},"end":{"line":166,"column":41,"offset":5997},"indent":[]}},{"type":"text","value":" exported ","position":{"start":{"line":166,"column":41,"offset":5997},"end":{"line":166,"column":51,"offset":6007},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":166,"column":51,"offset":6007},"end":{"line":166,"column":53,"offset":6009},"indent":[]}},{"type":"inlineCode","value":"saySomething","position":{"start":{"line":166,"column":53,"offset":6009},"end":{"line":166,"column":67,"offset":6023},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":166,"column":67,"offset":6023},"end":{"line":166,"column":69,"offset":6025},"indent":[]}},{"type":"text","value":" is unavailable outside of the module.","position":{"start":{"line":166,"column":69,"offset":6025},"end":{"line":166,"column":107,"offset":6063},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5957},"end":{"line":166,"column":107,"offset":6063},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Also note that we supply a ","position":{"start":{"line":168,"column":1,"offset":6067},"end":{"line":168,"column":28,"offset":6094},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"relative path","position":{"start":{"line":168,"column":30,"offset":6096},"end":{"line":168,"column":43,"offset":6109},"indent":[]}}],"position":{"start":{"line":168,"column":28,"offset":6094},"end":{"line":168,"column":45,"offset":6111},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":168,"column":45,"offset":6111},"end":{"line":168,"column":49,"offset":6115},"indent":[]}},{"type":"inlineCode","value":"from","position":{"start":{"line":168,"column":49,"offset":6115},"end":{"line":168,"column":55,"offset":6121},"indent":[]}},{"type":"text","value":", indicating that the ES6 module is a local file as opposed to an npm package.","position":{"start":{"line":168,"column":55,"offset":6121},"end":{"line":168,"column":133,"offset":6199},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":6067},"end":{"line":168,"column":133,"offset":6199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of inserting an ","position":{"start":{"line":170,"column":1,"offset":6203},"end":{"line":170,"column":25,"offset":6227},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":170,"column":25,"offset":6227},"end":{"line":170,"column":33,"offset":6235},"indent":[]}},{"type":"text","value":" before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:","position":{"start":{"line":170,"column":33,"offset":6235},"end":{"line":170,"column":151,"offset":6353},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":6203},"end":{"line":170,"column":151,"offset":6353},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nexport { sayHi, sayBye };","position":{"start":{"line":172,"column":1,"offset":6357},"end":{"line":179,"column":4,"offset":6537},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ","position":{"start":{"line":181,"column":1,"offset":6541},"end":{"line":181,"column":116,"offset":6656},"indent":[]}},{"type":"inlineCode","value":"import * as <Namespace>","position":{"start":{"line":181,"column":116,"offset":6656},"end":{"line":181,"column":141,"offset":6681},"indent":[]}},{"type":"text","value":" syntax:","position":{"start":{"line":181,"column":141,"offset":6681},"end":{"line":181,"column":149,"offset":6689},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":6541},"end":{"line":181,"column":149,"offset":6689},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();","position":{"start":{"line":183,"column":1,"offset":6693},"end":{"line":191,"column":4,"offset":6820},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Default export","position":{"start":{"line":193,"column":3,"offset":6826},"end":{"line":193,"column":17,"offset":6840},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":6824},"end":{"line":193,"column":19,"offset":6842},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":6824},"end":{"line":193,"column":19,"offset":6842},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The other type of export is a default export. A module can only contain one default export:","position":{"start":{"line":195,"column":1,"offset":6846},"end":{"line":195,"column":92,"offset":6937},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":6846},"end":{"line":195,"column":92,"offset":6937},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;","position":{"start":{"line":197,"column":1,"offset":6941},"end":{"line":206,"column":4,"offset":7161},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:","position":{"start":{"line":208,"column":1,"offset":7165},"end":{"line":208,"column":148,"offset":7312},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":7165},"end":{"line":208,"column":148,"offset":7312},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();","position":{"start":{"line":210,"column":1,"offset":7316},"end":{"line":215,"column":4,"offset":7407},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ","position":{"start":{"line":217,"column":1,"offset":7411},"end":{"line":217,"column":107,"offset":7517},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":217,"column":107,"offset":7517},"end":{"line":217,"column":118,"offset":7528},"indent":[]}},{"type":"text","value":", you can import ","position":{"start":{"line":217,"column":118,"offset":7528},"end":{"line":217,"column":135,"offset":7545},"indent":[]}},{"type":"inlineCode","value":"ReactDOM","position":{"start":{"line":217,"column":135,"offset":7545},"end":{"line":217,"column":145,"offset":7555},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":217,"column":145,"offset":7555},"end":{"line":217,"column":146,"offset":7556},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":217,"column":146,"offset":7556},"end":{"line":217,"column":148,"offset":7558},"indent":[]}},{"type":"text","value":"a default export","position":{"start":{"line":217,"column":148,"offset":7558},"end":{"line":217,"column":164,"offset":7574},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":217,"column":164,"offset":7574},"end":{"line":217,"column":166,"offset":7576},"indent":[]}},{"type":"text","value":" like this:","position":{"start":{"line":217,"column":166,"offset":7576},"end":{"line":217,"column":177,"offset":7587},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":7411},"end":{"line":217,"column":177,"offset":7587},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import ReactDOM from 'react-dom';\n\nReactDOM.render();","position":{"start":{"line":219,"column":1,"offset":7591},"end":{"line":223,"column":4,"offset":7658},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or, if you're only going to use the ","position":{"start":{"line":225,"column":1,"offset":7662},"end":{"line":225,"column":37,"offset":7698},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":225,"column":37,"offset":7698},"end":{"line":225,"column":47,"offset":7708},"indent":[]}},{"type":"text","value":" function, you can import the named ","position":{"start":{"line":225,"column":47,"offset":7708},"end":{"line":225,"column":83,"offset":7744},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":225,"column":83,"offset":7744},"end":{"line":225,"column":93,"offset":7754},"indent":[]}},{"type":"text","value":" function like this:","position":{"start":{"line":225,"column":93,"offset":7754},"end":{"line":225,"column":113,"offset":7774},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7662},"end":{"line":225,"column":113,"offset":7774},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { render } from 'react-dom';\n\nrender();","position":{"start":{"line":227,"column":1,"offset":7778},"end":{"line":231,"column":4,"offset":7838},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To achieve this flexibility, the export implementation for ","position":{"start":{"line":233,"column":1,"offset":7842},"end":{"line":233,"column":60,"offset":7901},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":233,"column":60,"offset":7901},"end":{"line":233,"column":71,"offset":7912},"indent":[]}},{"type":"text","value":" looks something like this:","position":{"start":{"line":233,"column":71,"offset":7912},"end":{"line":233,"column":98,"offset":7939},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":7842},"end":{"line":233,"column":98,"offset":7939},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const render = (component, target) => {};\n\nconst ReactDOM = {\n    render\n};\n\nexport default ReactDOM;","position":{"start":{"line":235,"column":1,"offset":7943},"end":{"line":243,"column":4,"offset":8069},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to play around with the module syntax, check out the folder ","position":{"start":{"line":245,"column":1,"offset":8073},"end":{"line":245,"column":73,"offset":8145},"indent":[]}},{"type":"inlineCode","value":"code/webpack/es6-modules","position":{"start":{"line":245,"column":73,"offset":8145},"end":{"line":245,"column":99,"offset":8171},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":245,"column":99,"offset":8171},"end":{"line":245,"column":100,"offset":8172},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":8073},"end":{"line":245,"column":100,"offset":8172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more reading on ES6 modules, see this article from Mozilla: \"","position":{"start":{"line":247,"column":1,"offset":8176},"end":{"line":247,"column":66,"offset":8241},"indent":[]}},{"type":"link","title":null,"url":"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/","children":[{"type":"text","value":"ES6 in Depth: Modules","position":{"start":{"line":247,"column":67,"offset":8242},"end":{"line":247,"column":88,"offset":8263},"indent":[]}}],"position":{"start":{"line":247,"column":66,"offset":8241},"end":{"line":247,"column":146,"offset":8321},"indent":[]}},{"type":"text","value":"\".","position":{"start":{"line":247,"column":146,"offset":8321},"end":{"line":247,"column":148,"offset":8323},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":8176},"end":{"line":247,"column":148,"offset":8323},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":249,"column":4,"offset":8330},"end":{"line":249,"column":21,"offset":8347},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":8327},"end":{"line":249,"column":21,"offset":8347},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":251,"column":1,"offset":8351},"end":{"line":251,"column":8,"offset":8358},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":251,"column":8,"offset":8358},"end":{"line":251,"column":25,"offset":8375},"indent":[]}},{"type":"text","value":" often throughout the book. We use it in areas where we want to create a modified version of an existing object.","position":{"start":{"line":251,"column":25,"offset":8375},"end":{"line":251,"column":137,"offset":8487},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":8351},"end":{"line":251,"column":137,"offset":8487},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":253,"column":1,"offset":8491},"end":{"line":253,"column":18,"offset":8508},"indent":[]}},{"type":"text","value":" accepts any number of objects as arguments. When the function receives two arguments, it ","position":{"start":{"line":253,"column":18,"offset":8508},"end":{"line":253,"column":108,"offset":8598},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"copies","position":{"start":{"line":253,"column":109,"offset":8599},"end":{"line":253,"column":115,"offset":8605},"indent":[]}}],"position":{"start":{"line":253,"column":108,"offset":8598},"end":{"line":253,"column":116,"offset":8606},"indent":[]}},{"type":"text","value":" the properties of the second object onto the first, like so:","position":{"start":{"line":253,"column":116,"offset":8606},"end":{"line":253,"column":177,"offset":8667},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":8491},"end":{"line":253,"column":177,"offset":8667},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);","position":{"start":{"line":255,"column":1,"offset":8671},"end":{"line":260,"column":4,"offset":8802},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is idiomatic to pass in three arguments to ","position":{"start":{"line":262,"column":1,"offset":8806},"end":{"line":262,"column":47,"offset":8852},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":262,"column":47,"offset":8852},"end":{"line":262,"column":64,"offset":8869},"indent":[]}},{"type":"text","value":". The first argument is a new JavaScript object, the one that ","position":{"start":{"line":262,"column":64,"offset":8869},"end":{"line":262,"column":126,"offset":8931},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":262,"column":126,"offset":8931},"end":{"line":262,"column":143,"offset":8948},"indent":[]}},{"type":"text","value":" will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:","position":{"start":{"line":262,"column":143,"offset":8948},"end":{"line":262,"column":280,"offset":9085},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":8806},"end":{"line":262,"column":280,"offset":9085},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const coffeeWithMilk = Object.assign({}, coffee, { milk: true });","position":{"start":{"line":264,"column":1,"offset":9089},"end":{"line":266,"column":4,"offset":9166},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":268,"column":1,"offset":9170},"end":{"line":268,"column":18,"offset":9187},"indent":[]}},{"type":"text","value":" is a handy method for working with \"immutable\" JavaScript objects.","position":{"start":{"line":268,"column":18,"offset":9187},"end":{"line":268,"column":85,"offset":9254},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":9170},"end":{"line":268,"column":85,"offset":9254},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Template literals","position":{"start":{"line":270,"column":4,"offset":9261},"end":{"line":270,"column":21,"offset":9278},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":9258},"end":{"line":270,"column":21,"offset":9278},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5 JavaScript, you'd interpolate variables into strings like this:","position":{"start":{"line":272,"column":1,"offset":9282},"end":{"line":272,"column":71,"offset":9352},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":9282},"end":{"line":272,"column":71,"offset":9352},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"var greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';","position":{"start":{"line":274,"column":1,"offset":9356},"end":{"line":276,"column":4,"offset":9442},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6 template literals, we can create the same string like this:","position":{"start":{"line":278,"column":1,"offset":9446},"end":{"line":278,"column":69,"offset":9514},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":9446},"end":{"line":278,"column":69,"offset":9514},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const greeting = `Hello, ${user}! It is ${degF} degrees outside.`;","position":{"start":{"line":280,"column":1,"offset":9518},"end":{"line":282,"column":4,"offset":9596},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The spread operator ","position":{"start":{"line":284,"column":4,"offset":9603},"end":{"line":284,"column":24,"offset":9623},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":284,"column":24,"offset":9623},"end":{"line":284,"column":26,"offset":9625},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":284,"column":26,"offset":9625},"end":{"line":284,"column":31,"offset":9630},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":284,"column":31,"offset":9630},"end":{"line":284,"column":33,"offset":9632},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":9600},"end":{"line":284,"column":33,"offset":9632},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In arrays, the ellipsis ","position":{"start":{"line":286,"column":1,"offset":9636},"end":{"line":286,"column":25,"offset":9660},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":286,"column":25,"offset":9660},"end":{"line":286,"column":30,"offset":9665},"indent":[]}},{"type":"text","value":" operator will ","position":{"start":{"line":286,"column":30,"offset":9665},"end":{"line":286,"column":45,"offset":9680},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"expand","position":{"start":{"line":286,"column":46,"offset":9681},"end":{"line":286,"column":52,"offset":9687},"indent":[]}}],"position":{"start":{"line":286,"column":45,"offset":9680},"end":{"line":286,"column":53,"offset":9688},"indent":[]}},{"type":"text","value":" the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.","position":{"start":{"line":286,"column":53,"offset":9688},"end":{"line":286,"column":200,"offset":9835},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":9636},"end":{"line":286,"column":200,"offset":9835},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example:","position":{"start":{"line":288,"column":1,"offset":9839},"end":{"line":288,"column":20,"offset":9858},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":9839},"end":{"line":288,"column":20,"offset":9858},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);","position":{"start":{"line":290,"column":1,"offset":9862},"end":{"line":296,"column":4,"offset":9974},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice how this is different than if we wrote:","position":{"start":{"line":298,"column":1,"offset":9978},"end":{"line":298,"column":47,"offset":10024},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":9978},"end":{"line":298,"column":47,"offset":10024},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const d = [a, b, 7, 8, 9];\nconsole.log(d);","position":{"start":{"line":300,"column":1,"offset":10028},"end":{"line":303,"column":4,"offset":10083},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Enhanced object literals","position":{"start":{"line":305,"column":4,"offset":10090},"end":{"line":305,"column":28,"offset":10114},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":10087},"end":{"line":305,"column":28,"offset":10114},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, all objects were required to have explicit key and value declarations:","position":{"start":{"line":307,"column":1,"offset":10118},"end":{"line":307,"column":79,"offset":10196},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":10118},"end":{"line":307,"column":79,"offset":10196},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const explicit = {\n    getState: getState,\n    dispatch: dispatch\n};","position":{"start":{"line":309,"column":1,"offset":10200},"end":{"line":314,"column":4,"offset":10283},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, you can use this terser syntax whenever the property name and variable name are the same:","position":{"start":{"line":316,"column":1,"offset":10287},"end":{"line":316,"column":98,"offset":10384},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":10287},"end":{"line":316,"column":98,"offset":10384},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const implicit = {\n    getState,\n    dispatch\n};","position":{"start":{"line":318,"column":1,"offset":10388},"end":{"line":323,"column":4,"offset":10451},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.","position":{"start":{"line":325,"column":1,"offset":10455},"end":{"line":325,"column":161,"offset":10615},"indent":[]}}],"position":{"start":{"line":325,"column":1,"offset":10455},"end":{"line":325,"column":161,"offset":10615},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Default arguments","position":{"start":{"line":327,"column":4,"offset":10622},"end":{"line":327,"column":21,"offset":10639},"indent":[]}}],"position":{"start":{"line":327,"column":1,"offset":10619},"end":{"line":327,"column":21,"offset":10639},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6, you can specify a default value for an argument in the case that it is ","position":{"start":{"line":329,"column":1,"offset":10643},"end":{"line":329,"column":82,"offset":10724},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":329,"column":82,"offset":10724},"end":{"line":329,"column":93,"offset":10735},"indent":[]}},{"type":"text","value":" when the function is called.","position":{"start":{"line":329,"column":93,"offset":10735},"end":{"line":329,"column":122,"offset":10764},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":10643},"end":{"line":329,"column":122,"offset":10764},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This:","position":{"start":{"line":331,"column":1,"offset":10768},"end":{"line":331,"column":6,"offset":10773},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":10768},"end":{"line":331,"column":6,"offset":10773},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}","position":{"start":{"line":333,"column":1,"offset":10777},"end":{"line":340,"column":4,"offset":10894},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Can be written as this:","position":{"start":{"line":342,"column":1,"offset":10898},"end":{"line":342,"column":24,"offset":10921},"indent":[]}}],"position":{"start":{"line":342,"column":1,"offset":10898},"end":{"line":342,"column":24,"offset":10921},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function divide(a, b = 1) {\n    return a / b;\n}","position":{"start":{"line":344,"column":1,"offset":10925},"end":{"line":348,"column":4,"offset":10986},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In both cases, using the function looks like this:","position":{"start":{"line":350,"column":1,"offset":10990},"end":{"line":350,"column":51,"offset":11040},"indent":[]}}],"position":{"start":{"line":350,"column":1,"offset":10990},"end":{"line":350,"column":51,"offset":11040},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);","position":{"start":{"line":352,"column":1,"offset":11044},"end":{"line":358,"column":4,"offset":11111},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Whenever the argument ","position":{"start":{"line":360,"column":1,"offset":11115},"end":{"line":360,"column":23,"offset":11137},"indent":[]}},{"type":"inlineCode","value":"b","position":{"start":{"line":360,"column":23,"offset":11137},"end":{"line":360,"column":26,"offset":11140},"indent":[]}},{"type":"text","value":" in the example above is ","position":{"start":{"line":360,"column":26,"offset":11140},"end":{"line":360,"column":51,"offset":11165},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":360,"column":51,"offset":11165},"end":{"line":360,"column":62,"offset":11176},"indent":[]}},{"type":"text","value":", the default argument is used. Note that ","position":{"start":{"line":360,"column":62,"offset":11176},"end":{"line":360,"column":104,"offset":11218},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":360,"column":104,"offset":11218},"end":{"line":360,"column":110,"offset":11224},"indent":[]}},{"type":"text","value":" will not use the default argument:","position":{"start":{"line":360,"column":110,"offset":11224},"end":{"line":360,"column":145,"offset":11259},"indent":[]}}],"position":{"start":{"line":360,"column":1,"offset":11115},"end":{"line":360,"column":145,"offset":11259},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, null);","position":{"start":{"line":362,"column":1,"offset":11263},"end":{"line":364,"column":4,"offset":11292},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Destructuring assignments","position":{"start":{"line":366,"column":4,"offset":11299},"end":{"line":366,"column":29,"offset":11324},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":11296},"end":{"line":366,"column":29,"offset":11324},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For arrays","position":{"start":{"line":368,"column":5,"offset":11332},"end":{"line":368,"column":15,"offset":11342},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":11328},"end":{"line":368,"column":15,"offset":11342},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, extracting and assigning multiple elements from an array looked like this:","position":{"start":{"line":370,"column":1,"offset":11346},"end":{"line":370,"column":83,"offset":11428},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":11346},"end":{"line":370,"column":83,"offset":11428},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];","position":{"start":{"line":372,"column":1,"offset":11432},"end":{"line":376,"column":4,"offset":11541},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, we can use the destructuring syntax to accomplish the same task like this:","position":{"start":{"line":378,"column":1,"offset":11545},"end":{"line":378,"column":83,"offset":11627},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":11545},"end":{"line":378,"column":83,"offset":11627},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const [veg1, veg2] = ['asparagus', 'broccoli', 'onion'];\nconsole.log(veg1);\nconsole.log(veg2);","position":{"start":{"line":380,"column":1,"offset":11631},"end":{"line":384,"column":4,"offset":11739},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ","position":{"start":{"line":386,"column":1,"offset":11743},"end":{"line":386,"column":134,"offset":11876},"indent":[]}},{"type":"inlineCode","value":"'onion'","position":{"start":{"line":386,"column":134,"offset":11876},"end":{"line":386,"column":143,"offset":11885},"indent":[]}},{"type":"text","value":" is ignored and has no variable bound to it.","position":{"start":{"line":386,"column":143,"offset":11885},"end":{"line":386,"column":187,"offset":11929},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":11743},"end":{"line":386,"column":187,"offset":11929},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For objects","position":{"start":{"line":388,"column":5,"offset":11937},"end":{"line":388,"column":16,"offset":11948},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":11933},"end":{"line":388,"column":16,"offset":11948},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can do something similar for extracting object properties into variables:","position":{"start":{"line":390,"column":1,"offset":11952},"end":{"line":390,"column":77,"offset":12028},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":11952},"end":{"line":390,"column":77,"offset":12028},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const smoothie = {\n    fats: ['avocado', 'peanut butter', 'greek yogurt'],\n    liquids: ['almond milk'],\n    greens: ['spinach'],\n    fruits: ['blueberry', 'banana']\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);","position":{"start":{"line":392,"column":1,"offset":12032},"end":{"line":404,"column":4,"offset":12305},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameter context matching","position":{"start":{"line":406,"column":5,"offset":12313},"end":{"line":406,"column":31,"offset":12339},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":12309},"end":{"line":406,"column":31,"offset":12339},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:","position":{"start":{"line":408,"column":1,"offset":12343},"end":{"line":408,"column":121,"offset":12463},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":12343},"end":{"line":408,"column":121,"offset":12463},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const containsSpinach = ({ greens }) => {\n    if (greens.find((g) => g === 'spinach')) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\ncontainsSpinach(smoothie);","position":{"start":{"line":410,"column":1,"offset":12467},"end":{"line":420,"column":4,"offset":12668},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We do this often with functional React components:","position":{"start":{"line":422,"column":1,"offset":12672},"end":{"line":422,"column":51,"offset":12722},"indent":[]}}],"position":{"start":{"line":422,"column":1,"offset":12672},"end":{"line":422,"column":51,"offset":12722},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const IngredientList = ({ ingredients, onClick }) => (\n    <ul className=\"IngredientList\">\n        {ingredients.map((i) => (\n            <li key={i.id} onClick={() => onClick(i.id)} className=\"item\">\n                {i.name}\n            </li>\n        ))}\n    </ul>\n);","position":{"start":{"line":424,"column":1,"offset":12726},"end":{"line":434,"column":4,"offset":13013},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here, we use destructuring to extract the props into variables ","position":{"start":{"line":436,"column":1,"offset":13017},"end":{"line":436,"column":64,"offset":13080},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":436,"column":64,"offset":13080},"end":{"line":436,"column":66,"offset":13082},"indent":[]}},{"type":"inlineCode","value":"ingredients","position":{"start":{"line":436,"column":66,"offset":13082},"end":{"line":436,"column":79,"offset":13095},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":436,"column":79,"offset":13095},"end":{"line":436,"column":84,"offset":13100},"indent":[]}},{"type":"inlineCode","value":"onClick","position":{"start":{"line":436,"column":84,"offset":13100},"end":{"line":436,"column":93,"offset":13109},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":436,"column":93,"offset":13109},"end":{"line":436,"column":95,"offset":13111},"indent":[]}},{"type":"text","value":" that we then use inside the component's function body.","position":{"start":{"line":436,"column":95,"offset":13111},"end":{"line":436,"column":150,"offset":13166},"indent":[]}}],"position":{"start":{"line":436,"column":1,"offset":13017},"end":{"line":436,"column":150,"offset":13166},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":437,"column":1,"offset":13168}}}}