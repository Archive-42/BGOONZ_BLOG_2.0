{"expireTime":9007200882684545000,"key":"transformer-remark-markdown-ast-27799d4a3a601222c9b5947730547a3a--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Go To Sitemap: ","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":18,"offset":18},"indent":[]}},{"type":"link","title":null,"url":"","children":[{"type":"text","value":"Go Now -->","position":{"start":{"line":2,"column":19,"offset":19},"end":{"line":2,"column":29,"offset":29},"indent":[]}}],"position":{"start":{"line":2,"column":18,"offset":18},"end":{"line":2,"column":32,"offset":32},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":32,"offset":32},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Doc Websites & Repos","position":{"start":{"line":4,"column":4,"offset":37},"end":{"line":4,"column":24,"offset":57},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":34},"end":{"line":4,"column":24,"offset":57},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/PYTHON_PRAC","children":[{"type":"text","value":"Python Practice","position":{"start":{"line":6,"column":6,"offset":64},"end":{"line":6,"column":21,"offset":79},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":63},"end":{"line":6,"column":61,"offset":119},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":63},"end":{"line":6,"column":61,"offset":119},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":59},"end":{"line":6,"column":61,"offset":119},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://lambda-resources.netlify.app/","children":[{"type":"text","value":"Lambda Bootcamp Website","position":{"start":{"line":7,"column":6,"offset":125},"end":{"line":7,"column":29,"offset":148},"indent":[]}}],"position":{"start":{"line":7,"column":5,"offset":124},"end":{"line":7,"column":69,"offset":188},"indent":[]}}],"position":{"start":{"line":7,"column":5,"offset":124},"end":{"line":7,"column":69,"offset":188},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":120},"end":{"line":7,"column":69,"offset":188},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/React_Notes_V3","children":[{"type":"text","value":"React Notes","position":{"start":{"line":8,"column":6,"offset":194},"end":{"line":8,"column":17,"offset":205},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":193},"end":{"line":8,"column":60,"offset":248},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":193},"end":{"line":8,"column":60,"offset":248},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":189},"end":{"line":8,"column":60,"offset":248},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Project-Showcase","children":[{"type":"text","value":"Project Showcase","position":{"start":{"line":9,"column":6,"offset":254},"end":{"line":9,"column":22,"offset":270},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":253},"end":{"line":9,"column":67,"offset":315},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":253},"end":{"line":9,"column":67,"offset":315},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":249},"end":{"line":9,"column":67,"offset":315},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/DS-ALGO-OFFICIAL","children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":10,"column":6,"offset":321},"end":{"line":10,"column":34,"offset":349},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":320},"end":{"line":10,"column":79,"offset":394},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":320},"end":{"line":10,"column":79,"offset":394},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":316},"end":{"line":10,"column":79,"offset":394},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Lambda-Resource-Static-Assets","children":[{"type":"text","value":"Lambda Site Static Content Server","position":{"start":{"line":11,"column":6,"offset":400},"end":{"line":11,"column":39,"offset":433},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":399},"end":{"line":11,"column":97,"offset":491},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":399},"end":{"line":11,"column":97,"offset":491},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":395},"end":{"line":11,"column":97,"offset":491},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/mini-project-showcase","children":[{"type":"text","value":"Mini-Project Showcase","position":{"start":{"line":12,"column":6,"offset":497},"end":{"line":12,"column":27,"offset":518},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":496},"end":{"line":12,"column":77,"offset":568},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":496},"end":{"line":12,"column":77,"offset":568},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":492},"end":{"line":12,"column":77,"offset":568},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Useful-Snippets-js","children":[{"type":"text","value":"Useful Snippets","position":{"start":{"line":13,"column":6,"offset":574},"end":{"line":13,"column":21,"offset":589},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":573},"end":{"line":13,"column":68,"offset":636},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":573},"end":{"line":13,"column":68,"offset":636},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":569},"end":{"line":13,"column":68,"offset":636},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Markdown-Templates","children":[{"type":"text","value":"Markdown Templates","position":{"start":{"line":14,"column":6,"offset":642},"end":{"line":14,"column":24,"offset":660},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":641},"end":{"line":14,"column":71,"offset":707},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":641},"end":{"line":14,"column":71,"offset":707},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":637},"end":{"line":14,"column":71,"offset":707},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/zumzi-chat-messenger","children":[{"type":"text","value":"Zumzi Video Conferencing App (mesibo api backend)","position":{"start":{"line":15,"column":6,"offset":713},"end":{"line":15,"column":55,"offset":762},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":712},"end":{"line":15,"column":104,"offset":811},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":712},"end":{"line":15,"column":104,"offset":811},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":708},"end":{"line":15,"column":104,"offset":811},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":59},"end":{"line":15,"column":104,"offset":811},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Core Concepts","position":{"start":{"line":17,"column":3,"offset":815},"end":{"line":17,"column":16,"offset":828},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":813},"end":{"line":17,"column":16,"offset":828},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"index","position":{"start":{"line":19,"column":3,"offset":832},"end":{"line":19,"column":8,"offset":837},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":830},"end":{"line":19,"column":8,"offset":837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.","position":{"start":{"line":21,"column":1,"offset":839},"end":{"line":21,"column":175,"offset":1013},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":839},"end":{"line":21,"column":175,"offset":1013},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ","position":{"start":{"line":23,"column":1,"offset":1015},"end":{"line":23,"column":319,"offset":1333},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/","children":[{"type":"text","value":"Mozilla Developer Network's website","position":{"start":{"line":23,"column":320,"offset":1334},"end":{"line":23,"column":355,"offset":1369},"indent":[]}}],"position":{"start":{"line":23,"column":319,"offset":1333},"end":{"line":23,"column":388,"offset":1402},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":23,"column":388,"offset":1402},"end":{"line":23,"column":389,"offset":1403},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":23,"column":389,"offset":1403},"end":{"line":23,"column":391,"offset":1405},"indent":[]}},{"type":"text","value":"MDN","position":{"start":{"line":23,"column":391,"offset":1405},"end":{"line":23,"column":394,"offset":1408},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":23,"column":394,"offset":1408},"end":{"line":23,"column":396,"offset":1410},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":23,"column":396,"offset":1410},"end":{"line":23,"column":397,"offset":1411},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1015},"end":{"line":23,"column":397,"offset":1411},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prefer ","position":{"start":{"line":25,"column":4,"offset":1416},"end":{"line":25,"column":11,"offset":1423},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":25,"column":11,"offset":1423},"end":{"line":25,"column":18,"offset":1430},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":25,"column":18,"offset":1430},"end":{"line":25,"column":23,"offset":1435},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":25,"column":23,"offset":1435},"end":{"line":25,"column":28,"offset":1440},"indent":[]}},{"type":"text","value":" over ","position":{"start":{"line":25,"column":28,"offset":1440},"end":{"line":25,"column":34,"offset":1446},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":25,"column":34,"offset":1446},"end":{"line":25,"column":39,"offset":1451},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1413},"end":{"line":25,"column":39,"offset":1451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ","position":{"start":{"line":27,"column":1,"offset":1453},"end":{"line":27,"column":99,"offset":1551},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":27,"column":99,"offset":1551},"end":{"line":27,"column":104,"offset":1556},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":27,"column":104,"offset":1556},"end":{"line":27,"column":105,"offset":1557},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1453},"end":{"line":27,"column":105,"offset":1557},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar myVariable = 5;","position":{"start":{"line":29,"column":1,"offset":1559},"end":{"line":31,"column":4,"offset":1587},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Both the ","position":{"start":{"line":33,"column":1,"offset":1589},"end":{"line":33,"column":10,"offset":1598},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":33,"column":10,"offset":1598},"end":{"line":33,"column":17,"offset":1605},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":33,"column":17,"offset":1605},"end":{"line":33,"column":22,"offset":1610},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":33,"column":22,"offset":1610},"end":{"line":33,"column":27,"offset":1615},"indent":[]}},{"type":"text","value":" statements also declare variables. They were introduced in ES6.","position":{"start":{"line":33,"column":27,"offset":1615},"end":{"line":33,"column":91,"offset":1679},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1589},"end":{"line":33,"column":91,"offset":1679},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":35,"column":1,"offset":1681},"end":{"line":35,"column":5,"offset":1685},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":35,"column":5,"offset":1685},"end":{"line":35,"column":12,"offset":1692},"indent":[]}},{"type":"text","value":" in cases where a variable is never re-assigned. Using ","position":{"start":{"line":35,"column":12,"offset":1692},"end":{"line":35,"column":67,"offset":1747},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":35,"column":67,"offset":1747},"end":{"line":35,"column":74,"offset":1754},"indent":[]}},{"type":"text","value":" makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.","position":{"start":{"line":35,"column":74,"offset":1754},"end":{"line":35,"column":211,"offset":1891},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1681},"end":{"line":35,"column":211,"offset":1891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the variable will be re-assigned, use ","position":{"start":{"line":37,"column":1,"offset":1893},"end":{"line":37,"column":42,"offset":1934},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":37,"column":42,"offset":1934},"end":{"line":37,"column":47,"offset":1939},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":37,"column":47,"offset":1939},"end":{"line":37,"column":48,"offset":1940},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1893},"end":{"line":37,"column":48,"offset":1940},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We encourage the use of ","position":{"start":{"line":39,"column":1,"offset":1942},"end":{"line":39,"column":25,"offset":1966},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":39,"column":25,"offset":1966},"end":{"line":39,"column":32,"offset":1973},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":39,"column":32,"offset":1973},"end":{"line":39,"column":37,"offset":1978},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":39,"column":37,"offset":1978},"end":{"line":39,"column":42,"offset":1983},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":39,"column":42,"offset":1983},"end":{"line":39,"column":54,"offset":1995},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":39,"column":54,"offset":1995},"end":{"line":39,"column":59,"offset":2000},"indent":[]}},{"type":"text","value":". In addition to the restriction introduced by ","position":{"start":{"line":39,"column":59,"offset":2000},"end":{"line":39,"column":106,"offset":2047},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":39,"column":106,"offset":2047},"end":{"line":39,"column":113,"offset":2054},"indent":[]}},{"type":"text","value":", both ","position":{"start":{"line":39,"column":113,"offset":2054},"end":{"line":39,"column":120,"offset":2061},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":39,"column":120,"offset":2061},"end":{"line":39,"column":127,"offset":2068},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":39,"column":127,"offset":2068},"end":{"line":39,"column":132,"offset":2073},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":39,"column":132,"offset":2073},"end":{"line":39,"column":137,"offset":2078},"indent":[]}},{"type":"text","value":" are ","position":{"start":{"line":39,"column":137,"offset":2078},"end":{"line":39,"column":142,"offset":2083},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"block scoped","position":{"start":{"line":39,"column":143,"offset":2084},"end":{"line":39,"column":155,"offset":2096},"indent":[]}}],"position":{"start":{"line":39,"column":142,"offset":2083},"end":{"line":39,"column":156,"offset":2097},"indent":[]}},{"type":"text","value":" as opposed to ","position":{"start":{"line":39,"column":156,"offset":2097},"end":{"line":39,"column":171,"offset":2112},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function scoped","position":{"start":{"line":39,"column":172,"offset":2113},"end":{"line":39,"column":187,"offset":2128},"indent":[]}}],"position":{"start":{"line":39,"column":171,"offset":2112},"end":{"line":39,"column":188,"offset":2129},"indent":[]}},{"type":"text","value":". This scoping can help avoid unexpected bugs.","position":{"start":{"line":39,"column":188,"offset":2129},"end":{"line":39,"column":234,"offset":2175},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1942},"end":{"line":39,"column":234,"offset":2175},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":41,"column":4,"offset":2180},"end":{"line":41,"column":19,"offset":2195},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2177},"end":{"line":41,"column":19,"offset":2195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:","position":{"start":{"line":43,"column":1,"offset":2197},"end":{"line":43,"column":121,"offset":2317},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2197},"end":{"line":43,"column":121,"offset":2317},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];","position":{"start":{"line":45,"column":1,"offset":2319},"end":{"line":50,"column":4,"offset":2417},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:","position":{"start":{"line":52,"column":1,"offset":2419},"end":{"line":52,"column":116,"offset":2534},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2419},"end":{"line":52,"column":116,"offset":2534},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations = cities.map((city) => {\n    const popMM = (city.pop / 1000000).toFixed(2);\n    return popMM + ' million';\n});\nconsole.log(formattedPopulations);","position":{"start":{"line":54,"column":1,"offset":2536},"end":{"line":60,"column":4,"offset":2718},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that we must also explicitly specify a ","position":{"start":{"line":62,"column":1,"offset":2720},"end":{"line":62,"column":45,"offset":2764},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":62,"column":45,"offset":2764},"end":{"line":62,"column":53,"offset":2772},"indent":[]}},{"type":"text","value":" for the function.","position":{"start":{"line":62,"column":53,"offset":2772},"end":{"line":62,"column":71,"offset":2790},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2720},"end":{"line":62,"column":71,"offset":2790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, if we write a function body that is only a single line ","position":{"start":{"line":64,"column":1,"offset":2792},"end":{"line":64,"column":65,"offset":2856},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":64,"column":65,"offset":2856},"end":{"line":64,"column":67,"offset":2858},"indent":[]}},{"type":"text","value":"or single expression","position":{"start":{"line":64,"column":67,"offset":2858},"end":{"line":64,"column":87,"offset":2878},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":64,"column":87,"offset":2878},"end":{"line":64,"column":89,"offset":2880},"indent":[]}},{"type":"text","value":" we can use parentheses to delimit it:","position":{"start":{"line":64,"column":89,"offset":2880},"end":{"line":64,"column":127,"offset":2918},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2792},"end":{"line":64,"column":127,"offset":2918},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations2 = cities.map((city) => (city.pop / 1000000).toFixed(2) + ' million');","position":{"start":{"line":66,"column":1,"offset":2920},"end":{"line":68,"column":4,"offset":3027},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notably, we don't use ","position":{"start":{"line":70,"column":1,"offset":3029},"end":{"line":70,"column":23,"offset":3051},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":70,"column":23,"offset":3051},"end":{"line":70,"column":31,"offset":3059},"indent":[]}},{"type":"text","value":" as it's implied.","position":{"start":{"line":70,"column":31,"offset":3059},"end":{"line":70,"column":48,"offset":3076},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3029},"end":{"line":70,"column":48,"offset":3076},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Furthermore, if your function body is terse you can write it like so:","position":{"start":{"line":72,"column":1,"offset":3078},"end":{"line":72,"column":70,"offset":3147},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":3078},"end":{"line":72,"column":70,"offset":3147},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const pops = cities.map((city) => city.pop);\nconsole.log(pops);","position":{"start":{"line":74,"column":1,"offset":3149},"end":{"line":77,"column":4,"offset":3222},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:","position":{"start":{"line":79,"column":1,"offset":3224},"end":{"line":79,"column":110,"offset":3333},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":3224},"end":{"line":79,"column":110,"offset":3333},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const popsNoArrow = cities.map(function (city) {\n    return city.pop;\n});","position":{"start":{"line":81,"column":1,"offset":3335},"end":{"line":85,"column":4,"offset":3418},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Of greater benefit, though, is how arrow functions bind the ","position":{"start":{"line":87,"column":1,"offset":3420},"end":{"line":87,"column":61,"offset":3480},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":87,"column":61,"offset":3480},"end":{"line":87,"column":67,"offset":3486},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":87,"column":67,"offset":3486},"end":{"line":87,"column":75,"offset":3494},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":3420},"end":{"line":87,"column":75,"offset":3494},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The traditional JavaScript function declaration syntax ","position":{"start":{"line":89,"column":1,"offset":3496},"end":{"line":89,"column":56,"offset":3551},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":89,"column":56,"offset":3551},"end":{"line":89,"column":58,"offset":3553},"indent":[]}},{"type":"inlineCode","value":"function () {}","position":{"start":{"line":89,"column":58,"offset":3553},"end":{"line":89,"column":74,"offset":3569},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":89,"column":74,"offset":3569},"end":{"line":89,"column":76,"offset":3571},"indent":[]}},{"type":"text","value":" will bind ","position":{"start":{"line":89,"column":76,"offset":3571},"end":{"line":89,"column":87,"offset":3582},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":89,"column":87,"offset":3582},"end":{"line":89,"column":93,"offset":3588},"indent":[]}},{"type":"text","value":" in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:","position":{"start":{"line":89,"column":93,"offset":3588},"end":{"line":89,"column":211,"offset":3706},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3496},"end":{"line":89,"column":211,"offset":3706},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":91,"column":1,"offset":3708},"end":{"line":120,"column":4,"offset":4196},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The method ","position":{"start":{"line":122,"column":1,"offset":4198},"end":{"line":122,"column":12,"offset":4209},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":122,"column":12,"offset":4209},"end":{"line":122,"column":26,"offset":4223},"indent":[]}},{"type":"text","value":" iterates over ","position":{"start":{"line":122,"column":26,"offset":4223},"end":{"line":122,"column":41,"offset":4238},"indent":[]}},{"type":"inlineCode","value":"this.songs","position":{"start":{"line":122,"column":41,"offset":4238},"end":{"line":122,"column":53,"offset":4250},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":122,"column":53,"offset":4250},"end":{"line":122,"column":59,"offset":4256},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":122,"column":59,"offset":4256},"end":{"line":122,"column":70,"offset":4267},"indent":[]}},{"type":"text","value":". In this context, ","position":{"start":{"line":122,"column":70,"offset":4267},"end":{"line":122,"column":89,"offset":4286},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":122,"column":89,"offset":4286},"end":{"line":122,"column":95,"offset":4292},"indent":[]}},{"type":"text","value":" is bound to the object ","position":{"start":{"line":122,"column":95,"offset":4292},"end":{"line":122,"column":119,"offset":4316},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":122,"column":119,"offset":4316},"end":{"line":122,"column":121,"offset":4318},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":122,"column":121,"offset":4318},"end":{"line":122,"column":130,"offset":4327},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":122,"column":130,"offset":4327},"end":{"line":122,"column":132,"offset":4329},"indent":[]}},{"type":"text","value":" as expected. However, the anonymous function passed to ","position":{"start":{"line":122,"column":132,"offset":4329},"end":{"line":122,"column":188,"offset":4385},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":122,"column":188,"offset":4385},"end":{"line":122,"column":199,"offset":4396},"indent":[]}},{"type":"text","value":" binds its internal ","position":{"start":{"line":122,"column":199,"offset":4396},"end":{"line":122,"column":219,"offset":4416},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":122,"column":219,"offset":4416},"end":{"line":122,"column":225,"offset":4422},"indent":[]}},{"type":"text","value":" to the global object. As such, ","position":{"start":{"line":122,"column":225,"offset":4422},"end":{"line":122,"column":257,"offset":4454},"indent":[]}},{"type":"inlineCode","value":"this.printSong(song)","position":{"start":{"line":122,"column":257,"offset":4454},"end":{"line":122,"column":279,"offset":4476},"indent":[]}},{"type":"text","value":" calls the function declared at the top of the example, ","position":{"start":{"line":122,"column":279,"offset":4476},"end":{"line":122,"column":335,"offset":4532},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":122,"column":336,"offset":4533},"end":{"line":122,"column":339,"offset":4536},"indent":[]}}],"position":{"start":{"line":122,"column":335,"offset":4532},"end":{"line":122,"column":340,"offset":4537},"indent":[]}},{"type":"text","value":" the method on ","position":{"start":{"line":122,"column":340,"offset":4537},"end":{"line":122,"column":355,"offset":4552},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":122,"column":355,"offset":4552},"end":{"line":122,"column":364,"offset":4561},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":122,"column":364,"offset":4561},"end":{"line":122,"column":365,"offset":4562},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4198},"end":{"line":122,"column":365,"offset":4562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ","position":{"start":{"line":124,"column":1,"offset":4564},"end":{"line":124,"column":119,"offset":4682},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"capturing the ","position":{"start":{"line":124,"column":121,"offset":4684},"end":{"line":124,"column":135,"offset":4698},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":124,"column":135,"offset":4698},"end":{"line":124,"column":141,"offset":4704},"indent":[]}},{"type":"text","value":" value of the enclosing context","position":{"start":{"line":124,"column":141,"offset":4704},"end":{"line":124,"column":172,"offset":4735},"indent":[]}}],"position":{"start":{"line":124,"column":119,"offset":4682},"end":{"line":124,"column":174,"offset":4737},"indent":[]}},{"type":"text","value":". Using an arrow function for ","position":{"start":{"line":124,"column":174,"offset":4737},"end":{"line":124,"column":204,"offset":4767},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":124,"column":204,"offset":4767},"end":{"line":124,"column":218,"offset":4781},"indent":[]}},{"type":"text","value":" has the expected result:","position":{"start":{"line":124,"column":218,"offset":4781},"end":{"line":124,"column":243,"offset":4806},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":4564},"end":{"line":124,"column":243,"offset":4806},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":126,"column":1,"offset":4808},"end":{"line":136,"column":4,"offset":4947},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For this reason, throughout the book we use arrow functions for all anonymous functions.","position":{"start":{"line":138,"column":1,"offset":4949},"end":{"line":138,"column":89,"offset":5037},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":4949},"end":{"line":138,"column":89,"offset":5037},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Modules","position":{"start":{"line":140,"column":4,"offset":5042},"end":{"line":140,"column":11,"offset":5049},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5039},"end":{"line":140,"column":11,"offset":5049},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ES6 formally supports modules using the ","position":{"start":{"line":142,"column":1,"offset":5051},"end":{"line":142,"column":41,"offset":5091},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":142,"column":41,"offset":5091},"end":{"line":142,"column":49,"offset":5099},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":142,"column":49,"offset":5099},"end":{"line":142,"column":50,"offset":5100},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":142,"column":50,"offset":5100},"end":{"line":142,"column":58,"offset":5108},"indent":[]}},{"type":"text","value":" syntax.","position":{"start":{"line":142,"column":58,"offset":5108},"end":{"line":142,"column":66,"offset":5116},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5051},"end":{"line":142,"column":66,"offset":5116},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Named exports","position":{"start":{"line":144,"column":3,"offset":5120},"end":{"line":144,"column":16,"offset":5133},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5118},"end":{"line":144,"column":18,"offset":5135},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5118},"end":{"line":144,"column":18,"offset":5135},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inside any file, you can use ","position":{"start":{"line":146,"column":1,"offset":5137},"end":{"line":146,"column":30,"offset":5166},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":146,"column":30,"offset":5166},"end":{"line":146,"column":38,"offset":5174},"indent":[]}},{"type":"text","value":" to specify a variable the module should expose. Here's an example of a file that exports two functions:","position":{"start":{"line":146,"column":38,"offset":5174},"end":{"line":146,"column":142,"offset":5278},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":5137},"end":{"line":146,"column":142,"offset":5278},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const sayHi = () => console.log('Hi!');\nexport const sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');","position":{"start":{"line":148,"column":1,"offset":5280},"end":{"line":153,"column":4,"offset":5440},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, anywhere we wanted to use these functions we could use ","position":{"start":{"line":155,"column":1,"offset":5442},"end":{"line":155,"column":61,"offset":5502},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":155,"column":61,"offset":5502},"end":{"line":155,"column":69,"offset":5510},"indent":[]}},{"type":"text","value":". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:","position":{"start":{"line":155,"column":69,"offset":5510},"end":{"line":155,"column":226,"offset":5667},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5442},"end":{"line":155,"column":226,"offset":5667},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();","position":{"start":{"line":157,"column":1,"offset":5669},"end":{"line":162,"column":4,"offset":5743},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Importantly, the function that was ","position":{"start":{"line":164,"column":1,"offset":5745},"end":{"line":164,"column":36,"offset":5780},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":164,"column":37,"offset":5781},"end":{"line":164,"column":40,"offset":5784},"indent":[]}}],"position":{"start":{"line":164,"column":36,"offset":5780},"end":{"line":164,"column":41,"offset":5785},"indent":[]}},{"type":"text","value":" exported ","position":{"start":{"line":164,"column":41,"offset":5785},"end":{"line":164,"column":51,"offset":5795},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":164,"column":51,"offset":5795},"end":{"line":164,"column":53,"offset":5797},"indent":[]}},{"type":"inlineCode","value":"saySomething","position":{"start":{"line":164,"column":53,"offset":5797},"end":{"line":164,"column":67,"offset":5811},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":164,"column":67,"offset":5811},"end":{"line":164,"column":69,"offset":5813},"indent":[]}},{"type":"text","value":" is unavailable outside of the module.","position":{"start":{"line":164,"column":69,"offset":5813},"end":{"line":164,"column":107,"offset":5851},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5745},"end":{"line":164,"column":107,"offset":5851},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Also note that we supply a ","position":{"start":{"line":166,"column":1,"offset":5853},"end":{"line":166,"column":28,"offset":5880},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"relative path","position":{"start":{"line":166,"column":30,"offset":5882},"end":{"line":166,"column":43,"offset":5895},"indent":[]}}],"position":{"start":{"line":166,"column":28,"offset":5880},"end":{"line":166,"column":45,"offset":5897},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":166,"column":45,"offset":5897},"end":{"line":166,"column":49,"offset":5901},"indent":[]}},{"type":"inlineCode","value":"from","position":{"start":{"line":166,"column":49,"offset":5901},"end":{"line":166,"column":55,"offset":5907},"indent":[]}},{"type":"text","value":", indicating that the ES6 module is a local file as opposed to an npm package.","position":{"start":{"line":166,"column":55,"offset":5907},"end":{"line":166,"column":133,"offset":5985},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5853},"end":{"line":166,"column":133,"offset":5985},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of inserting an ","position":{"start":{"line":168,"column":1,"offset":5987},"end":{"line":168,"column":25,"offset":6011},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":168,"column":25,"offset":6011},"end":{"line":168,"column":33,"offset":6019},"indent":[]}},{"type":"text","value":" before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:","position":{"start":{"line":168,"column":33,"offset":6019},"end":{"line":168,"column":151,"offset":6137},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5987},"end":{"line":168,"column":151,"offset":6137},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nexport { sayHi, sayBye };","position":{"start":{"line":170,"column":1,"offset":6139},"end":{"line":177,"column":4,"offset":6312},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ","position":{"start":{"line":179,"column":1,"offset":6314},"end":{"line":179,"column":116,"offset":6429},"indent":[]}},{"type":"inlineCode","value":"import * as <Namespace>","position":{"start":{"line":179,"column":116,"offset":6429},"end":{"line":179,"column":141,"offset":6454},"indent":[]}},{"type":"text","value":" syntax:","position":{"start":{"line":179,"column":141,"offset":6454},"end":{"line":179,"column":149,"offset":6462},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":6314},"end":{"line":179,"column":149,"offset":6462},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();","position":{"start":{"line":181,"column":1,"offset":6464},"end":{"line":189,"column":4,"offset":6583},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Default export","position":{"start":{"line":191,"column":3,"offset":6587},"end":{"line":191,"column":17,"offset":6601},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6585},"end":{"line":191,"column":19,"offset":6603},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6585},"end":{"line":191,"column":19,"offset":6603},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The other type of export is a default export. A module can only contain one default export:","position":{"start":{"line":193,"column":1,"offset":6605},"end":{"line":193,"column":92,"offset":6696},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":6605},"end":{"line":193,"column":92,"offset":6696},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;","position":{"start":{"line":195,"column":1,"offset":6698},"end":{"line":204,"column":4,"offset":6909},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:","position":{"start":{"line":206,"column":1,"offset":6911},"end":{"line":206,"column":148,"offset":7058},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":6911},"end":{"line":206,"column":148,"offset":7058},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();","position":{"start":{"line":208,"column":1,"offset":7060},"end":{"line":213,"column":4,"offset":7146},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ","position":{"start":{"line":215,"column":1,"offset":7148},"end":{"line":215,"column":107,"offset":7254},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":215,"column":107,"offset":7254},"end":{"line":215,"column":118,"offset":7265},"indent":[]}},{"type":"text","value":", you can import ","position":{"start":{"line":215,"column":118,"offset":7265},"end":{"line":215,"column":135,"offset":7282},"indent":[]}},{"type":"inlineCode","value":"ReactDOM","position":{"start":{"line":215,"column":135,"offset":7282},"end":{"line":215,"column":145,"offset":7292},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":215,"column":145,"offset":7292},"end":{"line":215,"column":146,"offset":7293},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":215,"column":146,"offset":7293},"end":{"line":215,"column":148,"offset":7295},"indent":[]}},{"type":"text","value":"a default export","position":{"start":{"line":215,"column":148,"offset":7295},"end":{"line":215,"column":164,"offset":7311},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":215,"column":164,"offset":7311},"end":{"line":215,"column":166,"offset":7313},"indent":[]}},{"type":"text","value":" like this:","position":{"start":{"line":215,"column":166,"offset":7313},"end":{"line":215,"column":177,"offset":7324},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":7148},"end":{"line":215,"column":177,"offset":7324},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import ReactDOM from 'react-dom';\n\nReactDOM.render();","position":{"start":{"line":217,"column":1,"offset":7326},"end":{"line":221,"column":4,"offset":7389},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or, if you're only going to use the ","position":{"start":{"line":223,"column":1,"offset":7391},"end":{"line":223,"column":37,"offset":7427},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":223,"column":37,"offset":7427},"end":{"line":223,"column":47,"offset":7437},"indent":[]}},{"type":"text","value":" function, you can import the named ","position":{"start":{"line":223,"column":47,"offset":7437},"end":{"line":223,"column":83,"offset":7473},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":223,"column":83,"offset":7473},"end":{"line":223,"column":93,"offset":7483},"indent":[]}},{"type":"text","value":" function like this:","position":{"start":{"line":223,"column":93,"offset":7483},"end":{"line":223,"column":113,"offset":7503},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":7391},"end":{"line":223,"column":113,"offset":7503},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { render } from 'react-dom';\n\nrender();","position":{"start":{"line":225,"column":1,"offset":7505},"end":{"line":229,"column":4,"offset":7561},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To achieve this flexibility, the export implementation for ","position":{"start":{"line":231,"column":1,"offset":7563},"end":{"line":231,"column":60,"offset":7622},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":231,"column":60,"offset":7622},"end":{"line":231,"column":71,"offset":7633},"indent":[]}},{"type":"text","value":" looks something like this:","position":{"start":{"line":231,"column":71,"offset":7633},"end":{"line":231,"column":98,"offset":7660},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":7563},"end":{"line":231,"column":98,"offset":7660},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const render = (component, target) => {};\n\nconst ReactDOM = {\n    render\n};\n\nexport default ReactDOM;","position":{"start":{"line":233,"column":1,"offset":7662},"end":{"line":241,"column":4,"offset":7780},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to play around with the module syntax, check out the folder ","position":{"start":{"line":243,"column":1,"offset":7782},"end":{"line":243,"column":73,"offset":7854},"indent":[]}},{"type":"inlineCode","value":"code/webpack/es6-modules","position":{"start":{"line":243,"column":73,"offset":7854},"end":{"line":243,"column":99,"offset":7880},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":243,"column":99,"offset":7880},"end":{"line":243,"column":100,"offset":7881},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":7782},"end":{"line":243,"column":100,"offset":7881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more reading on ES6 modules, see this article from Mozilla: \"","position":{"start":{"line":245,"column":1,"offset":7883},"end":{"line":245,"column":66,"offset":7948},"indent":[]}},{"type":"link","title":null,"url":"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/","children":[{"type":"text","value":"ES6 in Depth: Modules","position":{"start":{"line":245,"column":67,"offset":7949},"end":{"line":245,"column":88,"offset":7970},"indent":[]}}],"position":{"start":{"line":245,"column":66,"offset":7948},"end":{"line":245,"column":146,"offset":8028},"indent":[]}},{"type":"text","value":"\".","position":{"start":{"line":245,"column":146,"offset":8028},"end":{"line":245,"column":148,"offset":8030},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":7883},"end":{"line":245,"column":148,"offset":8030},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":247,"column":4,"offset":8035},"end":{"line":247,"column":21,"offset":8052},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":8032},"end":{"line":247,"column":21,"offset":8052},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":249,"column":1,"offset":8054},"end":{"line":249,"column":8,"offset":8061},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":249,"column":8,"offset":8061},"end":{"line":249,"column":25,"offset":8078},"indent":[]}},{"type":"text","value":" often throughout the book. We use it in areas where we want to create a modified version of an existing object.","position":{"start":{"line":249,"column":25,"offset":8078},"end":{"line":249,"column":137,"offset":8190},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":8054},"end":{"line":249,"column":137,"offset":8190},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":251,"column":1,"offset":8192},"end":{"line":251,"column":18,"offset":8209},"indent":[]}},{"type":"text","value":" accepts any number of objects as arguments. When the function receives two arguments, it ","position":{"start":{"line":251,"column":18,"offset":8209},"end":{"line":251,"column":108,"offset":8299},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"copies","position":{"start":{"line":251,"column":109,"offset":8300},"end":{"line":251,"column":115,"offset":8306},"indent":[]}}],"position":{"start":{"line":251,"column":108,"offset":8299},"end":{"line":251,"column":116,"offset":8307},"indent":[]}},{"type":"text","value":" the properties of the second object onto the first, like so:","position":{"start":{"line":251,"column":116,"offset":8307},"end":{"line":251,"column":177,"offset":8368},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":8192},"end":{"line":251,"column":177,"offset":8368},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);","position":{"start":{"line":253,"column":1,"offset":8370},"end":{"line":258,"column":4,"offset":8496},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is idiomatic to pass in three arguments to ","position":{"start":{"line":260,"column":1,"offset":8498},"end":{"line":260,"column":47,"offset":8544},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":260,"column":47,"offset":8544},"end":{"line":260,"column":64,"offset":8561},"indent":[]}},{"type":"text","value":". The first argument is a new JavaScript object, the one that ","position":{"start":{"line":260,"column":64,"offset":8561},"end":{"line":260,"column":126,"offset":8623},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":260,"column":126,"offset":8623},"end":{"line":260,"column":143,"offset":8640},"indent":[]}},{"type":"text","value":" will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:","position":{"start":{"line":260,"column":143,"offset":8640},"end":{"line":260,"column":280,"offset":8777},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":8498},"end":{"line":260,"column":280,"offset":8777},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const coffeeWithMilk = Object.assign({}, coffee, { milk: true });","position":{"start":{"line":262,"column":1,"offset":8779},"end":{"line":264,"column":4,"offset":8854},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":266,"column":1,"offset":8856},"end":{"line":266,"column":18,"offset":8873},"indent":[]}},{"type":"text","value":" is a handy method for working with \"immutable\" JavaScript objects.","position":{"start":{"line":266,"column":18,"offset":8873},"end":{"line":266,"column":85,"offset":8940},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8856},"end":{"line":266,"column":85,"offset":8940},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Template literals","position":{"start":{"line":268,"column":4,"offset":8945},"end":{"line":268,"column":21,"offset":8962},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":8942},"end":{"line":268,"column":21,"offset":8962},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5 JavaScript, you'd interpolate variables into strings like this:","position":{"start":{"line":270,"column":1,"offset":8964},"end":{"line":270,"column":71,"offset":9034},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":8964},"end":{"line":270,"column":71,"offset":9034},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"var greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';","position":{"start":{"line":272,"column":1,"offset":9036},"end":{"line":274,"column":4,"offset":9120},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6 template literals, we can create the same string like this:","position":{"start":{"line":276,"column":1,"offset":9122},"end":{"line":276,"column":69,"offset":9190},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":9122},"end":{"line":276,"column":69,"offset":9190},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const greeting = `Hello, ${user}! It is ${degF} degrees outside.`;","position":{"start":{"line":278,"column":1,"offset":9192},"end":{"line":280,"column":4,"offset":9268},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The spread operator ","position":{"start":{"line":282,"column":4,"offset":9273},"end":{"line":282,"column":24,"offset":9293},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":282,"column":24,"offset":9293},"end":{"line":282,"column":26,"offset":9295},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":282,"column":26,"offset":9295},"end":{"line":282,"column":31,"offset":9300},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":282,"column":31,"offset":9300},"end":{"line":282,"column":33,"offset":9302},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9270},"end":{"line":282,"column":33,"offset":9302},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In arrays, the ellipsis ","position":{"start":{"line":284,"column":1,"offset":9304},"end":{"line":284,"column":25,"offset":9328},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":284,"column":25,"offset":9328},"end":{"line":284,"column":30,"offset":9333},"indent":[]}},{"type":"text","value":" operator will ","position":{"start":{"line":284,"column":30,"offset":9333},"end":{"line":284,"column":45,"offset":9348},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"expand","position":{"start":{"line":284,"column":46,"offset":9349},"end":{"line":284,"column":52,"offset":9355},"indent":[]}}],"position":{"start":{"line":284,"column":45,"offset":9348},"end":{"line":284,"column":53,"offset":9356},"indent":[]}},{"type":"text","value":" the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.","position":{"start":{"line":284,"column":53,"offset":9356},"end":{"line":284,"column":200,"offset":9503},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":9304},"end":{"line":284,"column":200,"offset":9503},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example:","position":{"start":{"line":286,"column":1,"offset":9505},"end":{"line":286,"column":20,"offset":9524},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":9505},"end":{"line":286,"column":20,"offset":9524},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);","position":{"start":{"line":288,"column":1,"offset":9526},"end":{"line":294,"column":4,"offset":9632},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice how this is different than if we wrote:","position":{"start":{"line":296,"column":1,"offset":9634},"end":{"line":296,"column":47,"offset":9680},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":9634},"end":{"line":296,"column":47,"offset":9680},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const d = [a, b, 7, 8, 9];\nconsole.log(d);","position":{"start":{"line":298,"column":1,"offset":9682},"end":{"line":301,"column":4,"offset":9734},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Enhanced object literals","position":{"start":{"line":303,"column":4,"offset":9739},"end":{"line":303,"column":28,"offset":9763},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":9736},"end":{"line":303,"column":28,"offset":9763},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, all objects were required to have explicit key and value declarations:","position":{"start":{"line":305,"column":1,"offset":9765},"end":{"line":305,"column":79,"offset":9843},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":9765},"end":{"line":305,"column":79,"offset":9843},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const explicit = {\n    getState: getState,\n    dispatch: dispatch\n};","position":{"start":{"line":307,"column":1,"offset":9845},"end":{"line":312,"column":4,"offset":9923},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, you can use this terser syntax whenever the property name and variable name are the same:","position":{"start":{"line":314,"column":1,"offset":9925},"end":{"line":314,"column":98,"offset":10022},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":9925},"end":{"line":314,"column":98,"offset":10022},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const implicit = {\n    getState,\n    dispatch\n};","position":{"start":{"line":316,"column":1,"offset":10024},"end":{"line":321,"column":4,"offset":10082},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.","position":{"start":{"line":323,"column":1,"offset":10084},"end":{"line":323,"column":161,"offset":10244},"indent":[]}}],"position":{"start":{"line":323,"column":1,"offset":10084},"end":{"line":323,"column":161,"offset":10244},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Default arguments","position":{"start":{"line":325,"column":4,"offset":10249},"end":{"line":325,"column":21,"offset":10266},"indent":[]}}],"position":{"start":{"line":325,"column":1,"offset":10246},"end":{"line":325,"column":21,"offset":10266},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6, you can specify a default value for an argument in the case that it is ","position":{"start":{"line":327,"column":1,"offset":10268},"end":{"line":327,"column":82,"offset":10349},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":327,"column":82,"offset":10349},"end":{"line":327,"column":93,"offset":10360},"indent":[]}},{"type":"text","value":" when the function is called.","position":{"start":{"line":327,"column":93,"offset":10360},"end":{"line":327,"column":122,"offset":10389},"indent":[]}}],"position":{"start":{"line":327,"column":1,"offset":10268},"end":{"line":327,"column":122,"offset":10389},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This:","position":{"start":{"line":329,"column":1,"offset":10391},"end":{"line":329,"column":6,"offset":10396},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":10391},"end":{"line":329,"column":6,"offset":10396},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}","position":{"start":{"line":331,"column":1,"offset":10398},"end":{"line":338,"column":4,"offset":10508},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Can be written as this:","position":{"start":{"line":340,"column":1,"offset":10510},"end":{"line":340,"column":24,"offset":10533},"indent":[]}}],"position":{"start":{"line":340,"column":1,"offset":10510},"end":{"line":340,"column":24,"offset":10533},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function divide(a, b = 1) {\n    return a / b;\n}","position":{"start":{"line":342,"column":1,"offset":10535},"end":{"line":346,"column":4,"offset":10592},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In both cases, using the function looks like this:","position":{"start":{"line":348,"column":1,"offset":10594},"end":{"line":348,"column":51,"offset":10644},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":10594},"end":{"line":348,"column":51,"offset":10644},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);","position":{"start":{"line":350,"column":1,"offset":10646},"end":{"line":356,"column":4,"offset":10707},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Whenever the argument ","position":{"start":{"line":358,"column":1,"offset":10709},"end":{"line":358,"column":23,"offset":10731},"indent":[]}},{"type":"inlineCode","value":"b","position":{"start":{"line":358,"column":23,"offset":10731},"end":{"line":358,"column":26,"offset":10734},"indent":[]}},{"type":"text","value":" in the example above is ","position":{"start":{"line":358,"column":26,"offset":10734},"end":{"line":358,"column":51,"offset":10759},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":358,"column":51,"offset":10759},"end":{"line":358,"column":62,"offset":10770},"indent":[]}},{"type":"text","value":", the default argument is used. Note that ","position":{"start":{"line":358,"column":62,"offset":10770},"end":{"line":358,"column":104,"offset":10812},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":358,"column":104,"offset":10812},"end":{"line":358,"column":110,"offset":10818},"indent":[]}},{"type":"text","value":" will not use the default argument:","position":{"start":{"line":358,"column":110,"offset":10818},"end":{"line":358,"column":145,"offset":10853},"indent":[]}}],"position":{"start":{"line":358,"column":1,"offset":10709},"end":{"line":358,"column":145,"offset":10853},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, null);","position":{"start":{"line":360,"column":1,"offset":10855},"end":{"line":362,"column":4,"offset":10882},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Destructuring assignments","position":{"start":{"line":364,"column":4,"offset":10887},"end":{"line":364,"column":29,"offset":10912},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":10884},"end":{"line":364,"column":29,"offset":10912},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For arrays","position":{"start":{"line":366,"column":5,"offset":10918},"end":{"line":366,"column":15,"offset":10928},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":10914},"end":{"line":366,"column":15,"offset":10928},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, extracting and assigning multiple elements from an array looked like this:","position":{"start":{"line":368,"column":1,"offset":10930},"end":{"line":368,"column":83,"offset":11012},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":10930},"end":{"line":368,"column":83,"offset":11012},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];","position":{"start":{"line":370,"column":1,"offset":11014},"end":{"line":374,"column":4,"offset":11119},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, we can use the destructuring syntax to accomplish the same task like this:","position":{"start":{"line":376,"column":1,"offset":11121},"end":{"line":376,"column":83,"offset":11203},"indent":[]}}],"position":{"start":{"line":376,"column":1,"offset":11121},"end":{"line":376,"column":83,"offset":11203},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const [veg1, veg2] = ['asparagus', 'broccoli', 'onion'];\nconsole.log(veg1);\nconsole.log(veg2);","position":{"start":{"line":378,"column":1,"offset":11205},"end":{"line":382,"column":4,"offset":11309},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ","position":{"start":{"line":384,"column":1,"offset":11311},"end":{"line":384,"column":134,"offset":11444},"indent":[]}},{"type":"inlineCode","value":"'onion'","position":{"start":{"line":384,"column":134,"offset":11444},"end":{"line":384,"column":143,"offset":11453},"indent":[]}},{"type":"text","value":" is ignored and has no variable bound to it.","position":{"start":{"line":384,"column":143,"offset":11453},"end":{"line":384,"column":187,"offset":11497},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":11311},"end":{"line":384,"column":187,"offset":11497},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For objects","position":{"start":{"line":386,"column":5,"offset":11503},"end":{"line":386,"column":16,"offset":11514},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":11499},"end":{"line":386,"column":16,"offset":11514},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can do something similar for extracting object properties into variables:","position":{"start":{"line":388,"column":1,"offset":11516},"end":{"line":388,"column":77,"offset":11592},"indent":[]}}],"position":{"start":{"line":388,"column":1,"offset":11516},"end":{"line":388,"column":77,"offset":11592},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const smoothie = {\n    fats: ['avocado', 'peanut butter', 'greek yogurt'],\n    liquids: ['almond milk'],\n    greens: ['spinach'],\n    fruits: ['blueberry', 'banana']\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);","position":{"start":{"line":390,"column":1,"offset":11594},"end":{"line":402,"column":4,"offset":11855},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameter context matching","position":{"start":{"line":404,"column":5,"offset":11861},"end":{"line":404,"column":31,"offset":11887},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":11857},"end":{"line":404,"column":31,"offset":11887},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:","position":{"start":{"line":406,"column":1,"offset":11889},"end":{"line":406,"column":121,"offset":12009},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":11889},"end":{"line":406,"column":121,"offset":12009},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const containsSpinach = ({ greens }) => {\n    if (greens.find((g) => g === 'spinach')) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\ncontainsSpinach(smoothie);","position":{"start":{"line":408,"column":1,"offset":12011},"end":{"line":418,"column":4,"offset":12202},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We do this often with functional React components:","position":{"start":{"line":420,"column":1,"offset":12204},"end":{"line":420,"column":51,"offset":12254},"indent":[]}}],"position":{"start":{"line":420,"column":1,"offset":12204},"end":{"line":420,"column":51,"offset":12254},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const IngredientList = ({ ingredients, onClick }) => (\n    <ul className=\"IngredientList\">\n        {ingredients.map((i) => (\n            <li key={i.id} onClick={() => onClick(i.id)} className=\"item\">\n                {i.name}\n            </li>\n        ))}\n    </ul>\n);","position":{"start":{"line":422,"column":1,"offset":12256},"end":{"line":432,"column":4,"offset":12533},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here, we use destructuring to extract the props into variables ","position":{"start":{"line":434,"column":1,"offset":12535},"end":{"line":434,"column":64,"offset":12598},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":434,"column":64,"offset":12598},"end":{"line":434,"column":66,"offset":12600},"indent":[]}},{"type":"inlineCode","value":"ingredients","position":{"start":{"line":434,"column":66,"offset":12600},"end":{"line":434,"column":79,"offset":12613},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":434,"column":79,"offset":12613},"end":{"line":434,"column":84,"offset":12618},"indent":[]}},{"type":"inlineCode","value":"onClick","position":{"start":{"line":434,"column":84,"offset":12618},"end":{"line":434,"column":93,"offset":12627},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":434,"column":93,"offset":12627},"end":{"line":434,"column":95,"offset":12629},"indent":[]}},{"type":"text","value":" that we then use inside the component's function body.","position":{"start":{"line":434,"column":95,"offset":12629},"end":{"line":434,"column":150,"offset":12684},"indent":[]}}],"position":{"start":{"line":434,"column":1,"offset":12535},"end":{"line":434,"column":150,"offset":12684},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":435,"column":1,"offset":12685}}}}